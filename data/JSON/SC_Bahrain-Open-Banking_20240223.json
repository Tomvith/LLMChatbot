{
  "openapi": "3.0.0",
  "info": {
    "title": "Open Banking APIs",
    "description": "\n##### Introduction\nThe Open Banking APIs can be consumed by any trusted third-party provider who can present the data to customers to manage multiple bank accounts, shopping, paying bills, etc. \n<hr />\n<h5>Authentication</h5>\n<p>To make a request to any of the APIs, the Client has to present an Access Token, following the OAuth 2.0/OIDC specifications. Here is the API endpoint for getting an OAuth 2.0 Token.</p>\n<p><strong>https://api.sc.com/retail/v1/oauth2/token</strong></p> The following are the request parameters to be passed to the Token endpoint for both client_credentials, authorization_code grant. We don't support Implicit grant type.\n<hr />\n<h5>Parameters</h5>\n <table>\n  <thead>\n    <tr>\n      <th width='15%'>Key</th>\n      <th width='85%'>Value</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>X-Market</td>\n      <td>Required. Should be set to a 2 digit ISO standard country code. This specifies the TPP's market base.</td>\n    </tr>\n    <tr>\n      <td>x-fapi-interaction-id</td>\n      <td>Required. Correlation-id which will be used to track each request that's being originated</td>\n    </tr>\n    <tr>\n      <td>grant_type</td>\n      <td>Required. Indicates the type of grant being presented in exchange for an access token and possibly a refresh token, for more details, please refer to the table below</td>\n    </tr>\n    <tr>\n      <td>client_id</td>\n      <td>Required. The public identifier for the application, obtained when the caller first registered the application</td>\n    </tr>\n    <tr>\n      <td>client_secret</td>\n      <td>Required as per OAuth formulated flows. The application’s client secret. This ensures that the request to get the access token is made only from the application, and not from a potential attacker that may have intercepted the authorization code.</td>\n    </tr>\n    <tr>\n      <td>scope</td>\n      <td>Required. The authorization and token endpoints allow the client to specify the scope of the access request using the \"scope\" request parameter.  <br>In turn, the authorization server uses the \"scope\" response parameter to inform the client of the scope of the access token issued. The value of the scope parameter is expressed as a list of space-delimited, case-sensitive strings.  The strings are defined by the authorization server. <br> If the value contains multiple space-delimited strings, their order does not matter, and each string adds an additional access range to the requested scope.<br> The possible scope values and thier appropriate usage are : <br> accounts-consent : To fetch client_credentials grant token to access the /accounts-access-consent API<br> accounts-list : To perform authorization with the bank, accounts has to be listed <br> accounts : used in conjunction with accounts-list scope for authorization of the PSU accounts for AISP flow</td>\n    </tr>\n    <tr>\n      <td>response_type</td>\n      <td>Required. The response_type must be \"code\" to use the standard OAuth code grant flow.<br> It must be \"token\" in code exchange flow.</td>\n    </tr>\n    <tr>\n      <td>consent-id</td>\n      <td>Required. Intent ID for which the authorization is expected from an PSU</td>\n    </tr>\n    <tr>\n      <td>state</td>\n      <td>Optional. Specified by the client, which will be relayed back as such to clients</td>\n    </tr>\n    <tr>\n      <td>redirect_uri</td>\n      <td>Required. Registered redirect URI during on-boarding</td>\n    </tr>\n    <tr>\n      <td>code</td>\n      <td>Required. The authorization code which has to be exchanged for an access token</td>\n    </tr>\n    </tbody>\n</table> <hr /> <table>\n  <thead>\n    <tr>\n      <th width='15%'>Grant Type</th>\n      <th width='85%'>Usage</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Client credentials</td>\n      <td>For the client app to identify itself to the SC API platform, the <code> /token </code> endpoint has to be called with query param <code>grant_type</code> set to <code>client_credentials</code></td>\n    </tr>\n    <tr>\n      <td>Auth-code based grant</td>\n      <td>For the client app to identify itself to the SC API platform, the <code> /token </code> endpoint has to be called with query param <code>grant_type</code> set to <code>auth_code_grant</code></td>\n    </tr>\n  </tbody>\n</table>\n## Encryption and Signing\nEncryption and Signing uses JSON Web Tokens (JWT), an open industry standard <a href=\"https://tools.ietf.org/html/rfc7519\">RFC7519</a> method to represent claims securely across two parties.\n### Algorithms\nSCB provides support for the below-mentioned algorithms, which are specified in the JOSE Header, as per <a href=\"https://tools.ietf.org/html/rfc7515\">JSON Web Signature</a> (JWS) and <a href=\"https://tools.ietf.org/html/rfc7516#section-4.1.12\">JSON Web Encryption</a> (JWE) Standards.\n <table>\n  <thead>\n    <tr>\n      <th width='25%'>Standard</th>\n      <th width='25%'>Algorithm</th>\n      <th width='70%'>JOSE Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>JSON Web Signature (JWS)</td>\n      <td>ES256</td>\n      <td>\n        kid: (key id)\n        cty: JWS\n        alg: ES256\n      </td>\n    </tr>\n    <tr>\n      <td>JSON Web Encryption (JWE)</td>\n      <td>RSA-OAEP-256 (Asymmetric)</td>\n      <td>\n          kid: (key id)\n          cty: JWT\n          alg: RSA-OAEP-256\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n<hr/>\n\n## Guide for JWE and JWS\nAs per SCB API Security standards, SCB uses Compact Serialization for its <a href=\"https://tools.ietf.org/html/rfc7515#section-7.1\">JWS</a>/<a href=\"https://tools.ietf.org/html/rfc7516#section-3.1\">JWE</a> representation. The content to be sent to the client <b>is first signed following JWS specifications</b> and <b>then encrypted and sent as a JWE to the client</b>. Specifics for creating each component are as shown below:\n### JSON Web Signature\nThe following describes the structure of our JWS.\n\n**Message** : Content to be sent to client\n\n**JWS Payload** : BASE64URL-ENCODE(Message)\n\n**Signature** : ASCII(BASE64URL-ENCODE(UTF8(JOSE Header))‘.’BASE64URL-ENCODE(JWS Payload))\n\n**Structure** : BASE64URL(UTF8(JOSE Header))‘.’BASE64URL(JWS Payload)‘.’BASE64URL(JWS Signature)\n<hr/>\n\n### JSON Web Encryption\nThe following describes the structure of our JWE. The payload in our JWE is the JWS we have created in the steps above. The JOSE header of JWE contains both symmetric and asymmetric encryptions. Symmetric encryption to encrypt the payload, and assymetric encryption to encrypt the symmetric key. The assymetric keypair belongs to the client who will be receiving the JWE.\n\n**JWE Payload** : JWS Signature (from above)\n\n**JWE Ciphertext** : *ENCRYPT-SYMMETRIC*(JWE Payload)\n\n**JWE Encrypted Key** : *ENCRYPT-ASYMMETRIC*(Symmetric Key) - using client's public key\n\n**Structure** : BASE64URL-ENCODE(UTF8(JWE Header))‘.’BASE64URL-ENCODE(JWE Encrypted Key)‘.’BASE64URL-ENCODE(JWE Initialization Vector)‘.’BASE64URL-ENCODE(JWE Ciphertext)‘.’BASE64URL-ENCODE(JWE Authentication Tag)\n<hr />\n",
    "contact": {
      "name": "SC API Support"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.sc.com",
      "description": "Production"
    },
    {
      "url": "https://developer.sc.com/sandbox/retail/v1",
      "description": "aXess sandbox"
    }
  ],
  "tags": [
    {
      "name": "Open Banking Accounts API",
      "description": "Provides account information, balances and  information about transactions.",
      "x-subcategory": "Bahrain Open Banking"
    },
    {
      "name": "Open Banking Payments API",
      "description": "Provides Payment Consent, Information and Initiation.",
      "x-subcategory": "Bahrain Open Banking"
    }
  ],
  "paths": {
    "/retail/v1/oauth2/jwk/keys/public": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "OIDC API's"
        ],
        "summary": "Public key used for JWT Signing verification",
        "operationId": "PublicKey",
        "x-markets": "BH",
        "responses": {
          "200": {
            "description": "Public key used for token signature verification and their Algorithm & Key type",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PublicKeyResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": false
      }
    },
    "/retail/v1/oauth2/openid-configuration": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "OIDC API's"
        ],
        "summary": "Well-known URL for Open Banking per OIDC standard",
        "operationId": "Well-knownConfiguration",
        "x-markets": "BH",
        "responses": {
          "200": {
            "description": "Well-known Configuration details to access the OIDC specific API for Open Banking",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WellKnownResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "deprecated": false
      }
    },
    "/retail/v1/account-access-consents": {
      "post": {
        "tags": [
          "Open Banking Accounts API",
          "Account Access Consents"
        ],
        "summary": "Create Account Access Consents",
        "operationId": "createAccountAccessConsents",
        "x-markets": "BH",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OBReadConsent1"
              }
            }
          }
        },
        "description": "The AISP connects to the Bank and creates an account-access-consent resource. This informs the Bank that one of the customers is granting access to account and transaction information to the AISP. The Banks responds with an identifier for the resource.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Market. Example: BH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier of the desired financial institution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK. Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBReadConsent1"
                }
              }
            }
          },
          "201": {
            "description": "Account Access Consents Created"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/retail/v1/account-access-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "Account Access Consents"
        ],
        "summary": "Get Account Access Consents",
        "x-markets": "BH",
        "operationId": "getAccountAccessConsentsConsentId",
        "description": "The AISP creates an account-access-consent resource by making a POST request. GET request will help the AISP to check the status whether it is authorized by the customer or not.",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "ConsentId",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Market. Example: BH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "Unique identifier of the desired financial institution",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account Access Consents Read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBReadConsent1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": []
          }
        ]
      }
    },
    "/retail/v1/accounts": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "Accounts"
        ],
        "summary": "Get Accounts",
        "x-markets": "BH",
        "operationId": "getAccounts",
        "description": "An AISP will be given the full list of accounts that the customer has authorised the AISP to access.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Market. Example: BH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "description": "Unique identifier of the desired financial institution",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts Read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBReadAccount4"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": []
          }
        ]
      }
    },
    "/retail/v1/accounts/{AccountId}/balances": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "Balances"
        ],
        "summary": "Get Balances",
        "x-markets": "BH",
        "operationId": "getAccountsAccountIdBalances",
        "description": "An AISP will get the account balance information for a specific AccountId which is authorized by the customer.",
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "description": "AccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Market. Example: BH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "description": "Unique identifier of the desired financial institution",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Balances Read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBReadBalance1"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": []
          }
        ]
      }
    },
    "/retail/v1/accounts/{AccountId}/transactions": {
      "get": {
        "tags": [
          "Open Banking Accounts API",
          "Transactions"
        ],
        "summary": "Get Transactions",
        "x-markets": "BH",
        "operationId": "getAccountsAccountIdTransactions",
        "description": "An AISP will get the account transaction information for a specific AccountId which is authorized by the customer.",
        "parameters": [
          {
            "name": "AccountId",
            "in": "path",
            "description": "AccountId",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "An Authorisation Token",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Market. Example: BH",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "description": "Unique identifier of the desired financial institution",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Transactions Read",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBReadTransaction5"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "405": {
            "description": "Method Not Allowed"
          },
          "406": {
            "description": "Not Acceptable"
          },
          "429": {
            "description": "Too Many Requests"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "security": [
          {
            "PSUOAuth2Security": []
          }
        ]
      }
    },
    "/retail/v1/domestic-payment-consents": {
      "post": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Payments Consents"
        ],
        "summary": "Create Domestic Payment Consents",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBDomesticPaymentConsentRequest"
        },
        "responses": {
          "201": {
            "description": "Domestic Payment Consents Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/v1/domestic-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Payments Consents"
        ],
        "summary": "Get Domestic Payment Consents by ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "Consent Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Payment Consents Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/v1/domestic-payments": {
      "post": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Payments"
        ],
        "summary": "Create Domestic Payments",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBDomesticPaymentRequest"
        },
        "responses": {
          "201": {
            "description": "Domestic Payments Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/v1/domestic-payments/{DomesticPaymentId}": {
      "get": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Payments"
        ],
        "summary": "Get Domestic Payments by DomesticPaymentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "DomesticPaymentId",
            "in": "path",
            "description": "Domestic Payment Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Payments Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payment-consents": {
      "post": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payment Consents"
        ],
        "summary": "Create Domestic Future Dated Payment Consents",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteDomesticFutureDatedConsentRequest"
        },
        "responses": {
          "201": {
            "description": "Domestic Future Dated Payment Consents Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payment Consents"
        ],
        "summary": "Get Domestic Future Dated Payment Consents by ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "Consent Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Future Dated Payment Consents Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payment-cancellation-consents": {
      "post": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payment Consents"
        ],
        "summary": "Create Domestic Future Dated Payment Cancellation Consents",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteDomesticFutureDatedCancellationConsentRequest"
        },
        "responses": {
          "201": {
            "description": "Domestic Future Dated Payment Cancellation Consents Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payment-cancellation-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payment Consents"
        ],
        "summary": "Get Domestic Future Dated Payment Cancellation Consents by ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "Consent Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Future Dated Payment Cancellation Consents Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payments": {
      "post": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payments"
        ],
        "summary": "Create Domestic Future Dated Payments",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteDomesticFutureDatedPaymentRequest"
        },
        "responses": {
          "201": {
            "description": "Domestic Future Dated Payments Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-future-dated-payments/{DomesticFutureDatedPaymentId}": {
      "get": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payments"
        ],
        "summary": "Get Domestic Future Dated Payments by DomesticFutureDatedPaymentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "DomesticFutureDatedPaymentId",
            "in": "path",
            "description": "Domestic FutureDated Payment Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Future Dated Payments Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Open Banking Payments API",
          "Domestic Future Dated Payments"
        ],
        "summary": "Patch Domestic Future Dated Payments by DomesticFutureDatedPaymentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "DomesticFutureDatedPaymentId",
            "in": "path",
            "description": "Domestic FutureDated Payment Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBPatchDomesticFutureDatedPaymentRequest"
        },
        "responses": {
          "200": {
            "description": "Domestic Future Dated Payments Status Updated Successfully",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-standing-order-consents": {
      "post": {
        "tags": [
          "Domestic Standing Orders Consents",
          "Open Banking Payments API"
        ],
        "x-markets": "BH",
        "summary": "Create Domestic Standing Order Consents",
        "operationId": "CreateDomesticStandingOrderConsents",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteDomesticStandingOrderConsent"
        },
        "responses": {
          "201": {
            "description": "Domestic Standing Order Consents Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-standing-order-consents/{ConsentId}": {
      "get": {
        "tags": [
          "Domestic Standing Orders Consents",
          "Open Banking Payments API"
        ],
        "x-markets": "BH",
        "summary": "Get Domestic Standing Order Consents",
        "operationId": "GetDomesticStandingOrderConsentsConsentId",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "ConsentId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Standing Order Consents Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-standing-orders": {
      "post": {
        "tags": [
          "Domestic Standing Orders",
          "Open Banking Payments API"
        ],
        "x-markets": "BH",
        "summary": "Create Domestic Standing Orders",
        "operationId": "CreateDomesticStandingOrders",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteDomesticStandingOrder"
        },
        "responses": {
          "201": {
            "description": "Domestic Standing Orders Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "UserOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/domestic-standing-orders/{DomesticStandingOrderId}": {
      "get": {
        "tags": [
          "Domestic Standing Orders",
          "Open Banking Payments API"
        ],
        "x-markets": "BH",
        "summary": "Get Domestic Standing Orders",
        "operationId": "GetDomesticStandingOrdersDomesticStandingOrderId",
        "parameters": [
          {
            "name": "DomesticStandingOrderId",
            "in": "path",
            "description": "DomesticStandingOrderId",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nSun, 10 Sep 2017 19:43:31 UTC",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Domestic Standing Orders Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-future-dated-payment-consents": {
      "post": {
        "tags": [
          "International Future Dated Payment Consents",
          "Open Banking Payments API"
        ],
        "summary": "Create International Future Dated Payment Consents",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalFutureDatedPaymentConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalFutureDatedConsentParam"
        }
      }
    },
    "/retail/ob/bh/v1/international-future-dated-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Future Dated Payment Consents",
          "Open Banking Payments API"
        ],
        "summary": "Get International Future Dated Payment Consents ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalFutureDatedPaymentConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-future-dated-payments": {
      "post": {
        "tags": [
          "International Future Dated Payments",
          "Open Banking Payments API"
        ],
        "summary": "Create International Future Dated Payments",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalFutureDatedPaymentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "UserOAuth2Security": [
              "payments"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalFutureDatedParam"
        }
      }
    },
    "/retail/ob/bh/v1/international-future-dated-payments/{InternationalFutureDatedPaymentId}": {
      "get": {
        "tags": [
          "International Future Dated Payments",
          "Open Banking Payments API"
        ],
        "summary": "Get International Future Dated Payments",
        "x-markets": "BH",
        "operationId": "GetInternationalFutureDatedPaymentsInternationalFutureDatedPaymentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/InternationalFutureDatedPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalFutureDatedPaymentsInternationalFutureDatedPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-standing-order-consents": {
      "post": {
        "tags": [
          "International Standing Order Consents",
          "Open Banking Payments API"
        ],
        "summary": "Create International Standing Order Consents",
        "operationId": "CreateInternationalStandingOrderConsents",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalStandingOrderConsentsCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalStandingOrderConsentParam"
        }
      }
    },
    "/retail/ob/bh/v1/international-standing-order-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Standing Order Consents",
          "Open Banking Payments API"
        ],
        "summary": "Get International Standing Order Consents ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalStandingOrderConsentsConsentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-standing-orders": {
      "post": {
        "tags": [
          "International Standing Orders",
          "Open Banking Payments API"
        ],
        "summary": "Create International Standing Orders",
        "operationId": "CreateInternationalStandingOrders",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-idempotency-key"
          },
          {
            "$ref": "#/components/parameters/x-jws-signature"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "201": {
            "$ref": "#/components/responses/201InternationalStandingOrdersCreated"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "UserOAuth2Security": [
              "payments"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalStandingOrderParam"
        }
      }
    },
    "/retail/ob/bh/v1/international-standing-orders/{InternationalStandingOrderPaymentId}": {
      "get": {
        "tags": [
          "International Standing Orders",
          "Open Banking Payments API"
        ],
        "summary": "Get International Standing Orders International Standing Order PaymentId",
        "x-markets": "BH",
        "parameters": [
          {
            "$ref": "#/components/parameters/InternationalStandingOrderPaymentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          },
          {
            "$ref": "#/components/parameters/x-market"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200InternationalStandingOrdersInternationalStandingOrderPaymentIdRead"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-payment-consents": {
      "post": {
        "tags": [
          "International Payment Consents",
          "Open Banking Payments API"
        ],
        "summary": "Create International Payment Consents",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-market",
            "in": "header",
            "description": "BH country code",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalConsent"
        },
        "responses": {
          "201": {
            "description": "International Payment Consents Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteInternationalConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-payment-consents/{ConsentId}": {
      "get": {
        "tags": [
          "International Payment Consents",
          "Open Banking Payments API"
        ],
        "summary": "Get International Payment Consents by ConsentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "ConsentId",
            "in": "path",
            "description": "Consent Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-market",
            "in": "header",
            "description": "BH country code",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "International Payment Consents Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteInternationalConsentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-payments": {
      "post": {
        "tags": [
          "International Payments",
          "Open Banking Payments API"
        ],
        "summary": "Create International Payments",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-idempotency-key",
            "in": "header",
            "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "maxLength": 40,
              "pattern": "^(?!\\s)(.*)(\\S)$",
              "type": "string"
            }
          },
          {
            "name": "x-jws-signature",
            "in": "header",
            "description": "A detached JWS signature of the body of the payload.",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-market",
            "in": "header",
            "description": "BH country code",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBWriteInternationalParam"
        },
        "responses": {
          "201": {
            "description": "International Payments Created",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "PSUOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/international-payments/{InternationalPaymentId}": {
      "get": {
        "tags": [
          "International Payments",
          "Open Banking Payments API"
        ],
        "summary": "Get International Payments by InternationalPaymentId",
        "x-markets": "BH",
        "parameters": [
          {
            "name": "InternationalPaymentId",
            "in": "path",
            "description": "International Payment Id",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-auth-date",
            "in": "header",
            "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
              "type": "string"
            }
          },
          {
            "name": "x-fapi-customer-ip-address",
            "in": "header",
            "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-fapi-interaction-id",
            "in": "header",
            "description": "An RFC4122 UID used as a correlation id.",
            "required": false,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Authorisation",
            "in": "header",
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "x-market",
            "in": "header",
            "description": "BH country code",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "International Payments Read",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "405": {
            "description": "Method Not Allowed",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "406": {
            "description": "Not Acceptable",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "429": {
            "description": "Too Many Requests",
            "headers": {
              "Retry-After": {
                "description": "Number in seconds to wait",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "integer"
                }
              },
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "headers": {
              "x-fapi-interaction-id": {
                "description": "An RFC4122 UID used as a correlation id.",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              },
              "x-jws-signature": {
                "description": "Header containing a detached JWS signature of the body of the payload.\n",
                "style": "simple",
                "explode": false,
                "schema": {
                  "type": "string"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OBErrorResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "payments"
            ]
          }
        ]
      }
    },
    "/retail/ob/bh/v1/account-access-consents/{ConsentId}": {
      "patch": {
        "tags": [
          "Open Banking Accounts API",
          "Account Access Consents"
        ],
        "x-markets": "BH",
        "summary": "Revoke Account Access Consent Status by ConsentId",
        "parameters": [
          {
            "$ref": "#/components/parameters/ConsentId"
          },
          {
            "$ref": "#/components/parameters/x-fapi-auth-date"
          },
          {
            "$ref": "#/components/parameters/x-fapi-customer-ip-address"
          },
          {
            "$ref": "#/components/parameters/x-fapi-interaction-id"
          },
          {
            "$ref": "#/components/parameters/Authorisation"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/200AccountAccessConsentsConsentIdPatched"
          },
          "400": {
            "$ref": "#/components/responses/400Error"
          },
          "401": {
            "$ref": "#/components/responses/401Error"
          },
          "403": {
            "$ref": "#/components/responses/403Error"
          },
          "404": {
            "$ref": "#/components/responses/404Error"
          },
          "405": {
            "$ref": "#/components/responses/405Error"
          },
          "406": {
            "$ref": "#/components/responses/406Error"
          },
          "429": {
            "$ref": "#/components/responses/429Error"
          },
          "500": {
            "$ref": "#/components/responses/500Error"
          }
        },
        "security": [
          {
            "TPPOAuth2Security": [
              "accounts"
            ]
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/OBPatchAccountAccessConsentRequest"
        }
      }
    }
  },
  "components": {
    "parameters": {
      "ConsentId": {
        "name": "ConsentId",
        "in": "path",
        "description": "Consent Id",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-auth-date": {
        "name": "x-fapi-auth-date",
        "in": "header",
        "description": "The time when the PSU last logged in with the TPP. \nAll dates in the HTTP headers are represented as RFC 7231 Full Dates. An example is below: \nWed, 27 May 2020 19:43:31 GMT+03:00",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "pattern": "^(Mon|Tue|Wed|Thu|Fri|Sat|Sun), \\d{2} (Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec) \\d{4} \\d{2}:\\d{2}:\\d{2} (GMT|UTC)[+-][0-9]{2}:[0-9]{2}$",
          "type": "string"
        }
      },
      "x-fapi-customer-ip-address": {
        "name": "x-fapi-customer-ip-address",
        "in": "header",
        "description": "The PSU's IP address if the PSU is currently logged in with the TPP.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-fapi-interaction-id": {
        "name": "x-fapi-interaction-id",
        "in": "header",
        "description": "An RFC4122 UID used as a correlation id.",
        "required": false,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "Authorisation": {
        "name": "Authorisation",
        "in": "header",
        "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-idempotency-key": {
        "name": "x-idempotency-key",
        "in": "header",
        "description": "Every request will be processed only once per x-idempotency-key.  The\nIdempotency Key will be valid for 24 hours.\n",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "maxLength": 40,
          "pattern": "^(?!\\s)(.*)(\\S)$",
          "type": "string"
        }
      },
      "x-jws-signature": {
        "name": "x-jws-signature",
        "in": "header",
        "description": "A detached JWS signature of the body of the payload.",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "x-market": {
        "name": "x-market",
        "in": "header",
        "description": "BH country code",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "DomesticPaymentId": {
        "name": "DomesticPaymentId",
        "in": "path",
        "description": "Domestic Payment Id",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "DomesticFutureDatedPaymentId": {
        "name": "DomesticFutureDatedPaymentId",
        "in": "path",
        "description": "Domestic FutureDated Payment Id",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "InternationalFutureDatedPaymentId": {
        "name": "InternationalFutureDatedPaymentId",
        "in": "path",
        "description": "InternationalFutureDatedPaymentId",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "InternationalStandingOrderPaymentId": {
        "name": "InternationalStandingOrderPaymentId",
        "in": "path",
        "description": "InternationalStandingOrderPaymentId",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      },
      "DomesticStandingOrderId": {
        "name": "DomesticStandingOrderId",
        "in": "path",
        "description": "DomesticStandingOrderId",
        "required": true,
        "style": "simple",
        "explode": false,
        "schema": {
          "type": "string"
        }
      }
    },
    "requestBodies": {
      "OBPatchAccountAccessConsentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBPatchAccountAccessConsentRequest"
            }
          }
        },
        "required": true
      },
      "OBDomesticPaymentConsentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest"
            }
          }
        },
        "required": true
      },
      "OBDomesticPaymentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentRequest"
            }
          }
        },
        "required": true
      },
      "OBWriteDomesticFutureDatedConsentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsent"
            }
          }
        },
        "required": true
      },
      "OBWriteDomesticFutureDatedCancellationConsentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsent"
            }
          }
        }
      },
      "OBWriteDomesticFutureDatedPaymentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPayment"
            }
          }
        },
        "required": true
      },
      "OBPatchDomesticFutureDatedPaymentRequest": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBPatchDomesticFutureDatedPayment"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalConsent": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalConsent"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternational"
            }
          }
        },
        "required": true
      },
      "OBWriteFileConsentParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileConsent"
            }
          }
        },
        "required": true
      },
      "FileParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/File"
            }
          }
        },
        "required": true
      },
      "OBWriteFileParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFile"
            }
          }
        },
        "required": true
      },
      "OBWriteDomesticStandingOrderConsent": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent"
            }
          }
        },
        "required": true
      },
      "OBWriteDomesticStandingOrder": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrder"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalFutureDatedConsentParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDatedConsent"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalFutureDatedParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDated"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalStandingOrderConsentParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsent"
            }
          }
        },
        "required": true
      },
      "OBWriteInternationalStandingOrderParam": {
        "description": "Default",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrder"
            }
          }
        },
        "required": true
      }
    },
    "responses": {
      "201DomesticPaymentConsentsCreated": {
        "description": "Domestic Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse"
            }
          }
        }
      },
      "200DomesticPaymentConsentsConsentIdRead": {
        "description": "Domestic Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse"
            }
          }
        }
      },
      "200DomesticPaymentConsentsConsentIdFundsConfirmationRead": {
        "description": "Domestic Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse"
            }
          }
        }
      },
      "201DomesticPaymentsCreated": {
        "description": "Domestic Payments Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse"
            }
          }
        }
      },
      "200DomesticPaymentsDomesticPaymentIdRead": {
        "description": "Domestic Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse"
            }
          }
        }
      },
      "200DomesticPaymentsDomesticPaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentDetailsResponse"
            }
          }
        }
      },
      "201DomesticFutureDatedPaymentConsentsCreated": {
        "description": "Domestic Future Dated Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsentResponse"
            }
          }
        }
      },
      "200DomesticFutureDatedPaymentConsentsConsentIdRead": {
        "description": "Domestic Future Dated Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsentResponse"
            }
          }
        }
      },
      "201DomesticFutureDatedPaymentCancellationConsentsCreated": {
        "description": "Domestic Future Dated Payment Cancellation Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse"
            }
          }
        }
      },
      "200DomesticFutureDatedPaymentCancellationConsentsConsentIdRead": {
        "description": "Domestic Future Dated Payment Cancellation Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse"
            }
          }
        }
      },
      "201DomesticFutureDatedPaymentsCreated": {
        "description": "Domestic Future Dated Payments Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
            }
          }
        }
      },
      "200DomesticFutureDatedPaymentsDomesticFutureDatedPaymentIdRead": {
        "description": "Domestic Future Dated Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
            }
          }
        }
      },
      "200DomesticFutureDatedPaymentsDomesticFutureDatedPaymentIdPatched": {
        "description": "Domestic Future Dated Payments Status Updated Successfully",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse"
            }
          }
        }
      },
      "200DomesticFutureDatedPaymentsDomesticFutureDatedPaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse"
            }
          }
        }
      },
      "201InternationalPaymentConsentsCreated": {
        "description": "International Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalConsentResponse"
            }
          }
        }
      },
      "200InternationalPaymentConsentsConsentIdRead": {
        "description": "International Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalConsentResponse"
            }
          }
        }
      },
      "200InternationalPaymentConsentsConsentIdFundsConfirmationRead": {
        "description": "International Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse"
            }
          }
        }
      },
      "201InternationalPaymentsCreated": {
        "description": "International Payments Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse"
            }
          }
        }
      },
      "200InternationalPaymentsInternationalPaymentIdRead": {
        "description": "International Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse"
            }
          }
        }
      },
      "200InternationalPaymentsInternationalPaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse"
            }
          }
        }
      },
      "201FilePaymentConsentsCreated": {
        "description": "File Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileConsentResponse"
            }
          }
        }
      },
      "200FilePaymentConsentsConsentIdRead": {
        "description": "File Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileConsentResponse"
            }
          }
        }
      },
      "200FilePaymentConsentsConsentIdFileCreated": {
        "description": "File Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "200FilePaymentConsentsConsentIdFileRead": {
        "description": "File Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },
      "201FilePaymentsCreated": {
        "description": "File Payments Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileResponse"
            }
          }
        }
      },
      "200FilePaymentsFilePaymentIdRead": {
        "description": "File Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFileResponse"
            }
          }
        }
      },
      "200FilePaymentsFilePaymentIdReportFileRead": {
        "description": "File Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/File"
            }
          }
        }
      },
      "200FilePaymentsFilePaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse"
            }
          }
        }
      },
      "400Error": {
        "description": "Bad request",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse"
            }
          }
        }
      },
      "401Error": {
        "description": "Unauthorized",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "403Error": {
        "description": "Forbidden",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse"
            }
          }
        }
      },
      "404Error": {
        "description": "Not found",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "405Error": {
        "description": "Method Not Allowed",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "406Error": {
        "description": "Not Acceptable",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "429Error": {
        "description": "Too Many Requests",
        "headers": {
          "Retry-After": {
            "description": "Number in seconds to wait",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        }
      },
      "500Error": {
        "description": "Internal Server Error",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBErrorResponse"
            }
          }
        }
      },
      "201DomesticStandingOrderConsentsCreated": {
        "description": "Domestic Standing Order Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse"
            }
          }
        }
      },
      "200DomesticStandingOrderConsentsConsentIdRead": {
        "description": "Domestic Standing Order Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse"
            }
          }
        }
      },
      "201DomesticStandingOrdersCreated": {
        "description": "Domestic Standing Orders Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse"
            }
          }
        }
      },
      "200DomesticStandingOrdersDomesticStandingOrderIdRead": {
        "description": "Domestic Standing Orders Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse"
            }
          }
        }
      },
      "200DomesticStandingOrdersDomesticStandingOrderIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse"
            }
          }
        }
      },
      "201InternationalFutureDatedPaymentConsentsCreated": {
        "description": "International Future Dated Payment Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDatedConsentResponse"
            }
          }
        }
      },
      "200InternationalFutureDatedPaymentConsentsConsentIdRead": {
        "description": "International FutureDated Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDatedConsentResponse"
            }
          }
        }
      },
      "200InternationalFutureDatedPaymentConsentsConsentIdFundsConfirmationRead": {
        "description": "International Future Dated Payment Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse"
            }
          }
        }
      },
      "201InternationalFutureDatedPaymentsCreated": {
        "description": "International Future Dated Payments Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse"
            }
          }
        }
      },
      "200InternationalFutureDatedPaymentsInternationalFutureDatedPaymentIdRead": {
        "description": "International Future Dated Payments Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse"
            }
          }
        }
      },
      "200InternationalFutureDatedPaymentsInternationalFutureDatedPaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse"
            }
          }
        }
      },
      "201InternationalStandingOrderConsentsCreated": {
        "description": "International Standing Order Consents Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsentResponse"
            }
          }
        }
      },
      "200InternationalStandingOrderConsentsConsentIdRead": {
        "description": "International Standing Order Consents Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsentResponse"
            }
          }
        }
      },
      "201InternationalStandingOrdersCreated": {
        "description": "International Standing Orders Created",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderResponse"
            }
          }
        }
      },
      "200InternationalStandingOrdersInternationalStandingOrderPaymentIdRead": {
        "description": "International Standing Orders Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWriteInternationalStandingOrderResponse"
            }
          }
        }
      },
      "200InternationalStandingOrdersInternationalStandingOrderPaymentIdPaymentDetailsRead": {
        "description": "Payment Details Read",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-jws-signature": {
            "description": "Header containing a detached JWS signature of the body of the payload.\n",
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "string"
            }
          },
          "x-market": null,
          "name": "x-market",
          "in": "header",
          "description": "BH country code",
          "required": true,
          "style": "simple",
          "explode": false,
          "schema": {
            "type": "string"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse"
            }
          }
        }
      },
      "200AccountAccessConsentsConsentIdPatched": {
        "description": "Account Access Consents Status Updated Successfully",
        "headers": {
          "x-fapi-interaction-id": {
            "description": "An RFC4122 UID used as a correlation id.",
            "schema": {
              "type": "string"
            }
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/OBAccountAccessConsentResponse"
            }
          }
        }
      }
    },
    "schemas": {
      "ActiveOrHistoricCurrencyCode": {
        "pattern": "^[A-Z]{3,3}$",
        "type": "string",
        "description": "A code allocated to a currency by a Maintenance Agency under an international identification scheme, as described in the latest edition of the international standard ISO 4217 \"Codes for the representation of currencies and funds\"."
      },
      "BuildingNumber": {
        "maxLength": 16,
        "minLength": 1,
        "type": "string",
        "description": "Number that identifies the position of a building on a street."
      },
      "CountryCode": {
        "pattern": "^[A-Z]{2,2}$",
        "type": "string",
        "description": "Nation with its own government."
      },
      "Department": {
        "maxLength": 256,
        "minLength": 1,
        "type": "string",
        "description": "Identification of a division of a large organisation or building."
      },
      "ISODateTime": {
        "type": "string",
        "description": "All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
        "format": "date-time"
      },
      "Identification": {
        "maxLength": 256,
        "minLength": 1,
        "type": "string",
        "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner."
      },
      "IdentificationFinancial": {
        "maxLength": 256,
        "minLength": 1,
        "type": "string",
        "description": "Unique and unambiguous identification of a financial institution or a branch of a financial institution."
      },
      "OBDebtorIdentification": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 0,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels. Note, the account name is not the product name or the nickname of the account."
          }
        },
        "description": "Set of elements used to identify a person or an organisation."
      },
      "Links": {
        "required": [
          "Self"
        ],
        "type": "object",
        "properties": {
          "Self": {
            "type": "string",
            "format": "uri"
          },
          "First": {
            "type": "string",
            "format": "uri"
          },
          "Prev": {
            "type": "string",
            "format": "uri"
          },
          "Next": {
            "type": "string",
            "format": "uri"
          },
          "Last": {
            "type": "string",
            "format": "uri"
          }
        },
        "additionalProperties": false,
        "description": "Links relevant to the payload"
      },
      "Meta": {
        "title": "MetaData",
        "type": "object",
        "properties": {
          "TotalPages": {
            "type": "integer",
            "format": "int32"
          },
          "FirstAvailableDateTime": {
            "$ref": "#/components/schemas/ISODateTime"
          },
          "LastAvailableDateTime": {
            "$ref": "#/components/schemas/ISODateTime"
          }
        },
        "additionalProperties": false,
        "description": "Meta Data relevant to the payload"
      },
      "OBAmount": {
        "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
        "type": "string",
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "OBActiveOrHistoricCurrencyAndAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "Amount of money associated with the charge type."
      },
      "OBActiveCurrencyAndAmount": {
        "pattern": "^\\d{1,13}$|^\\d{1,13}\\.\\d{1,5}$",
        "type": "string",
        "description": "A number of monetary units specified in an active currency where the unit of currency is explicit and compliant with ISO 4217."
      },
      "OBAddressTypeCode": {
        "type": "string",
        "description": "Identifies the nature of the postal address.",
        "enum": [
          "Business",
          "Correspondence",
          "DeliveryTo",
          "MailTo",
          "POBox",
          "Postal",
          "Residential",
          "Statement"
        ]
      },
      "OBChargeBearerTypeCode": {
        "type": "string",
        "description": "Specifies which party/parties will bear the charges associated with the processing of the payment transaction.",
        "enum": [
          "BorneByCreditor",
          "BorneByDebtor",
          "FollowingServiceLevel",
          "Shared"
        ]
      },
      "OBError": {
        "minProperties": 1,
        "required": [
          "ErrorCode",
          "Message"
        ],
        "type": "object",
        "properties": {
          "ErrorCode": {
            "type": "string",
            "description": "Low level textual error code, e.g., BH.OBF.Field.Missing",
            "x-namespaced-enum": [
              "BH.OBF.Field.Expected",
              "BH.OBF.Field.Invalid",
              "BH.OBF.Field.InvalidDate",
              "BH.OBF.Field.Missing",
              "BH.OBF.Field.Unexpected",
              "BH.OBF.Header.Invalid",
              "BH.OBF.Header.Missing",
              "BH.OBF.Reauthenticate",
              "BH.OBF.Resource.ConsentMismatch",
              "BH.OBF.Resource.InvalidConsentStatus",
              "BH.OBF.Resource.InvalidFormat",
              "BH.OBF.Resource.NotFound",
              "BH.OBF.Rules.AfterCutOffDateTime",
              "BH.OBF.Rules.DuplicateReference",
              "BH.OBF.Signature.Invalid",
              "BH.OBF.Signature.InvalidClaim",
              "BH.OBF.Signature.Malformed",
              "BH.OBF.Signature.Missing",
              "BH.OBF.Signature.MissingClaim",
              "BH.OBF.Signature.Unexpected",
              "BH.OBF.UnexpectedError",
              "BH.OBF.Unsupported.AccountIdentifier",
              "BH.OBF.Unsupported.AccountSecondaryIdentifier",
              "BH.OBF.Unsupported.Currency",
              "BH.OBF.Unsupported.Frequency",
              "BH.OBF.Unsupported.LocalInstrument",
              "BH.OBF.Unsupported.Scheme"
            ]
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field"
          },
          "Path": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency"
          },
          "Url": {
            "type": "string",
            "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
            "format": "uri"
          }
        },
        "additionalProperties": false
      },
      "OBErrorResponse": {
        "required": [
          "Code",
          "Errors",
          "Message"
        ],
        "type": "object",
        "properties": {
          "Code": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "High level textual error code, to help categorize the errors."
          },
          "Id": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors."
          },
          "Message": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string",
            "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'"
          },
          "Errors": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBError"
            }
          }
        },
        "additionalProperties": false,
        "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation."
      },
      "OBExternalAccountIdentificationCode": {
        "type": "string",
        "description": "Name of the identification scheme, in a coded form as published in an external list. 1. \"BH.OBF.IBAN\" is specified as the SchemeName in the Account Identification Section (either DebtorAccount or CreditorAccount). 2. “BH.OBF.PAN” is specified as the SchemeName in the Account Identification Section (either DebtorAccount or CreditorAccount). 3. “BH.OBF.BBAN” is specified as the SchemeName in the Account Identification Section (CreditorAccount).",
        "x-namespaced-enum": [
          "BH.OBF.IBAN",
          "BH.OBF.PAN",
          "BH.OBF.BBAN"
        ]
      },
      "OBExternalPaymentChargeTypeCode": {
        "type": "string",
        "description": "Charge type, in a coded form.",
        "x-namespaced-enum": [
          "BH.OBF.DNS",
          "BH.OBF.NRT",
          "BH.OBF.BIL"
        ]
      },
      "OBExternalLocalInstrumentCodeDomestic": {
        "type": "string",
        "description": "User community specific instrument.\nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.",
        "x-namespaced-enum": [
          "BH.OBF.DNS",
          "BH.OBF.NRT",
          "BH.OBF.BIL"
        ]
      },
      "OBExternalLocalInstrumentCodeInternational": {
        "type": "string",
        "description": "User community specific instrument.\nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.",
        "x-namespaced-enum": [
          "BH.OBF.SWIFT",
          "BH.OBF.GCCNET"
        ]
      },
      "OBPostalAddress": {
        "type": "object",
        "properties": {
          "AddressType": {
            "$ref": "#/components/schemas/OBAddressTypeCode"
          },
          "Department": {
            "$ref": "#/components/schemas/Department"
          },
          "SubDepartment": {
            "$ref": "#/components/schemas/SubDepartment"
          },
          "AddressLine": {
            "maxItems": 7,
            "minItems": 0,
            "type": "array",
            "items": {
              "maxLength": 70,
              "minLength": 1,
              "type": "string",
              "description": "Information that locates and identifies a specific address, as defined by postal services, presented in free format text."
            }
          },
          "StreetName": {
            "$ref": "#/components/schemas/StreetName"
          },
          "BuildingNumber": {
            "$ref": "#/components/schemas/BuildingNumber"
          },
          "PostCode": {
            "$ref": "#/components/schemas/PostCode"
          },
          "TownName": {
            "$ref": "#/components/schemas/TownName"
          },
          "CountrySubDivision": {
            "$ref": "#/components/schemas/CountrySubDivision"
          },
          "Country": {
            "$ref": "#/components/schemas/CountryCode"
          }
        },
        "description": "Information that locates and identifies a specific address, as defined by postal services."
      },
      "CountrySubDivision": {
        "maxLength": 35,
        "minLength": 1,
        "type": "string",
        "description": "Identifies a subdivision of a country such as state, region, county."
      },
      "OBRisk": {
        "type": "object",
        "properties": {
          "PaymentContextCode": {
            "type": "string",
            "description": "Specifies the payment context",
            "enum": [
              "BillPayment",
              "EcommerceGoods",
              "EcommerceServices",
              "Other",
              "PartyToParty"
            ]
          },
          "MerchantCategoryCode": {
            "maxLength": 4,
            "minLength": 3,
            "type": "string",
            "description": "Category code conform to ISO 18245, related to the type of services or goods the merchant provides for the transaction."
          },
          "MerchantCustomerIdentification": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The unique customer identifier of the PSU with the merchant."
          },
          "DeliveryAddress": {
            "$ref": "#/components/schemas/OBRisk_DeliveryAddress"
          }
        },
        "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Payments."
      },
      "OBSupplementaryData": {
        "type": "object",
        "properties": {},
        "additionalProperties": true,
        "description": "Additional information that can not be captured in the structured fields and/or any other specific block."
      },
      "OBWriteDomesticPaymentRequest": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentRequest_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticPaymentConsentRequest": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticPaymentConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticPaymentResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteFundsConfirmationResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticPaymentDetailsResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentDetailsResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "PostCode": {
        "maxLength": 16,
        "minLength": 1,
        "type": "string",
        "description": "Identifier consisting of a group of letters and/or numbers that is added to a postal address to assist the sorting of mail."
      },
      "StreetName": {
        "maxLength": 70,
        "minLength": 1,
        "type": "string",
        "description": "Name of a street or thoroughfare."
      },
      "SubDepartment": {
        "maxLength": 70,
        "minLength": 1,
        "type": "string",
        "description": "Identification of a sub-division of a large organisation or building."
      },
      "TownName": {
        "maxLength": 35,
        "minLength": 1,
        "type": "string",
        "description": "Name of a built-up area, with defined boundaries, and a local government."
      },
      "OBExchangeRate": {
        "required": [
          "RateType",
          "UnitCurrency"
        ],
        "type": "object",
        "properties": {
          "UnitCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1BHD = xxxCUR, the unit currency is BHD."
          },
          "ExchangeRate": {
            "type": "number",
            "description": "The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
          },
          "RateType": {
            "type": "string",
            "description": "Specifies the type used to complete the currency exchange.",
            "enum": [
              "Actual",
              "Agreed",
              "Indicative"
            ]
          },
          "ContractIdentification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent."
          }
        },
        "description": "Provides details on the currency exchange rate and contract."
      },
      "OBExchangeRateResponse": {
        "required": [
          "ExchangeRate",
          "RateType",
          "UnitCurrency"
        ],
        "type": "object",
        "properties": {
          "UnitCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1BHD = xxxCUR, the unit currency is BHD."
          },
          "ExchangeRate": {
            "type": "number",
            "description": "The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
          },
          "RateType": {
            "type": "string",
            "description": "Specifies the type used to complete the currency exchange.",
            "enum": [
              "Actual",
              "Agreed",
              "Indicative"
            ]
          },
          "ContractIdentification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent."
          },
          "ExpirationDateTime": {
            "type": "string",
            "description": "Specified date and time the exchange rate agreement will expire.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          }
        },
        "description": "Further detailed information on the exchange rate that has been used in the payment transaction."
      },
      "OBDomesticPaymentInitiation": {
        "required": [
          "CreditorAccount",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification",
          "LocalInstrument"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeDomestic"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_InstructedAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_DebtorAccount"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_CreditorAccount"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_RemittanceInformation"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single domestic payment."
      },
      "OBDomesticFutureDatedInitiation": {
        "required": [
          "CreditorAccount",
          "InstructedAmount",
          "InstructionIdentification",
          "RequestedExecutionDateTime"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeDomestic"
          },
          "RequestedExecutionDateTime": {
            "type": "string",
            "description": "Date at which the initiating party requests the clearing agent to process the payment. \nUsage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation_InstructedAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_DebtorAccount"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_CreditorAccount"
          },
          "CreditorPostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation_RemittanceInformation"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single scheduled domestic payment."
      },
      "OBInternationalPaymentInitiation": {
        "required": [
          "CreditorAccount",
          "CurrencyOfTransfer",
          "EndToEndIdentification",
          "InstructedAmount",
          "InstructionIdentification"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeInternational"
          },
          "InstructionPriority": {
            "type": "string",
            "description": "Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.",
            "enum": [
              "Normal",
              "Urgent"
            ]
          },
          "Purpose": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters.\nThe list of valid codes is an external code list published separately.\nExternal code sets can be downloaded from www.iso20022.org."
          },
          "ExtendedPurpose": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes."
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "CurrencyOfTransfer": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account."
          },
          "DestinationCountryCode": {
            "pattern": "[A-Z]{2,2}",
            "type": "string",
            "description": "Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code)."
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation_InstructedAmount"
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRate"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_DebtorAccount"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation_Creditor"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation_CreditorAgent"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_CreditorAccount"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation_RemittanceInformation"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single international payment."
      },
      "OBWriteDomesticFutureDatedConsent": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsent_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticFutureDatedConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticFutureDatedCancellationConsent": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsent_Data"
          }
        }
      },
      "OBWriteDomesticFutureDatedCancellationConsentResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse_Data"
          }
        }
      },
      "OBPatchDomesticFutureDatedPayment": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBPatchDomesticFutureDatedPayment_Data"
          }
        }
      },
      "OBWriteDomesticFutureDatedPayment": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPayment_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticFutureDatedPaymentResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWritePaymentDetailsResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWritePaymentDetailsResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteInternationalConsent": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalConsent_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBExternalFinancialInstitutionIdentificationCode": {
        "type": "string",
        "description": "Name of the identification scheme, in a coded form as published in an external list.",
        "x-namespaced-enum": [
          "BH.OBF.BICFI",
          "BH.OBF.NCC"
        ]
      },
      "OBWriteInternational": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternational_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalPaymentResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "Name": {
        "maxLength": 140,
        "minLength": 1,
        "type": "string",
        "description": "Name by which an agent is known and which is usually used to identify that agent."
      },
      "OBFileInitiation": {
        "required": [
          "FileContextFormat",
          "FileHash"
        ],
        "type": "object",
        "properties": {
          "FileContextFormat": {
            "type": "string",
            "description": "Specifies the payment file format.",
            "x-namespaced-enum": [
              "BH.OBF.pain.001.001.08"
            ]
          },
          "FileHash": {
            "maxLength": 44,
            "minLength": 1,
            "type": "string",
            "description": "A base64 encoding of a SHA256 hash of the file to be uploaded."
          },
          "FileReference": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "Reference for the file."
          },
          "NumberOfTransactions": {
            "pattern": "[0-9]{1,15}",
            "type": "string",
            "description": "Number of individual transactions contained in the payment information group."
          },
          "ControlSum": {
            "type": "number",
            "description": "Total of all individual amounts included in the group, irrespective of currencies."
          },
          "RequestedExecutionDateTime": {
            "type": "string",
            "description": "Date at which the initiating party requests the clearing agent to process the payment. \nUsage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeDomestic"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation_DebtorAccount"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation_RemittanceInformation"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds using a payment file."
      },
      "OBWriteFileConsentResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteFileConsentResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteFileConsent": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteFileConsent_Data"
          }
        }
      },
      "OBWriteFileResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteFileResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteFile": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteFile_Data"
          }
        }
      },
      "File": {
        "type": "object",
        "properties": {}
      },
      "OBRisk_DeliveryAddress": {
        "required": [
          "Country",
          "TownName"
        ],
        "type": "object",
        "properties": {
          "AddressLine": {
            "maxItems": 2,
            "minItems": 0,
            "type": "array",
            "items": {
              "maxLength": 70,
              "minLength": 1,
              "type": "string",
              "description": "Information that locates and identifies a specific address, as defined by postal services, that is presented in free format text."
            }
          },
          "StreetName": {
            "$ref": "#/components/schemas/StreetName"
          },
          "BuildingNumber": {
            "$ref": "#/components/schemas/BuildingNumber"
          },
          "PostCode": {
            "$ref": "#/components/schemas/PostCode"
          },
          "TownName": {
            "$ref": "#/components/schemas/TownName"
          },
          "CountrySubDivision": {
            "maxItems": 2,
            "minItems": 0,
            "type": "array",
            "items": {
              "maxLength": 35,
              "minLength": 1,
              "type": "string",
              "description": "Identifies a subdivision of a country, for instance state, region, county."
            }
          },
          "Country": {
            "pattern": "^[A-Z]{2,2}$",
            "type": "string",
            "description": "Nation with its own government, occupying a particular territory."
          }
        },
        "description": "Information that locates and identifies a specific address, as defined by postal services or in free format text."
      },
      "OBWriteDomesticPaymentRequest_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation"
          }
        }
      },
      "OBWriteDomesticPaymentConsentRequest_Data_Authorisation": {
        "required": [
          "AuthorisationType"
        ],
        "type": "object",
        "properties": {
          "AuthorisationType": {
            "type": "string",
            "description": "Type of authorisation flow requested.",
            "enum": [
              "Single"
            ]
          },
          "CompletionDateTime": {
            "type": "string",
            "description": "Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          }
        },
        "description": "The authorisation type request from the TPP."
      },
      "OBWriteDomesticPaymentConsentRequest_Data_SCASupportData": {
        "type": "object",
        "properties": {
          "RequestedSCAExemptionType": {
            "type": "string",
            "description": "This field allows a PISP to request specific SCA Exemption for a Payment Initiation",
            "enum": [
              "BillPayment",
              "ContactlessTravel",
              "EcommerceGoods",
              "EcommerceServices",
              "Kiosk",
              "Parking",
              "PartyToParty"
            ]
          },
          "AppliedAuthenticationApproach": {
            "type": "string",
            "description": "Specifies a character string with a maximum length of 40 characters.\nUsage: This field indicates whether the PSU was subject to SCA performed by the TPP",
            "enum": [
              "CA",
              "SCA"
            ]
          },
          "ReferencePaymentOrderId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Specifies a character string with a maximum length of 140 characters.\nUsage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence."
          }
        },
        "description": "Supporting Data provided by TPP, when requesting SCA Exemption."
      },
      "OBWriteDomesticPaymentConsentRequest_Data": {
        "required": [
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          }
        }
      },
      "OBWriteDomesticPaymentConsentResponse_Data_Charges": {
        "required": [
          "Amount",
          "ChargeBearer",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "Type": {
            "$ref": "#/components/schemas/OBExternalPaymentChargeTypeCode"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "description": "Set of elements used to provide details of a charge for the payment initiation."
      },
      "OBWriteDomesticPaymentConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \n All date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteDomesticPaymentResponse_Data_Refund_Account": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Provides the details to identify an account."
      },
      "OBWriteDomesticPaymentResponse_Data_Refund": {
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse_Data_Refund_Account"
          }
        },
        "description": "Unambiguous identification of the refund account to which a refund will be made as a result of the transaction."
      },
      "OBWriteDomesticPaymentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "DomesticPaymentId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "DomesticPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment information group.",
            "enum": [
              "AcceptedCreditSettlementCompleted",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedWithoutPosting",
              "Pending",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticPaymentInitiation"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteFundsConfirmationResponse_Data_FundsAvailableResult": {
        "required": [
          "FundsAvailable",
          "FundsAvailableDateTime"
        ],
        "type": "object",
        "properties": {
          "FundsAvailableDateTime": {
            "type": "string",
            "description": "Date and time at which the funds availability check was generated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "FundsAvailable": {
            "type": "boolean",
            "description": "Flag to indicate the availability of funds given the Amount in the consent request."
          }
        },
        "description": "Result of a funds availability check."
      },
      "OBWriteFundsConfirmationResponse_Data": {
        "type": "object",
        "properties": {
          "FundsAvailableResult": {
            "$ref": "#/components/schemas/OBWriteFundsConfirmationResponse_Data_FundsAvailableResult"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        }
      },
      "OBWriteDomesticPaymentDetailsResponse_Data_StatusDetail": {
        "required": [
          "LocalInstrument",
          "Status"
        ],
        "type": "object",
        "properties": {
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeDomestic"
          },
          "Status": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Status of a transfer, as assigned by the transaction administrator."
          },
          "StatusReason": {
            "type": "string",
            "description": "Reason Code provided for the status of a transfer.",
            "enum": [
              "Cancelled",
              "PendingFailingSettlement",
              "PendingSettlement",
              "Proprietary",
              "ProprietaryRejection",
              "Suspended",
              "Unmatched"
            ]
          },
          "StatusReasonDescription": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reason provided for the status of a transfer."
          }
        },
        "description": "Payment status details as per underlying Payment Rail."
      },
      "OBWriteDomesticPaymentDetailsResponse_Data_PaymentStatus": {
        "required": [
          "PaymentTransactionId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "PaymentTransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."
          },
          "Status": {
            "type": "string",
            "description": "Status of a transfe, as assigned by the transaction administrator.",
            "enum": [
              "Accepted",
              "AcceptedCancellationRequest",
              "AcceptedCreditSettlementCompleted",
              "AcceptedCustomerProfile",
              "AcceptedFundsChecked",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedTechnicalValidation",
              "AcceptedWithChange",
              "AcceptedWithoutPosting",
              "Cancelled",
              "NoCancellationProcess",
              "PartiallyAcceptedCancellationRequest",
              "PartiallyAcceptedTechnicalCorrect",
              "PaymentCancelled",
              "Pending",
              "PendingCancellationRequest",
              "Received",
              "Rejected",
              "RejectedCancellationRequest"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "StatusDetail": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentDetailsResponse_Data_StatusDetail"
          }
        },
        "description": "Payment status details."
      },
      "OBWriteDomesticPaymentDetailsResponse_Data": {
        "type": "object",
        "properties": {
          "PaymentStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentDetailsResponse_Data_PaymentStatus"
            }
          }
        }
      },
      "OBDomesticPaymentInitiation_InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\nUsage: This amount has to be transported unchanged through the transaction chain."
      },
      "OBDomesticPaymentInitiation_DebtorAccount": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
          }
        },
        "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction."
      },
      "OBDomesticPaymentInitiation_CreditorAccount": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction."
      },
      "OBDomesticPaymentInitiation_RemittanceInformation": {
        "type": "object",
        "properties": {
          "RemittanceDescription": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system."
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.\nOB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped."
          }
        },
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
      },
      "OBDomesticFutureDatedInitiation_InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\nUsage: This amount has to be transported unchanged through the transaction chain."
      },
      "OBDomesticFutureDatedInitiation_RemittanceInformation": {
        "type": "object",
        "properties": {
          "RemittanceDescription": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.\nOB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped."
          }
        },
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system."
      },
      "OBInternationalPaymentInitiation_Creditor": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party."
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Party to which an amount of money is due."
      },
      "OBInternationalPaymentInitiation_CreditorAgent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/IdentificationFinancial"
          },
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Financial institution servicing an account for the creditor."
      },
      "OBWriteDomesticFutureDatedConsent_Data": {
        "required": [
          "Initiation",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          }
        }
      },
      "OBWriteDomesticFutureDatedConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Permission",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \n All date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteDomesticFutureDatedCancellationConsent_Data": {
        "required": [
          "DomesticFutureDatedPaymentId",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "DomesticFutureDatedPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic schedule payment resource."
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          }
        }
      },
      "OBWriteDomesticFutureDatedCancellationConsentResponse_Data_Charges": {
        "required": [
          "Amount",
          "ChargeBearer",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "Type": {
            "$ref": "#/components/schemas/OBExternalPaymentChargeTypeCode"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "description": "Set of elements used to provide details of a charge for the payment cancellation."
      },
      "OBWriteDomesticFutureDatedCancellationConsentResponse_Data": {
        "required": [
          "ConsentId",
          "DomesticFutureDatedPaymentId",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "DomesticFutureDatedPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic schedule payment resource."
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedCancellationConsentResponse_Data_Charges"
            }
          }
        }
      },
      "OBPatchDomesticFutureDatedPayment_Data": {
        "required": [
          "ConsentId",
          "Status"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment order resource.",
            "enum": [
              "RejectedCancellationRequest",
              "AcceptedCancellationRequest",
              "PendingCancellationRequest"
            ]
          }
        }
      },
      "OBWriteDomesticFutureDatedPayment_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation"
          }
        }
      },
      "OBWriteDomesticFutureDatedPaymentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "DomesticFutureDatedPaymentId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "DomesticFutureDatedPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic schedule payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment order resource.",
            "enum": [
              "Cancelled",
              "InitiationCompleted",
              "InitiationFailed",
              "InitiationPending"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticFutureDatedInitiation"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data_StatusDetail": {
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeDomestic"
          },
          "Status": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Status of a transfer, as assigned by the transaction administrator."
          },
          "StatusReason": {
            "type": "string",
            "description": "Reason Code provided for the status of a transfer.",
            "enum": [
              "Cancelled",
              "PendingFailingSettlement",
              "PendingSettlement",
              "Proprietary",
              "ProprietaryRejection",
              "Suspended",
              "Unmatched"
            ]
          },
          "StatusReasonDescription": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reason provided for the status of a transfer."
          }
        },
        "description": "Payment status details as per underlying Payment Rail."
      },
      "OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data_PaymentStatus": {
        "required": [
          "PaymentTransactionId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "PaymentTransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."
          },
          "Status": {
            "type": "string",
            "description": "Status of a transfe, as assigned by the transaction administrator.",
            "enum": [
              "Accepted",
              "AcceptedCancellationRequest",
              "AcceptedCreditSettlementCompleted",
              "AcceptedCustomerProfile",
              "AcceptedFundsChecked",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedTechnicalValidation",
              "AcceptedWithChange",
              "AcceptedWithoutPosting",
              "Cancelled",
              "NoCancellationProcess",
              "PartiallyAcceptedCancellationRequest",
              "PartiallyAcceptedTechnicalCorrect",
              "PaymentCancelled",
              "Pending",
              "PendingCancellationRequest",
              "Received",
              "Rejected",
              "RejectedCancellationRequest"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "StatusDetail": {
            "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data_StatusDetail"
          }
        },
        "description": "Payment status details."
      },
      "OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data": {
        "type": "object",
        "properties": {
          "PaymentStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticFutureDatedPaymentIdPaymentDetailsResponse_Data_PaymentStatus"
            }
          }
        }
      },
      "OBWritePaymentDetailsResponse_Data_StatusDetail": {
        "required": [
          "Status"
        ],
        "type": "object",
        "properties": {
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeInternational"
          },
          "Status": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Status of a transfer, as assigned by the transaction administrator."
          },
          "StatusReason": {
            "type": "string",
            "description": "Reason Code provided for the status of a transfer.",
            "enum": [
              "Cancelled",
              "PendingFailingSettlement",
              "PendingSettlement",
              "Proprietary",
              "ProprietaryRejection",
              "Suspended",
              "Unmatched"
            ]
          },
          "StatusReasonDescription": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Reason provided for the status of a transfer."
          }
        },
        "description": "Payment status details as per underlying Payment Rail."
      },
      "OBWritePaymentDetailsResponse_Data_PaymentStatus": {
        "required": [
          "PaymentTransactionId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "PaymentTransactionId": {
            "maxLength": 210,
            "minLength": 1,
            "type": "string",
            "description": "Unique identifier for the transaction within an servicing institution. This identifier is both unique and immutable."
          },
          "Status": {
            "type": "string",
            "description": "Status of a transfe, as assigned by the transaction administrator.",
            "enum": [
              "Accepted",
              "AcceptedCancellationRequest",
              "AcceptedCreditSettlementCompleted",
              "AcceptedCustomerProfile",
              "AcceptedFundsChecked",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedTechnicalValidation",
              "AcceptedWithChange",
              "AcceptedWithoutPosting",
              "Cancelled",
              "NoCancellationProcess",
              "PartiallyAcceptedCancellationRequest",
              "PartiallyAcceptedTechnicalCorrect",
              "PaymentCancelled",
              "Pending",
              "PendingCancellationRequest",
              "Received",
              "Rejected",
              "RejectedCancellationRequest"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the status was assigned to the transfer.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "StatusDetail": {
            "$ref": "#/components/schemas/OBWritePaymentDetailsResponse_Data_StatusDetail"
          }
        },
        "description": "Payment status details."
      },
      "OBWritePaymentDetailsResponse_Data": {
        "type": "object",
        "properties": {
          "PaymentStatus": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWritePaymentDetailsResponse_Data_PaymentStatus"
            }
          }
        }
      },
      "OBWriteInternationalConsent_Data": {
        "required": [
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          }
        }
      },
      "OBWriteInternationalConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \n All date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRateResponse"
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteInternational_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation"
          }
        }
      },
      "OBWriteInternationalPaymentResponse_Data_Refund_Creditor": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party."
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Set of elements used to identify a person or an organisation."
      },
      "OBWriteInternationalPaymentResponse_Data_Refund_Agent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/IdentificationFinancial"
          },
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution."
      },
      "OBWriteInternationalPaymentResponse_Data_Refund": {
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Creditor": {
            "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse_Data_Refund_Creditor"
          },
          "Agent": {
            "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse_Data_Refund_Agent"
          },
          "Account": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentResponse_Data_Refund_Account"
          }
        }
      },
      "OBWriteInternationalPaymentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "InternationalPaymentId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "InternationalPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment information group.",
            "enum": [
              "AcceptedCreditSettlementCompleted",
              "AcceptedSettlementCompleted",
              "AcceptedSettlementInProcess",
              "AcceptedWithoutPosting",
              "Pending",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteInternationalPaymentResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRateResponse"
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalPaymentInitiation"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteFileConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \n All date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "AwaitingUpload",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the consent resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBFileInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteFileConsent_Data": {
        "required": [
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "Initiation": {
            "$ref": "#/components/schemas/OBFileInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentRequest_Data_SCASupportData"
          }
        }
      },
      "OBWriteFileResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "FilePaymentId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "FilePaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the file payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment order resource.",
            "enum": [
              "InitiationCompleted",
              "InitiationFailed",
              "InitiationPending"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticPaymentConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBFileInitiation"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          }
        }
      },
      "OBWriteFile_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBFileInitiation"
          }
        }
      },
      "OBExternalLocalInstrumentCode": {
        "type": "string",
        "description": "User community specific instrument.\nUsage: This element is used to specify a local instrument, local clearing option and/or further qualify the service or service level.",
        "x-namespaced-enum": [
          "XYZ.OBF.DNS"
        ]
      },
      "OBDomesticStandingOrderInitiation": {
        "required": [
          "CreditorAccount",
          "FirstPaymentAmount",
          "FirstPaymentDateTime",
          "Frequency"
        ],
        "type": "object",
        "properties": {
          "Frequency": {
            "pattern": "^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$",
            "type": "string",
            "description": "Individual Definitions:\n  NotKnown - Not known\n  EvryDay - Every day\n  EvryWorkgDay - Every working day\n  IntrvlDay - An interval specified in number of calendar days (02 to 31)\n  IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07)\n  WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07)\n  IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-05 to -01, 01 to 31)\n  QtrDay - Quarterly (ENGLISH)\n  ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.\nIndividual Patterns:\nNotKnown (ScheduleCode) EvryDay (ScheduleCode) EvryWorkgDay (ScheduleCode) IntrvlDay:NoOfDay (ScheduleCode + NoOfDay) IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek) WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek) IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nNotKnown EvryDay EvryWorkgDay IntrvlDay:((0[2-9])\\|([1-2][0-9])\\|3[0-1]) IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7] IntrvlMnthDay:(0[1-6]\\|12\\|24):(-0[1-5]\\|0[1-9]\\|[12][0-9]\\|3[01]) QtrDay:(ENGLISH)\nFull Regular Expression:\n^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$"
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification."
          },
          "NumberOfPayments": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date."
          },
          "FirstPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "RecurringPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first recurring payment for a Standing Order schedule will be made. \nUsage: This must be populated only if the first recurring date is different to the first payment date.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "FinalPaymentDateTime": {
            "type": "string",
            "description": "The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "FirstPaymentAmount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_FirstPaymentAmount"
          },
          "RecurringPaymentAmount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_RecurringPaymentAmount"
          },
          "FinalPaymentAmount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_FinalPaymentAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_DebtorAccount"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_CreditorAccount"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a domestic standing order."
      },
      "OBInternationalFutureDatedInitiation": {
        "required": [
          "CreditorAccount",
          "CurrencyOfTransfer",
          "InstructedAmount",
          "InstructionIdentification",
          "LocalInstrument",
          "RequestedExecutionDateTime"
        ],
        "type": "object",
        "properties": {
          "InstructionIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification as assigned by an instructing party for an instructed party to unambiguously identify the instruction.\nUsage: the  instruction identification is a point to point reference that can be used between the instructing party and the instructed party to refer to the individual instruction. It can be included in several messages related to the instruction."
          },
          "EndToEndIdentification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique identification assigned by the initiating party to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.\nUsage: The end-to-end identification can be used for reconciliation or to link tasks relating to the transaction. It can be included in several messages related to the transaction.\nOB: The Faster Payments Scheme can only access 31 characters for the EndToEndIdentification field."
          },
          "LocalInstrument": {
            "$ref": "#/components/schemas/OBExternalLocalInstrumentCodeInternational"
          },
          "InstructionPriority": {
            "type": "string",
            "description": "Indicator of the urgency or order of importance that the instructing party would like the instructed party to apply to the processing of the instruction.",
            "enum": [
              "Normal",
              "Urgent"
            ]
          },
          "Purpose": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters.\nThe list of valid codes is an external code list published separately.\nExternal code sets can be downloaded from www.iso20022.org."
          },
          "ExtendedPurpose": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes."
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "RequestedExecutionDateTime": {
            "type": "string",
            "description": "Date at which the initiating party requests the clearing agent to process the payment. \nUsage: This is the date on which the debtor's account is to be debited.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "CurrencyOfTransfer": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account."
          },
          "DestinationCountryCode": {
            "pattern": "[A-Z]{2,2}",
            "type": "string",
            "description": "Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code)."
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_InstructedAmount"
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_ExchangeRateInformation"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_DebtorAccount"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_Creditor"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_CreditorAgent"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_CreditorAccount"
          },
          "RemittanceInformation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_RemittanceInformation"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for a single future-dated international payment."
      },
      "OBWriteDomesticStandingOrderConsent": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticStandingOrderConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteDomesticStandingOrder": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrder_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteDomesticStandingOrderResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteInternationalFutureDatedConsent": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedConsent_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalFutureDatedConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteInternationalFutureDated": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDated_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalFutureDatedResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBInternationalStandingOrder": {
        "required": [
          "CreditorAccount",
          "CurrencyOfTransfer",
          "FirstPaymentDateTime",
          "Frequency",
          "InstructedAmount"
        ],
        "type": "object",
        "properties": {
          "Frequency": {
            "pattern": "^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$",
            "type": "string",
            "description": "Individual Definitions:\nNotKnown - Not known EvryDay - Every day EvryWorkgDay - Every working day IntrvlDay - An interval specified in number of calendar days (02 to 31) IntrvlWkDay - An interval specified in weeks (01 to 09), and the day within the week (01 to 07) WkInMnthDay - A monthly interval, specifying the week of the month (01 to 05) and day within the week (01 to 07) IntrvlMnthDay - An interval specified in months (between 01 to 06, 12, 24), specifying the day within the month (-05 to -01, 01 to 31) QtrDay - Quarterly (ENGLISH) ENGLISH = Paid on the 25th March, 24th June, 29th September and 25th December.\nIndividual Patterns:\nNotKnown (ScheduleCode) EvryDay (ScheduleCode) EvryWorkgDay (ScheduleCode) IntrvlDay:NoOfDay (ScheduleCode + NoOfDay) IntrvlWkDay:IntervalInWeeks:DayInWeek (ScheduleCode + IntervalInWeeks + DayInWeek) WkInMnthDay:WeekInMonth:DayInWeek (ScheduleCode + WeekInMonth + DayInWeek) IntrvlMnthDay:IntervalInMonths:DayInMonth (ScheduleCode + IntervalInMonths + DayInMonth)\nQtrDay: + either (ENGLISH) ScheduleCode + QuarterDay\nThe regular expression for this element combines five smaller versions for each permitted pattern. To aid legibility - the components are presented individually here:\nNotKnown EvryDay EvryWorkgDay IntrvlDay:((0[2-9])\\|([1-2][0-9])\\|3[0-1]) IntrvlWkDay:0[1-9]:0[1-7] WkInMnthDay:0[1-5]:0[1-7] IntrvlMnthDay:(0[1-6]\\|12\\|24):(-0[1-5]\\|0[1-9]\\|[12][0-9]\\|3[01]) QtrDay:(ENGLISH)\nFull Regular Expression:\n^(NotKnown)$|^(EvryDay)$|^(EvryWorkgDay)$|^(IntrvlDay:((0[2-9])|([1-2][0-9])|3[0-1]))$|^(IntrvlWkDay:0[1-9]:0[1-7])$|^(WkInMnthDay:0[1-5]:0[1-7])$|^(IntrvlMnthDay:(0[1-6]|12|24):(-0[1-5]|0[1-9]|[12][0-9]|3[01]))$|^(QtrDay:(ENGLISH))$"
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification."
          },
          "NumberOfPayments": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Number of the payments that will be made in completing this frequency sequence including any executed since the sequence start date."
          },
          "FirstPaymentDateTime": {
            "type": "string",
            "description": "The date on which the first payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "FinalPaymentDateTime": {
            "type": "string",
            "description": "The date on which the final payment for a Standing Order schedule will be made.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Purpose": {
            "maxLength": 4,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the external purpose code in the format of character string with a maximum length of 4 characters.\nThe list of valid codes is an external code list published separately.\nExternal code sets can be downloaded from www.iso20022.org."
          },
          "ExtendedPurpose": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Specifies the purpose of an international payment, when there is no corresponding 4 character code available in the ISO20022 list of Purpose Codes."
          },
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "CurrencyOfTransfer": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Specifies the currency of the to be transferred amount, which is different from the currency of the debtor's account."
          },
          "DestinationCountryCode": {
            "pattern": "[A-Z]{2,2}",
            "type": "string",
            "description": "Country in which Credit Account is domiciled. Code to identify a country, a dependency, or another area of particular geopolitical interest, on the basis of country names obtained from the United Nations (ISO 3166, Alpha-2 code)."
          },
          "InstructedAmount": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_InstructedAmount"
          },
          "DebtorAccount": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation_DebtorAccount"
          },
          "Creditor": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation_Creditor"
          },
          "CreditorAgent": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder_CreditorAgent"
          },
          "CreditorAccount": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder_CreditorAccount"
          },
          "SupplementaryData": {
            "$ref": "#/components/schemas/OBSupplementaryData"
          }
        },
        "description": "The Initiation payload is sent by the initiating party to the ASPSP. It is used to request movement of funds from the debtor account to a creditor for an international standing order."
      },
      "OBWriteInternationalStandingOrderConsent": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsent_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalStandingOrderConsentResponse": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalStandingOrderConsentResponse_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBWriteInternationalStandingOrder": {
        "required": [
          "Data",
          "Risk"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalStandingOrder_Data"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk"
          }
        }
      },
      "OBWriteInternationalStandingOrderResponse": {
        "required": [
          "Data"
        ],
        "type": "object",
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBWriteInternationalStandingOrderResponse_Data"
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "OBDomesticStandingOrderInitiation_FirstPaymentAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "The amount of the first Standing Order",
        "example": null
      },
      "OBDomesticStandingOrderInitiation_RecurringPaymentAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "The amount of the recurring Standing Order",
        "example": null
      },
      "OBDomesticStandingOrderInitiation_FinalPaymentAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "The amount of the final Standing Order",
        "example": null
      },
      "OBDomesticStandingOrderInitiation_DebtorAccount": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
          }
        },
        "description": "Provides the details to identify the debtor account.",
        "example": null
      },
      "OBDomesticStandingOrderInitiation_CreditorAccount": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Identification assigned by an institution to identify an account. This identification is known by the account owner.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_InstructedAmount": {
        "required": [
          "Amount",
          "Currency"
        ],
        "type": "object",
        "properties": {
          "Amount": {
            "$ref": "#/components/schemas/OBActiveCurrencyAndAmount"
          },
          "Currency": {
            "$ref": "#/components/schemas/ActiveOrHistoricCurrencyCode"
          }
        },
        "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as ordered by the initiating party.\nUsage: This amount has to be transported unchanged through the transaction chain.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_ExchangeRateInformation": {
        "required": [
          "RateType",
          "UnitCurrency"
        ],
        "type": "object",
        "properties": {
          "UnitCurrency": {
            "pattern": "^[A-Z]{3,3}$",
            "type": "string",
            "description": "Currency in which the rate of exchange is expressed in a currency exchange. In the example 1GBP = xxxCUR, the unit currency is GBP."
          },
          "ExchangeRate": {
            "type": "number",
            "description": "The factor used for conversion of an amount from one currency to another. This reflects the price at which one currency was bought with another currency."
          },
          "RateType": {
            "type": "string",
            "description": "Specifies the type used to complete the currency exchange.",
            "enum": [
              "Actual",
              "Agreed",
              "Indicative"
            ]
          },
          "ContractIdentification": {
            "maxLength": 256,
            "minLength": 1,
            "type": "string",
            "description": "Unique and unambiguous reference to the foreign exchange contract agreed between the initiating party/creditor and the debtor agent."
          }
        },
        "description": "Provides details on the currency exchange rate and contract.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_DebtorAccount": {
        "required": [
          "Identification",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level, as displayed by the ASPSP's online channels.\nNote, the account name is not the product name or the nickname of the account."
          }
        },
        "description": "Unambiguous identification of the account of the debtor to which a debit entry will be made as a result of the transaction.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_Creditor": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party."
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Party to which an amount of money is due.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_CreditorAgent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/IdentificationFinancial"
          },
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Financial institution servicing an account for the creditor.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_CreditorAccount": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Unambiguous identification of the account of the creditor to which a credit entry will be posted as a result of the payment transaction.",
        "example": null
      },
      "OBInternationalFutureDatedInitiation_RemittanceInformation": {
        "type": "object",
        "properties": {
          "RemittanceDescription": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Information supplied to enable the matching/reconciliation of an entry with the items that the payment is intended to settle, such as commercial invoices in an accounts' receivable system, in an unstructured form."
          },
          "Reference": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique reference, as assigned by the creditor, to unambiguously refer to the payment transaction.\nUsage: If available, the initiating party should provide this reference in the structured remittance information, to enable reconciliation by the creditor upon receipt of the amount of money.\nIf the business context requires the use of a creditor reference or a payment remit identification, and only one identifier can be passed through the end-to-end chain, the creditor's reference or payment remittance identification should be quoted in the end-to-end transaction identification.\nOB: The Faster Payments Scheme can only accept 18 characters for the ReferenceInformation field - which is where this ISO field will be mapped."
          }
        },
        "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts' receivable system.",
        "example": null
      },
      "OBWriteDomesticStandingOrderConsent_Data_Authorisation": {
        "required": [
          "AuthorisationType"
        ],
        "type": "object",
        "properties": {
          "AuthorisationType": {
            "type": "string",
            "description": "Type of authorisation flow requested.",
            "enum": [
              "Single"
            ]
          },
          "CompletionDateTime": {
            "type": "string",
            "description": "Date and time at which the requested authorisation flow must be completed.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          }
        },
        "description": "The authorisation type request from the TPP.",
        "example": null
      },
      "OBWriteDomesticStandingOrderConsent_Data_SCASupportData": {
        "type": "object",
        "properties": {
          "RequestedSCAExemptionType": {
            "type": "string",
            "description": "This field allows a PISP to request specific SCA Exemption for a Payment Initiation"
          },
          "AppliedAuthenticationApproach": {
            "type": "string",
            "description": "Specifies a character string with a maximum length of 40 characters.\nUsage: This field indicates whether the PSU was subject to SCA performed by the TPP",
            "enum": [
              "SCA"
            ]
          },
          "ReferencePaymentOrderId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "Specifies a character string with a maximum length of 140 characters.\nUsage: If the payment is recurring then the transaction identifier of the previous payment occurrence so that the ASPSP can verify that the PISP, amount and the payee are the same as the previous occurrence."
          }
        },
        "description": "Supporting Data provided by TPP, when requesting SCA Exemption.",
        "example": null
      },
      "OBWriteDomesticStandingOrderConsent_Data": {
        "required": [
          "Initiation",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteDomesticStandingOrderConsentResponse_Data_Charges": {
        "required": [
          "Amount",
          "ChargeBearer",
          "Type"
        ],
        "type": "object",
        "properties": {
          "ChargeBearer": {
            "$ref": "#/components/schemas/OBChargeBearerTypeCode"
          },
          "Type": {
            "$ref": "#/components/schemas/OBExternalPaymentChargeTypeCode"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount"
          }
        },
        "description": "Set of elements used to provide details of a charge for the payment initiation.",
        "example": null
      },
      "OBWriteDomesticStandingOrderConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Permission",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteDomesticStandingOrder_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation"
          }
        },
        "example": null
      },
      "OBWriteDomesticStandingOrderResponse_Data_Refund_Account": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "Name of the account, as assigned by the account servicing institution.\nUsage: The account name is the name or names of the account owner(s) represented at an account level. The account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Provides the details to identify an account.",
        "example": null
      },
      "OBWriteDomesticStandingOrderResponse_Data_Refund": {
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Account": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse_Data_Refund_Account"
          }
        },
        "description": "Unambiguous identification of the refund account to which a refund will be made as a result of the transaction.",
        "example": null
      },
      "OBWriteDomesticStandingOrderResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "DomesticStandingOrderId",
          "Initiation",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "DomesticStandingOrderId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the domestic standing order resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment order resource.",
            "enum": [
              "Cancelled",
              "InitiationCompleted",
              "InitiationFailed",
              "InitiationPending"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBDomesticStandingOrderInitiation"
          }
        },
        "example": null
      },
      "OBWriteInternationalFutureDatedConsent_Data": {
        "required": [
          "Initiation",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteInternationalFutureDatedConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Permission",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of consent resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRateResponse"
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteInternationalFutureDated_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation"
          }
        },
        "example": null
      },
      "OBWriteInternationalFutureDatedResponse_Data_Refund_Creditor": {
        "type": "object",
        "properties": {
          "Name": {
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "description": "Name by which a party is known and which is usually used to identify that party."
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Set of elements used to identify a person or an organisation.",
        "example": null
      },
      "OBWriteInternationalFutureDatedResponse_Data_Refund_Agent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/IdentificationFinancial"
          },
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Set of elements used to uniquely and unambiguously identify a financial institution or a branch of a financial institution.",
        "example": null
      },
      "OBWriteInternationalFutureDatedResponse_Data_Refund": {
        "required": [
          "Account"
        ],
        "type": "object",
        "properties": {
          "Creditor": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse_Data_Refund_Creditor"
          },
          "Agent": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse_Data_Refund_Agent"
          },
          "Account": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderResponse_Data_Refund_Account"
          }
        },
        "example": null
      },
      "OBWriteInternationalFutureDatedResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "InternationalFutureDatedPaymentId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "InternationalFutureDatedPaymentId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international future dated payment resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the message was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of the payment order resource.",
            "enum": [
              "Cancelled",
              "InitiationCompleted",
              "InitiationFailed",
              "InitiationPending"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedExecutionDateTime": {
            "type": "string",
            "description": "Expected execution date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "ExpectedSettlementDateTime": {
            "type": "string",
            "description": "Expected settlement date and time for the payment resource.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "ExchangeRateInformation": {
            "$ref": "#/components/schemas/OBExchangeRateResponse"
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalFutureDatedInitiation"
          }
        },
        "example": null
      },
      "OBInternationalStandingOrder_CreditorAgent": {
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalFinancialInstitutionIdentificationCode"
          },
          "Identification": {
            "maxLength": 35,
            "minLength": 1,
            "type": "string",
            "description": "Unique and unambiguous identification of the servicing institution."
          },
          "Name": {
            "$ref": "#/components/schemas/Name"
          },
          "PostalAddress": {
            "$ref": "#/components/schemas/OBPostalAddress"
          }
        },
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.\nThis is the servicer of the beneficiary account.",
        "example": null
      },
      "OBInternationalStandingOrder_CreditorAccount": {
        "required": [
          "Identification",
          "Name",
          "SchemeName"
        ],
        "type": "object",
        "properties": {
          "SchemeName": {
            "$ref": "#/components/schemas/OBExternalAccountIdentificationCode"
          },
          "Identification": {
            "$ref": "#/components/schemas/Identification"
          },
          "Name": {
            "maxLength": 70,
            "minLength": 1,
            "type": "string",
            "description": "The account name is the name or names of the account owner(s) represented at an account level.\nNote, the account name is not the product name or the nickname of the account.\nOB: ASPSPs may carry out name validation for Confirmation of Payee, but it is not mandatory."
          }
        },
        "description": "Provides the details to identify the beneficiary account.",
        "example": null
      },
      "OBWriteInternationalStandingOrderConsent_Data": {
        "required": [
          "Initiation",
          "Permission"
        ],
        "type": "object",
        "properties": {
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteInternationalStandingOrderConsentResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "Permission",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of resource in code form.",
            "enum": [
              "Authorised",
              "AwaitingAuthorisation",
              "Consumed",
              "Rejected"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Permission": {
            "type": "string",
            "description": "Specifies the Open Banking service request types.",
            "enum": [
              "Create"
            ]
          },
          "ReadRefundAccount": {
            "type": "string",
            "description": "Specifies to share the refund account details with PISP",
            "enum": [
              "No",
              "Yes"
            ]
          },
          "CutOffDateTime": {
            "type": "string",
            "description": "Specified cut-off date and time for the payment consent.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder"
          },
          "Authorisation": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_Authorisation"
          },
          "SCASupportData": {
            "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsent_Data_SCASupportData"
          }
        },
        "example": null
      },
      "OBWriteInternationalStandingOrder_Data": {
        "required": [
          "ConsentId",
          "Initiation"
        ],
        "type": "object",
        "properties": {
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder"
          }
        },
        "example": null
      },
      "OBWriteInternationalStandingOrderResponse_Data": {
        "required": [
          "ConsentId",
          "CreationDateTime",
          "Initiation",
          "InternationalStandingOrderId",
          "Status",
          "StatusUpdateDateTime"
        ],
        "type": "object",
        "properties": {
          "InternationalStandingOrderId": {
            "maxLength": 40,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the international standing order resource."
          },
          "ConsentId": {
            "maxLength": 128,
            "minLength": 1,
            "type": "string",
            "description": "OB: Unique identification as assigned by the ASPSP to uniquely identify the consent resource."
          },
          "CreationDateTime": {
            "type": "string",
            "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Status": {
            "type": "string",
            "description": "Specifies the status of resource in code form.",
            "enum": [
              "Cancelled",
              "InitiationCompleted",
              "InitiationFailed",
              "InitiationPending"
            ]
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
            "format": "date-time"
          },
          "Debtor": {
            "$ref": "#/components/schemas/OBDebtorIdentification"
          },
          "Refund": {
            "$ref": "#/components/schemas/OBWriteInternationalFutureDatedResponse_Data_Refund"
          },
          "Charges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBWriteDomesticStandingOrderConsentResponse_Data_Charges"
            }
          },
          "Initiation": {
            "$ref": "#/components/schemas/OBInternationalStandingOrder"
          }
        },
        "example": null
      },
      "OBAccountAccessConsentResponse": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "ConsentId",
              "CreationDateTime",
              "Status",
              "StatusUpdateDateTime",
              "Permissions"
            ],
            "properties": {
              "ConsentId": {
                "description": "Unique identification as assigned to identify the account access consent resource.",
                "type": "string",
                "minLength": 1,
                "maxLength": 128
              },
              "CreationDateTime": {
                "$ref": "#/components/schemas/CreationDateTime"
              },
              "Status": {
                "description": "Specifies the status of consent resource in code form.",
                "type": "string",
                "enum": [
                  "Authorised",
                  "AwaitingAuthorisation",
                  "Rejected",
                  "Revoked"
                ]
              },
              "StatusUpdateDateTime": {
                "$ref": "#/components/schemas/StatusUpdateDateTime"
              },
              "Permissions": {
                "type": "array",
                "items": {
                  "description": "Specifies the Open Banking account access data types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                  "type": "string",
                  "enum": [
                    "ReadAccountsBasic",
                    "ReadAccountsDetail",
                    "ReadBalances",
                    "ReadBeneficiariesBasic",
                    "ReadBeneficiariesDetail",
                    "ReadDirectDebits",
                    "ReadOffers",
                    "ReadPAN",
                    "ReadParty",
                    "ReadPartyPSU",
                    "ReadSupplementaryAccountInfo",
                    "ReadFutureDatedPaymentsBasic",
                    "ReadFutureDatedPaymentsDetail",
                    "ReadStandingOrdersBasic",
                    "ReadStandingOrdersDetail",
                    "ReadStatementsBasic",
                    "ReadStatementsDetail",
                    "ReadTransactionsBasic",
                    "ReadTransactionsCredits",
                    "ReadTransactionsDebits",
                    "ReadTransactionsDetail"
                  ]
                },
                "minItems": 1
              },
              "TransactionFromDateTime": {
                "description": "Specified start date and time for the transaction query period.\nIf this is not populated, the start date will be open ended, and data will be returned from the earliest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
                "type": "string",
                "format": "date-time"
              },
              "TransactionToDateTime": {
                "description": "Specified end date and time for the transaction query period.\nIf this is not populated, the end date will be open ended, and data will be returned to the latest available transaction.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
                "type": "string",
                "format": "date-time"
              }
            }
          },
          "Links": {
            "$ref": "#/components/schemas/Links"
          },
          "Meta": {
            "$ref": "#/components/schemas/Meta"
          }
        }
      },
      "CreationDateTime": {
        "description": "Date and time at which the resource was created.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
        "type": "string",
        "format": "date-time"
      },
      "StatusUpdateDateTime": {
        "description": "Date and time at which the resource status was updated.All dates in the JSON payloads are represented in ISO 8601 date-time format. \nAll date-time fields in responses must include the timezone. An example is below:\n2020-04-05T10:43:07+03:00",
        "type": "string",
        "format": "date-time"
      },
      "OBPatchAccountAccessConsentRequest": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "type": "object",
            "required": [
              "Status"
            ],
            "properties": {
              "Status": {
                "description": "Specifies the status of consent resource in code form.",
                "type": "string",
                "enum": [
                  "Revoked"
                ]
              }
            }
          }
        }
      },
      "OBReadConsent1": {
        "type": "object",
        "required": [
          "Data",
          "Risk"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/AccountAccessConsent"
          },
          "Risk": {
            "$ref": "#/components/schemas/OBRisk2"
          }
        },
        "example": {
          "Data": {
            "ConsentId": 3158,
            "Status": "AwaitingAuthorisation",
            "StatusUpdateDateTime": "2019-11-28T10:39:52.000Z",
            "CreationDateTime": "2019-11-28T10:39:52.000Z",
            "Permissions": [
              "ReadAccountsDetail",
              "ReadBalances",
              "ReadTransactionsDetail",
              "ReadTransactionsCredits",
              "ReadTransactionsDebits"
            ],
            "ExpirationDateTime": "2017-05-02T00:00:00.000Z",
            "TransactionFromDateTime": "2017-05-03T00:00:00.000Z",
            "TransactionToDateTime": "2017-12-03T00:00:00.000Z"
          }
        }
      },
      "AccountAccessConsent": {
        "type": "object",
        "properties": {
          "ConsentId": {
            "type": "string",
            "example": 1198
          },
          "CreationDateTime": {
            "type": "string",
            "example": "2019-08-22T11:17:26Z"
          },
          "ExpirationDateTime": {
            "type": "string",
            "example": "2019-12-02T00:00:00+00:00"
          },
          "Permissions": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ReadAccountsBasic",
                "ReadAccountsDetail",
                "ReadBalances",
                "ReadStatementsBasic",
                "ReadStatementsDetail",
                "ReadTransactionsBasic",
                "ReadTransactionsCredits",
                "ReadTransactionsDebits",
                "ReadTransactionsDetail",
                "ReadScheduledPaymentsDetail"
              ],
              "example": "ReadAccountsDetail,ReadBalances,ReadTransactionsDetail,ReadTransactionsCredits,ReadTransactionsDebits"
            }
          },
          "Status": {
            "type": "string",
            "enum": [
              "AwaitingAuthorisation",
              "Rejected",
              "Authorised",
              "Revoked"
            ],
            "example": "AwaitingAuthorisation"
          },
          "StatusUpdateDateTime": {
            "type": "string",
            "example": "2019-08-22T11:17:26Z"
          },
          "TransactionFromDateTime": {
            "type": "string",
            "example": "2013-01-01T00:00:00+00:00"
          },
          "TransactionToDateTime": {
            "type": "string",
            "example": "2019-09-03T00:00:00+00:00"
          }
        }
      },
      "OBRisk2": {
        "type": "object",
        "description": "The Risk section is sent by the initiating party to the ASPSP. It is used to specify additional details for risk scoring for Account Info."
      },
      "OBReadAccount4": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBAccount4"
          }
        },
        "example": {
          "Data": {
            "Account": [
              {
                "AccountId": "00060000003",
                "Status": "Enabled",
                "Currency": "BHD",
                "AccountType": "Personal",
                "AccountSubType": "Savings",
                "Account": [
                  {
                    "SchemeName": "UK.OBIE.IBAN",
                    "Identification": "37291300000060000003"
                  }
                ]
              },
              {
                "AccountId": "00160000004",
                "Status": "Enabled",
                "Currency": "USD",
                "AccountType": "Personal",
                "AccountSubType": "Savings",
                "Account": [
                  {
                    "SchemeName": "UK.OBIE.IBAN",
                    "Identification": "37291300000060000004"
                  }
                ]
              },
              {
                "AccountId": "BH0103100011235",
                "Status": "Enabled",
                "Currency": "BHD",
                "AccountType": "Personal",
                "AccountSubType": "CreditCard",
                "Account": [
                  {
                    "SchemeName": "UK.OBIE.PAN",
                    "Identification": "4840830000811235"
                  }
                ]
              },
              {
                "AccountId": "BH0103100011236",
                "Status": "Enabled",
                "Currency": "BHD",
                "AccountType": "Personal",
                "AccountSubType": "CreditCard",
                "Account": [
                  {
                    "SchemeName": "UK.OBIE.PAN",
                    "Identification": "4840830000811236"
                  }
                ]
              }
            ]
          }
        }
      },
      "OBAccount4": {
        "type": "object",
        "properties": {
          "Account": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBAccount4Detail"
            }
          }
        }
      },
      "OBAccount4Detail": {
        "type": "object",
        "description": "Unambiguous identification of the account to which credit and debit entries are made.",
        "required": [
          "AccountId",
          "Currency",
          "AccountType",
          "AccountSubType"
        ],
        "properties": {
          "AccountId": {
            "description": "A unique and immutable identifier used to identify the account resource.",
            "type": "string",
            "example": "6023843783"
          },
          "Status": {
            "type": "string",
            "example": "Enabled"
          },
          "Currency": {
            "description": "Identification of the currency in which the account is held.",
            "type": "string",
            "example": "BHD"
          },
          "AccountType": {
            "type": "string",
            "example": "Personal"
          },
          "AccountSubType": {
            "type": "string",
            "example": "SavingAccounts"
          },
          "Account": {
            "type": "array",
            "items": {
              "type": "object",
              "description": "Provides the details to identify an account.",
              "required": [
                "SchemeName",
                "Identification"
              ],
              "properties": {
                "SchemeName": {
                  "type": "string",
                  "example": "UK.OBIE.IBAN"
                },
                "Identification": {
                  "type": "string",
                  "example": "6023843783"
                }
              }
            }
          }
        }
      },
      "OBReadBalance1": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDataBalance1"
          }
        },
        "example": {
          "Data": {
            "Balance": [
              {
                "AccountId": "15535101106001213BHD21101002522401",
                "Amount": {
                  "Amount": "50959.297",
                  "Currency": "BHD"
                },
                "CreditDebitIndicator": "Credit",
                "DateTime": "2019-11-29T14:31:10.283+08:00"
              }
            ]
          }
        }
      },
      "OBReadDataBalance1": {
        "type": "object",
        "properties": {
          "Balance": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBCashBalance1"
            }
          }
        }
      },
      "OBCashBalance1": {
        "type": "object",
        "description": "Set of elements used to define the balance details.",
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Type",
          "DateTime",
          "Amount"
        ],
        "properties": {
          "AccountId": {
            "type": "string",
            "example": "6023843783"
          },
          "Amount": {
            "type": "object",
            "required": [
              "Amount",
              "Currency"
            ],
            "description": "Amount of money of the cash balance.",
            "properties": {
              "Amount": {
                "type": "string",
                "example": "4685.40"
              },
              "Currency": {
                "type": "string",
                "example": "BHD"
              }
            }
          }
        }
      },
      "OBReadTransaction5": {
        "type": "object",
        "required": [
          "Data"
        ],
        "properties": {
          "Data": {
            "$ref": "#/components/schemas/OBReadDataTransaction5"
          }
        },
        "example": {
          "Data": {
            "Transaction": [
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "35601000021",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-04-28T08:00:00+08:00",
                "Amount": {
                  "Amount": "600.0",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "35601000026",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-04-28T08:00:00+08:00",
                "Amount": {
                  "Amount": "122",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "35601039299",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-04-28T08:00:00+08:00",
                "Amount": {
                  "Amount": "90.0",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "8803000027",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-07-14T08:00:00+08:00",
                "Amount": {
                  "Amount": "257.15",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "8803000022",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-07-14T08:00:00+08:00",
                "Amount": {
                  "Amount": "257.15",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "8803000037",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-07-14T08:00:00+08:00",
                "Amount": {
                  "Amount": "1513",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "8803000032",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-07-14T08:00:00+08:00",
                "Amount": {
                  "Amount": "241.82",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "8802001004",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2018-07-14T08:00:00+08:00",
                "Amount": {
                  "Amount": "100.0",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "18400000413",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2019-01-26T08:00:00+08:00",
                "Amount": {
                  "Amount": "273.43",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "18497256026",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2019-01-26T08:00:00+08:00",
                "Amount": {
                  "Amount": "50.0",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "18497256026",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2019-01-26T08:00:00+08:00",
                "Amount": {
                  "Amount": "301",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "18497256026",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2019-01-26T08:00:00+08:00",
                "Amount": {
                  "Amount": "302",
                  "Currency": "96"
                }
              },
              {
                "AccountId": "BH0103100011236",
                "TransactionId": "18497256026",
                "CreditDebitIndicator": "Credit",
                "Status": "Booked",
                "BookingDateTime": "2019-01-26T08:00:00+08:00",
                "Amount": {
                  "Amount": "3005",
                  "Currency": "96"
                }
              }
            ]
          }
        }
      },
      "OBReadDataTransaction5": {
        "type": "object",
        "properties": {
          "Transaction": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OBTransaction5"
            }
          }
        }
      },
      "OBTransaction5": {
        "type": "object",
        "description": "Provides further details on an entry in the report.",
        "required": [
          "AccountId",
          "CreditDebitIndicator",
          "Status",
          "BookingDateTime",
          "Amount"
        ],
        "properties": {
          "AccountId": {
            "type": "string",
            "example": "6023843783"
          },
          "TransactionId": {
            "type": "string",
            "example": "201902110000179-58aa5b87-6cf9-4ae5"
          },
          "CreditDebitIndicator": {
            "type": "string",
            "example": "Credit"
          },
          "Status": {
            "type": "string",
            "example": "Booked"
          },
          "BookingDateTime": {
            "type": "string",
            "example": "2019-02-11T02:52:47+08:00"
          },
          "Amount": {
            "$ref": "#/components/schemas/OBActiveOrHistoricCurrencyAndAmount_7"
          }
        }
      },
      "OBActiveOrHistoricCurrencyAndAmount_7": {
        "type": "object",
        "required": [
          "Amount",
          "Currency"
        ],
        "properties": {
          "Amount": {
            "type": "string",
            "example": "31.75"
          },
          "Currency": {
            "type": "string",
            "example": "BHD"
          }
        }
      },
      "PublicKeyResponse": {
        "type": "object",
        "properties": {
          "keyType": {
            "type": "string",
            "example": "EC"
          },
          "key": {
            "type": "string",
            "example": "asdbqowdqwbdq33odbwjql3e6owxbqwb32740bqwjldnqw17391349==qwdjlbkuqi==312f1nskldnqwkdnwq="
          },
          "algorithm": {
            "type": "string",
            "example": "ES256"
          }
        },
        "example": {
          "keyType": "EC",
          "Key": "asdbqowdqwbdq33odbwjql3e6owxbqwb32740bqwjldnqw17391349==qwdjlbkuqi==312f1nskldnqwkdnwq=",
          "alogorithm": "ES256"
        }
      },
      "WellKnownResponse": {
        "type": "object",
        "properties": {
          "token_endpoint": {
            "type": "string",
            "example": "https://api.sc.com/retail/v1/oauth2/token"
          },
          "revocation_endpoint": {
            "type": "string",
            "example": "https://test-api.sc.com/retail/v1/oauth2/revoke"
          },
          "jwks_uri": {
            "type": "string",
            "example": "https://test-api.sc.com/retail/v1/jwk/keys"
          },
          "authorization_endpoint": {
            "type": "string",
            "example": "https://test-retail.sc.com/retail/bh/ob/oauth/#/open-banking-consent-permission"
          },
          "issuer": {
            "type": "string",
            "example": "https://www.sc.com/"
          },
          "token_endpoint_auth_signing_alg_values_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "ES256"
              ],
              "example": "ES256"
            }
          },
          "scopes_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "accounts-consent",
                "accounts",
                "refreshToken"
              ],
              "example": "accounts accounts-consent"
            }
          },
          "response_types_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "code",
                "token"
              ],
              "example": "code"
            }
          },
          "grant_types_supported": {
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "client_credentials",
                "authorization_code"
              ],
              "example": "authorization_code"
            }
          },
          "service_documentation": {
            "type": "string",
            "example": "https://axess.sc.com/"
          }
        }
      }
    },
    "securitySchemes": {
      "TPPOAuth2Security": {
        "type": "oauth2",
        "description": "TPP client credential authorisation flow with the ASPSP",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://authserver.example/token",
            "scopes": {
              "accounts": "Ability to read Accounts information"
            }
          }
        }
      },
      "PSUOAuth2Security": {
        "type": "oauth2",
        "description": "OAuth flow, it is required when the PSU needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the PSU",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://authserver.example/authorization",
            "tokenUrl": "https://authserver.example/token",
            "scopes": {
              "accounts": "Ability to read Accounts information"
            }
          }
        }
      },
      "UserOAuth2Security": {
        "type": "oauth2",
        "description": "OAuth flow, it is required when the User/Customer needs to perform SCA with the ASPSP when a TPP wants to access an ASPSP resource owned by the User/Customer",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://authserver.example/authorization",
            "tokenUrl": "https://authserver.example/token",
            "scopes": {
              "payments": "Generic payment scope"
            }
          }
        }
      }
    }
  }
}