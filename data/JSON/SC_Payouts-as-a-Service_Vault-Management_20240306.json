{
    "openapi": "3.0.3",
    "info": {
        "description": "Vaults are API enabled virtual ledger system. Vault allows Clients to create hyper-contextualised virtual ledgers to represent a commercial unit operating within their value chains or ecosystem and seamlessly link it with fund flows in their physical bank account via Virtual Accounts (VA). For e.g. a vault can represent a specific “Party” e.g. supplier or customer or “Transaction” of an SCB Client.<br><br> Many programmatic payouts use cases require collecting the funds, ringfence and safeguard the funds into segregated accounts and then initiate payouts from the accounts.  The hassle and cost of opening and managing multiple physical bank accounts can be avoided by creating Vaults.<br><br>",
        "version": "2.0.0",
        "title": "Payouts-as-a-service – Vault Capability",
        "termsOfService": "https://www.sc.com/terms-and-conditions",
        "contact": {
            "name": "API Banking Support Team",
            "url": "https://www.sc.com",
            "email": "api.query@sc.com"
        },
        "license": {
            "name": "Company Licence",
            "url": "http://www.sc.com/licenses/LICENSE-2.0.html"
        }
    },
    "x-category": "Corporate",
    "tags": [
        {
            "name": "Vault Management",
            "x-subcategory": "Payouts As a Service"
        },
        {
            "name": "Vault Transactions",
            "x-subcategory": "Payouts As a Service"
        },
        {
            "name": "Vault Movements",
            "x-subcategory": "Payouts As a Service"
        },
        {
            "name": "Vault Administration",
            "x-subcategory": "Payouts As a Service"
        }
    ],
    "paths": {
        "/scv/v2/vault": {
            "post": {
                "tags": [
                    "Vault Management"
                ],
                "summary": "Create Vault",
                "description": "Create vaults to identify and account for a commercial unit to receive and record funds or another supported asset type.",
                "operationId": "createVault",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/createVaultRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createVaultAndVAResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            },
            "get": {
                "tags": [
                    "Vault Administration"
                ],
                "summary": "Get Vault Details",
                "description": "Fetch details of the requested vaults based on the filter criteria.",
                "operationId": "getVaultRequest",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"vaultNo\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - <br> {\"vaultNo\":{\"$in\":[\"vault-1\",\"vault-2\"]}}. <br><br>\nList of filters available for GET Vault Details request - <br> 1. vaultNo - Multiple vault numbers possible.<br> 3. vaultTreeNo - One value allowed.<br> 4. vaultType - one of party/transaction.<br>\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Vault Details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getVaultDetailsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/amend": {
            "post": {
                "tags": [
                    "Vault Management"
                ],
                "summary": "Amend Vault",
                "description": "Amend vaults attributes e.g. tags created earlier.",
                "operationId": "amendVault",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/amendVaultRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Amended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createVaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/amend/status/{status}": {
            "post": {
                "tags": [
                    "Vault Management"
                ],
                "summary": "Amend Vault Status",
                "description": "Amend vaults status created earlier e.g. Vault status can be changed to inactive which will pause all debit transactions and movements from the vault. <br>Credit transactions into the vault will be moved to miscellaneous vault.<br>Likewise, an inactive vault can be activated as well.",
                "operationId": "amendVaultStatus",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "path",
                        "required": true,
                        "description": "Status to which the vault will be updated. The Vault Status can either be 'Active' or 'Inactive'.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Active",
                                "Inactive"
                            ]
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/amendVaultStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Status Amended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createVaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/delete": {
            "post": {
                "tags": [
                    "Vault Management"
                ],
                "summary": "Delete Vault",
                "description": "Delete an existing vault that has been created earlier. Ledger balance needs to be zero before this action can be invoked successfully.",
                "operationId": "deleteVault",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/amendVaultStatusRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/deleteVaultResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/transaction": {
            "post": {
                "tags": [
                    "Vault Transactions"
                ],
                "summary": "Create Vault Transaction",
                "description": "Top up or drawdown funds or supported asset type to/ from a vault.",
                "operationId": "createVaultTransactions",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/createVaultTransaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Transaction",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createVaultTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            },
            "get": {
                "tags": [
                    "Vault Transactions"
                ],
                "summary": "Get Vault Transactions",
                "description": "Fetch details of Vault Transactions for the requested vaults based on the filter criteria.",
                "operationId": "getVaultTransactions",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"vaultNo\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - <br> {\"vaultNo\":{\"$in\":[\"vault-1\",\"vault-2\"]}}. <br><br>\nList of filters available for GET Vault Transactions request - <br> 1. vaultTreeNo - Single value allowed. <br> 2. vaultNo - Multiple vault numbers possible.<br> 3. txnReference - Multiple possible <br> 4. txnType - one of drawdown/topup <br> 5. startDate - starting date of the date range for which transactions need to be fetched 6. endDate - ending date of the date range for which transactions need to be fetched\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Vault Transactions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getVaultTransactionsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/movement": {
            "post": {
                "tags": [
                    "Vault Movements"
                ],
                "summary": "Create Vault Movement",
                "description": "Enables the client to move the funds within vaults of the same vault tree.",
                "operationId": "createVaultMovement",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/createVaultMovement"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Vault Movement",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createVaultMovementResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            },
            "get": {
                "tags": [
                    "Vault Movements"
                ],
                "summary": "Get Vault Movements",
                "description": "Fetch details of Vault Movements for the requested vaults based on the filter criteria.",
                "operationId": "getVaultMovements",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"vaultNo\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - <br> {\"vaultNo\":{\"$in\":[\"vault-1\",\"vault-2\"]}}. <br><br>\nList of filters available for GET Vault Movements request - <br> 1. vaultTreeNo - One value allowed. <br> 2. fromVaultNo - One value allowed.<br> 3. toVaultNo - One value allowed. <br> 4. movementReference - Multiple possible <br> 5. startDate - starting date of the date range for which movements need to be fetched 6. endDate - ending date of the date range for which movements need to be fetched\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Vault Movements",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getVaultMovementsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/vault/balances": {
            "get": {
                "tags": [
                    "Vault Administration"
                ],
                "summary": "Get Vault Balances",
                "description": "Fetch balances of the requested vaults based on the filter criteria.",
                "operationId": "getVaultBalances",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"vaultNo\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - <br> {\"vaultNo\":{\"$in\":[\"vault-1\",\"vault-2\"]}}. <br><br>\nList of filters available for GET Vault Balances request - <br> 1. vaultTreeNo - One value allowed. <br> 2. vaultNo - Multiple vault numbers possible.<br>\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Vault Balances",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getVaultBalancesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scv/v2/tree/": {
            "get": {
                "tags": [
                    "Vault Administration"
                ],
                "summary": "Get Tree Details",
                "description": "Fetch details of vault tree based on the filter criteria.",
                "operationId": "getTreeRequest",
                "parameters": [
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814 – 8-character client id provided by SCB which is unique for each client. <br> yymmdd – Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx – running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"vaultNo\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - <br> {\"vaultNo\":{\"$in\":[\"vault-1\",\"vault-2\"]}}. <br><br>\nList of filters available for GET Tree Details request - <br> 1. vaultTreeNo - Multiple tree numbers possible.<br> 2. physicalAccountNo - multiple values allowed.<br> 3. country - one value allowed.<br> 4. assetCurrency - one value allowed.<br> 5. tag - multiple values allowed.<br> 6. operatingBal - multiple value allowed<br> 7. status - one value allowed<br><br>\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Tree Details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getTreeDetailsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        }
    },
    "servers": [
        {
            "url": "https://api.standardchartered.com/openapi"
        }
    ],
    "components": {
        "schemas": {
            "createVaultRequest": {
                "type": "object",
                "description": "Create Vault Request API payload",
                "required": [
                    "vaultName",
                    "vaultNo",
                    "vaultType"
                ],
                "properties": {
                    "vaultName": {
                        "type": "string",
                        "description": "(max length - 100 characters) The name to identify a vault."
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "(immutable) (max length - 100 characters) Unique vault number to identify a vault which can represent either be a:<br> - 'partyRefId' for a party vault or<br> - 'platformRefId' for a transaction vault or<br> - a unique reference number assigned by the client<br>"
                    },
                    "treeIdentifiers": {
                        "type": "object",
                        "description": "Set of attributes to identify a tree to place a vault uniquely in case of multiple trees configured.<br> Either vaultTreeNo OR physicalAccountNo-country-assetCurrency combination needs to be provided to identify the tree.<br> Mandatory section in case of multiple trees configured for client",
                        "properties": {
                            "vaultTreeNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Unique Reference Number for a vault tree."
                            },
                            "physicalAccountNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Physical bank account number associated with the vault."
                            },
                            "country": {
                                "type": "string",
                                "description": "(immutable) The country of the physical account number. 2 character ISO country code"
                            },
                            "assetCurrency": {
                                "type": "string",
                                "description": "(immutable) Asset Currency for the configured asset type."
                            }
                        }
                    },
                    "parentIdentifiers": {
                        "type": "object",
                        "description": "Parent vault identifiers if needed. To be passed if tree depth is more than 1. <br> Either parent vault number OR vaNumber-country-currency combination has to be mentioned to identify parent vault.<br>\n If none of the parent vault identifiers are provided then this vault will be tagged under the root vault of the tree.",
                        "properties": {
                            "vaultNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Parent Vault Number to uniquely identify the Vault in the platform.<br>"
                            },
                            "vaNumber": {
                                "type": "number",
                                "description": "(immutable) (max length - 34 characters) Virtual account number of the parent vault"
                            },
                            "country": {
                                "type": "string",
                                "description": "(immutable) Parent vault's country code",
                                "example": "SG"
                            },
                            "currency": {
                                "type": "string",
                                "description": "(immutable) Parent vault's currency code"
                            }
                        }
                    },
                    "virtualAccountDetails": {
                        "type": "object",
                        "description": "virtual account identifiers if needed.",
                        "properties": {
                            "vaIBAN": {
                                "type": "string",
                                "description": "(immutable) (max length - 34 characters) virtual IBAN to be populated where applicable."
                            },
                            "vaNumber": {
                                "type": "number",
                                "description": "(immutable) (max length - 34 characters) Virtual account number to be assigned for the vault, to be present if asset type is money. Can also be used to identify tree number uniquely with country and assetCurrency under treeIdentifiers section if the virtual account is already registered."
                            },
                            "vaName": {
                                "type": "string",
                                "description": "(immutable) (max length - 35 digits) The name of the virtual account number. Maximum length - 35 characters. Special characters allowed are @ & ( ) / + ? ! #"
                            }
                        }
                    },
                    "vaultType": {
                        "type": "string",
                        "description": "(immutable) The type of vault.",
                        "enum": [
                            "party",
                            "transaction"
                        ]
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "Deal Ref ID where the party is onboarded. Applicable if the party is onboarded to multiple deals - to correctly identify the deal for party-vault onboarding."
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "(immutable) Unique reference number for a party. Mandatory if vaultType = Party"
                    },
                    "platformRefId": {
                        "type": "string",
                        "description": "(immutable) Unique reference number for a transaction. Mandatory if vaultType = transaction"
                    },
                    "tag": {
                        "type": "string",
                        "description": "(max length - 40 characters) Description of Vault, such as category (buyer, seller, marketplace, etc)"
                    },
                    "limitApplied": {
                        "type": "string",
                        "description": "Whether to apply the limits or not while performing transactions/movements - Yes or No. <br> Will be defaulted to 'No'.",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "No"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/limits"
                    }
                }
            },
            "limits": {
                "type": "object",
                "description": "Section to specify various vault limits. To be specified if limitApplied is 'Yes'.",
                "properties": {
                    "maxTopupLimit": {
                        "type": "number",
                        "description": "Maximum amount allowed for topup of a Vault"
                    },
                    "minTopupLimit": {
                        "type": "number",
                        "description": "Minimum amount required for topup of a Vault"
                    },
                    "maxBalanceLimit": {
                        "type": "number",
                        "description": "Maximum balance that a Vault can hold"
                    },
                    "minBalanceLimit": {
                        "type": "number",
                        "description": "Minimum balance that a Vault must maintain"
                    },
                    "maxDrawdownLimit": {
                        "type": "number",
                        "description": "Maximum amount allowed for drawdown from a Vault"
                    },
                    "minDrawdownLimit": {
                        "type": "number",
                        "description": "Minimum amount required for drawdown from a Vault"
                    }
                }
            },
            "amendVaultRequest": {
                "type": "object",
                "description": "Amend Vault Request API payload",
                "required": [
                    "vaultTreeNo",
                    "vaultNo"
                ],
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Unique Reference Number for the vault tree in which the vault to be amended is present.<br> Mandatory to be passed if client has multiple trees configured."
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Vault Number assigned by the client belonging to the vault to be amended. <br>"
                    },
                    "tag": {
                        "type": "string",
                        "description": "(max length - 40 characters) Description of Vault, such as category (buyer, seller, marketplace, etc)"
                    },
                    "limitApplied": {
                        "type": "string",
                        "description": "Whether to apply the limits or not while performing transactions/movements - Yes or No. <br> Will be defaulted to 'No'.",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "No"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/limits"
                    }
                }
            },
            "amendVaultStatusRequest": {
                "type": "object",
                "description": "Amend Vault Request Status API payload",
                "required": [
                    "vaultNo"
                ],
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Unique Reference Number for a vault tree, required in case of multiple trees"
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Vault Number assigned by the client"
                    }
                }
            },
            "vaultStatus": {
                "type": "string",
                "enum": [
                    "Pending",
                    "Active",
                    "Inactive",
                    "Closed"
                ],
                "description": "The status of the vault.<br><br>\nPending - When Virtual Account Number registration with the vault is in progress.<br><br>\nActive - When a virtual account number is registered with the vault.<br><br>\nInactive - When the vault has been inactive by the client for debit transactions and all movements - either via vault status change API or party inactivation API <br><br>\nClosed - When Vault is logically closed for transactions/movements."
            },
            "createVaultAndVAResponse": {
                "type": "object",
                "description": "Create Vault Request Success Response",
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "Unique Reference Number for a vault tree"
                    },
                    "vaultNo": {
                        "type": "string"
                    },
                    "vaultStatus": {
                        "$ref": "#/components/schemas/vaultStatus"
                    },
                    "vaDetails": {
                        "type": "object",
                        "properties": {
                            "vaNumber": {
                                "type": "number"
                            },
                            "vaName": {
                                "type": "string"
                            },
                            "vaIBAN": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "createVaultResponse": {
                "type": "object",
                "description": "Create Vault Request Success Response",
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "Unique Reference Number for a vault tree"
                    },
                    "vaultNo": {
                        "type": "string"
                    },
                    "vaultStatus": {
                        "$ref": "#/components/schemas/vaultStatus"
                    }
                }
            },
            "deleteVaultResponse": {
                "type": "object",
                "description": "Delete Vault Request Success Response",
                "properties": {
                    "vaultTreeNo": {
                        "type": "string"
                    },
                    "vaultNo": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "example": "closed"
                    }
                }
            },
            "createVaultTransaction": {
                "type": "object",
                "required": [
                    "txnReference",
                    "vaultTreeNo",
                    "vaultNo",
                    "txnType",
                    "amount",
                    "txnDate"
                ],
                "properties": {
                    "txnReference": {
                        "type": "string",
                        "description": "(max length - 40 characters) Client's Unique reference number for a transaction"
                    },
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Unique Reference Number for a vault tree"
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Vault Number to which the client requires to topup or drawdown"
                    },
                    "txnType": {
                        "type": "string",
                        "description": "Type of transaction - Drawdown or Topup",
                        "enum": [
                            "drawdown",
                            "topup"
                        ]
                    },
                    "txnDate": {
                        "type": "string",
                        "description": "Transaction date in yyyy-mm-dd format",
                        "example": "2022-12-31"
                    },
                    "amount": {
                        "type": "string",
                        "description": "Amount of a transaction"
                    }
                }
            },
            "createVaultTransactionResponse": {
                "type": "object",
                "properties": {
                    "txnReference": {
                        "type": "string",
                        "description": "Client's Unique reference number for a transaction"
                    },
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "Unique Reference Number for a vault tree"
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "Vault Number to which the client requires to topup or drawdown"
                    }
                }
            },
            "createVaultMovement": {
                "type": "object",
                "required": [
                    "vaultTreeNo",
                    "movementReference",
                    "amount",
                    "fromVaultNo",
                    "toVaultNo"
                ],
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Unique Reference Number for a vault tree."
                    },
                    "movementReference": {
                        "type": "string",
                        "description": "(max length - 40 characters) Client's reference number for movement within vaults"
                    },
                    "fromVaultNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Vault no from which the amount is to be debited.",
                        "example": "123456xxxx"
                    },
                    "toVaultNo": {
                        "type": "string",
                        "description": "(max length - 100 characters) Vault no to which the amount is to be credited."
                    },
                    "amount": {
                        "type": "string",
                        "description": "The amount to transfer",
                        "example": 100
                    }
                }
            },
            "createVaultMovementResponse": {
                "type": "object",
                "properties": {
                    "movementReference": {
                        "type": "string",
                        "description": "Movement Reference Number"
                    },
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "Unique Reference Number for a vault tree."
                    },
                    "fromVaultNo": {
                        "type": "string",
                        "description": "Vault no from which the amount is debited"
                    },
                    "toVaultNo": {
                        "type": "string",
                        "description": "Vault no to which the amount is credited"
                    }
                }
            },
            "getVaultDetailsResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "vaultStatus": {
                                    "$ref": "#/components/schemas/vaultStatus"
                                },
                                "vaultDetails": {
                                    "type": "object",
                                    "description": "Vault Details for Get Vault request",
                                    "properties": {
                                        "vaultName": {
                                            "type": "string",
                                            "description": "(max length - 100 characters) The name to identify a vault."
                                        },
                                        "vaultNo": {
                                            "type": "string",
                                            "description": "(immutable) (max length - 100 characters) Unique vault number to identify a vault which can represent either be a:<br> - 'partyRefId' for a party vault or<br> - 'platformRefId' for a transaction vault or<br> - a unique reference number assigned by the client<br>"
                                        },
                                        "vaultTreeNo": {
                                            "type": "string",
                                            "description": "(immutable) (max length - 100 characters) Unique Reference Number for a vault tree."
                                        },
                                        "parentVaultNo": {
                                            "type": "string",
                                            "description": "(immutable) (max length - 100 characters) Parent Vault Number to uniquely identify the Vault in the platform.<br>"
                                        },
                                        "virtualAccountDetails": {
                                            "type": "object",
                                            "description": "virtual account identifiers if needed.",
                                            "properties": {
                                                "vaIBAN": {
                                                    "type": "string",
                                                    "description": "(immutable) (max length - 34 characters) virtual IBAN to be populated where applicable."
                                                },
                                                "vaNumber": {
                                                    "type": "number",
                                                    "description": "(immutable) (max length - 34 characters) Virtual account number to be assigned for the vault, to be present if asset type is money. Can also be used to identify tree number uniquely with country and assetCurrency under treeIdentifiers section if the virtual account is already registered."
                                                },
                                                "vaName": {
                                                    "type": "string",
                                                    "description": "(immutable) (max length - 35 digits) The name of the virtual account number. Maximum length - 35 characters. Special characters allowed are @ & ( ) / + ? ! #"
                                                }
                                            }
                                        },
                                        "vaultType": {
                                            "type": "string",
                                            "description": "(immutable) The type of vault.",
                                            "enum": [
                                                "party",
                                                "transaction"
                                            ]
                                        },
                                        "partyRefId": {
                                            "type": "string",
                                            "description": "(immutable) Unique reference number for a party. Mandatory if vaultType = Party"
                                        },
                                        "platformRefId": {
                                            "type": "string",
                                            "description": "(immutable) Unique reference number for a transaction. Mandatory if vaultType = transaction"
                                        },
                                        "tag": {
                                            "type": "string",
                                            "description": "(max length - 40 characters) Description of Vault, such as category (buyer, seller, marketplace, etc)"
                                        },
                                        "limitApplied": {
                                            "type": "string",
                                            "description": "Whether to apply the limits or not while performing transactions/movements - Yes or No. <br> Will be defaulted to 'No'.",
                                            "enum": [
                                                "Yes",
                                                "No"
                                            ],
                                            "example": "No"
                                        },
                                        "limits": {
                                            "$ref": "#/components/schemas/limits"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "getTreeDetailsResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "vaultTreeNo": {
                                    "type": "string"
                                },
                                "treeName": {
                                    "type": "string"
                                },
                                "txnLimitsEnabled": {
                                    "type": "boolean"
                                },
                                "movementsLimitsEnabled": {
                                    "type": "boolean"
                                },
                                "physicalAccountNo": {
                                    "type": "string",
                                    "description": "Physical bank account number associated with the vault."
                                },
                                "country": {
                                    "type": "string",
                                    "description": "The country of the physical account number. 2 character ISO country code"
                                },
                                "currency": {
                                    "type": "string",
                                    "description": "Asset Currency for the configured asset type."
                                },
                                "tag": {
                                    "type": "string"
                                },
                                "assetType": {
                                    "type": "string"
                                },
                                "operatingBal": {
                                    "type": "string",
                                    "enum": [
                                        "ledger_bal",
                                        "available_bal",
                                        "theoretical_bal"
                                    ]
                                },
                                "status": {
                                    "type": "string",
                                    "enum": [
                                        "active",
                                        "inactive"
                                    ]
                                }
                            }
                        }
                    }
                }
            },
            "getVaultBalancesResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "vaultTreeNo": {
                                    "type": "string",
                                    "description": "Unique Reference Number for a vault tree."
                                },
                                "vaultNo": {
                                    "type": "string",
                                    "description": "Unique Vault Number example: \"123456xxxx\""
                                },
                                "availableBalance": {
                                    "type": "number",
                                    "description": "Available balance = Ledger balance - payments in transit/ scheduled payments example: 10000"
                                },
                                "ledgerBalance": {
                                    "type": "number",
                                    "description": "Ledger balance represents the sum of credits and debits in the vault. example: 10000"
                                },
                                "theoreticalBalance": {
                                    "type": "number",
                                    "description": "Theoretical Balance is a combination of Ledger balance plus the residual credit minus residual debit (from anticipations) amounts of the vault. example: 10000"
                                },
                                "poolAvailableBalance": {
                                    "type": "number",
                                    "description": "Pool available balance is sum of the available balance of the parent vault plus the available balance of all its child vault. For leaf node, pool available balance will be same as Available Balance. example: 10000"
                                },
                                "poolLedgerBalance": {
                                    "type": "number",
                                    "description": "Pool ledger balance is sum of the ledger balance of the parent vault plus the ledger balance of all its child vault. For leaf node, pool ledger balance will be same as ledger Balance. example: 10000"
                                },
                                "poolTheoreticalBalance": {
                                    "type": "number",
                                    "description": "Pool theoretical balance is sum of the theoretical balance of the parent vault plus the theoretical balance of all its child vault. For leaf node, pool theoretical balance will be same as theoretical Balance. example: 10000"
                                }
                            }
                        }
                    }
                }
            },
            "getVaultTransactionsResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "$ref": "#/components/schemas/createVaultTransaction"
                        }
                    }
                }
            },
            "getVaultMovementsResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "movementReference": {
                                    "type": "string",
                                    "description": "Client's reference number for movement within vaults"
                                },
                                "vaultTreeNo": {
                                    "type": "string",
                                    "description": "Unique Reference Number for a vault tree."
                                },
                                "fromVaultNo": {
                                    "type": "string",
                                    "description": "Vault no from which the amount is to be debited.",
                                    "example": "123456xxxx"
                                },
                                "toVaultNo": {
                                    "type": "string",
                                    "description": "Vault no to which the amount is to be credited."
                                },
                                "amount": {
                                    "type": "string",
                                    "description": "The amount to transfer",
                                    "example": 100
                                },
                                "movementDate": {
                                    "type": "string",
                                    "description": "Date of movement within vaults in YYYY-MM-DD format",
                                    "example": "2022-12-31"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}