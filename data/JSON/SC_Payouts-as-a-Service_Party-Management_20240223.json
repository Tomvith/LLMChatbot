{
    "openapi": "3.0.1",
    "info": {
        "title": "Payouts As a Service",
        "description": "Payouts-as-a-Service (PaaS) allows clients to provide details of a transaction as they occur, such as purchase/sale on a ecommerce marketplace with the option to pre-set payment preferences. \r\n\n The bank then programmatically executes the payment contract without clients or their counterparties having to issue separate payment instructions.",
        "termsOfService": "https://www.sc.com/s2b/legalnotice/",
        "contact": {
            "name": "Payouts as a Service (PaaS)",
            "url": "https://www.sc.com",
            "email": "api.query@sc.com"
        },
        "license": {
            "name": "Company Licence",
            "url": "http://www.sc.com/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.standardchartered.com/openapi"
        }
    ],
    "tags": [
        {
            "name": "Party Management",
            "description": "Facilitates creation,  management and removal of parties/payees who can participate in payment contracts.",
            "x-subcategory": "Payouts As a Service"
        },
        {
            "name": "Payment Contracts",
            "description": "Provides details of a transaction e.g. buy-sell and along with the payout construct e.g. scheduled, conditional or immediate.",
            "x-subcategory": "Payouts As a Service"
        },
        {
            "name": "Payment Administration",
            "description": "Enables you to check status and manage payout lifecycle actions.",
            "x-subcategory": "Payouts As a Service"
        }
    ],
    "paths": {
        "/scs/{version}/party": {
            "post": {
                "tags": [
                    "Party Management"
                ],
                "summary": "Create Party",
                "description": "The Create Party API facilitates a setup of party details for Payout-as-a-Service (PaaS). With this API you can configure various details e.g.  Bank Account, Contacts, payment preferences and split configurations of a Party who will participate in a payment contract",
                "operationId": "createParty",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/createParty"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/createParty"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/createParty"
                            }
                        }
                    },
                    "description": "To onboard a party into a deal",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Party onboarded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createPartyResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/createPartyAndVaultResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "Active",
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyId": "SG-AS-02-20012-1001201",
                                            "partyRefId": "1001201",
                                            "vault": {
                                                "vaultTreeNo": "T12421",
                                                "vaultNo": "W1234",
                                                "vaultStatus": "Active",
                                                "vaDetails": {
                                                    "vaNumber": 1234,
                                                    "vaName": "VANAME",
                                                    "vaIBAN": "VAIBAN123"
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPartyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            },
            "get": {
                "tags": [
                    "Party Management"
                ],
                "summary": "Get Parties",
                "description": "The Get Party API enables you to fetch details of a Party/ Parties that have been onboarded on to a deal for the client. Results can be filtered using the following parameters or the combination of it - single and multiple dealRefId, partyRefId, partyId, responsibility, partyType, status. Results can be sorted by validity date as well.",
                "operationId": "getParties",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - ?filter={\"partyRefId\":\"P1012000\"}. <br>\nMultiple values for the same filter can be supplied as - {\"dealRefId\":{\"$in\":[\"Deal-1\",\"Deal-2\"]}}. <br>\nList of filters available for GET party request - <br>\n1.  dealRefId - to filter the results for a particular dealRefId. Multiple dealRefId possible <br>\n2.  partyRefId - to filter by partyRefId, multiple partyRefId filter possible <br>\n3.  partyId - to filter by partyId, multiple partyId possible <br>\n4.  responsibility - to filter by party responsibility. Multiple responsibilities possible <br>\n5.  partyType - to filter by partyType <br>\n6.  status - to filter by status <br>\nCombination of filters can be done as comma separated JSON values - {\"filter1\":\"value1\",\"filter2\":\"value2\"}",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Records to be sorted in a particular order by a key provided, in an ascending or descending manner. example- ?sort={\"validUntil\":\"asc\"} for ascending, ?sort={\"validUntil\":\"dsc\"} for descending.\nList of fields available to sort in get party API response -<br>\n1.  validUntil - to sort the results by validUntil",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Parties",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPartyResponse"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPartyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/party/{partyId}": {
            "post": {
                "tags": [
                    "Party Management"
                ],
                "summary": "Amend Party",
                "description": "The Amend Party API allows you to change details of an existing Party/ Parties using partyId which was provided during the creation of the party for the deal.\n  The response is a representation or acknowledgment that a party was amended successfully and its status.",
                "operationId": "POST-party-amend",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "partyId",
                        "required": true,
                        "description": "Party ID to be amended",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/amendParty"
                            }
                        }
                    },
                    "description": "Amends a party",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Party amended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPartyResponse"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "Inactive",
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyId": "SG-AS-02-20012-1001201",
                                            "partyRefId": "1001201"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/amendPartyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/party/{partyId}/delete": {
            "post": {
                "tags": [
                    "Party Management"
                ],
                "summary": "Delete Party",
                "description": "The Delete Party API allows you to remove details of an existing Party/ Parties from the deal.  The response is a representation or acknowledgment that a party was deleted successfully and its status.",
                "operationId": "DELETE-party",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "partyId",
                        "required": true,
                        "description": "Unique reference ID of PaaS for a party to be removed from the deal",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Party Deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createPartyResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/deletePartyAndVaultResponse"
                                        }
                                    ]
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "Inactive",
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyId": "SG-AS-02-20012-1001201",
                                            "partyRefId": "1001201",
                                            "vault": [
                                                {
                                                    "vaultTreeNo": "T12421",
                                                    "vaultNo": "W1234",
                                                    "vaultStatus": "Closed"
                                                }
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SC-BUS-ERR-01",
                                                "errorDescription": "Functional Issue"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SC-TECH-ERR-01",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Create Payment Contract",
                "description": "The Create Payment Contract API records the details of a transaction and along with the payout construct i.e. scheduled, conditional or immediate and other preferences required to be applied on the payment. In case of payment release type set as Conditional, platformRefId with status as Success will be sent back. In case of Scheduled/Immediate, payment details such as end to end ID, fragment IDs and fragment statuses will also be sent back along with platform Ref ID and request status as Success.",
                "operationId": "POST",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/createPaymentContract"
                },
                "responses": {
                    "200": {
                        "description": "Success - Payment Contract Created. In case of payment release type as Conditional, platformRefId with status as Success will be sent back. In case of Scheduled/Immediate, payment details such as end to end ID, fragment IDs and fragment statuses will also be sent back along with platform Ref ID and request status as Success.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createPaymentContractResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/createPaymentResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            },
            "get": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Get Payment Contracts",
                "description": "The Get Payment Contract API retrieves details of a Payment Contract/ Contracts in the platform for a deal. Records can be filtered by the various keys provided in json format - dealRefId, platformRefId, debtor. partyRefId, paymentContractStatus, paymentContractDate - and sorted by payment contract date.",
                "operationId": "GET Payment Contracts",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - {\"dealRefId\":\"Deal-1\"} <br>\nMultiple values for the same filter can be supplied as - [URL]?filter={\"dealRefId\":{\"$in\":[\"Deal-1\",\"Deal-2\"]}}. <br>\nList of filters available for GET Payment Contract Request - <br>\n1.  dealRefId - to filter the results for a particular dealRefId. Multiple dealRefId possible <br>\n2.  platformRefId - to filter the results for a platformRefId. Multiple platformRefId possible <br>\n3.  debtor.partyRefId - to filter the results for a debtor partyRefId. Multiple debtor partyRefIds possible <br>\n4.  paymentContractStatus - to filter the results by payment status. Multiple payment statuses possible <br>\n5.  paymentContractDate - to filter the results by payment contract date. <br> Mutiple payment contract dates possible.<br> Date range also can also be provided via: ?filter={\"paymentContractDate\":{\"$gte\":\"DDMMYYYY\",\"$lte\":\"DDMMYYYY\"}}<br>\n\n  $lte - less than or equal to <br>\n\n  $gte - greater than or equal to <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Records to be sorted in a particular order by a key provided, in an ascending or descending manner. example- [URL]?sort={\"validUntil\":\"asc\"} for ascending, ?sort={\"validUntil\":\"dsc\"} for descending <br>\nList of fields available to sort in get payment contract response - <br>\n1.  paymentContractDate - To sort the response records by payment contract date <br>",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Payment Contracts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPaymentContractResponse"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPaymentContractResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract/{platformRefId}": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Amend Payment Contract",
                "description": "The Amend Payment Contract API allows to amend details of a Payment Contract/ Contracts already created in the platform. Reference number of a payment contract is used to track down the contract for details amendment. The response is a representation or acknowledgment that a payment contract was amended successfully and its status. To change the status of a specific payment contract, you are required to use the Amend Payment Contract Status API.",
                "operationId": "POST Payment Contract",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platformRefId",
                        "required": true,
                        "description": "Client provided reference number to track a Payment Contract.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "$ref": "#/components/requestBodies/createPaymentContract"
                },
                "responses": {
                    "200": {
                        "description": "Success - Payment Contract Amended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createPaymentContractResponse"
                                        },
                                        {
                                            "$ref": "#/components/schemas/createPaymentResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract/{platformRefId}/action": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Manage Payment Contract",
                "description": "The Manage Payment Contract API allows you to perform payment actions relating to a payment contract which was previously submitted e.g. trigger conditional payout or a refund",
                "operationId": "POST Action",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platformRefId",
                        "required": true,
                        "description": "Client provided reference number to track a Payment Contract.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/managePaymentContract"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/managePaymentContract"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/managePaymentContract"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success - Action Successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPaymentResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract/{platformRefId}/status/{status}": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Amend Payment Contract Status",
                "description": "The Amend Payment Contract Status API enables you to change the status of the payment contract between Hold (to warehouse but hold the execution of payment contract) and Active (to process the payment as per the payment contract received). The response is a representation or acknowledgment that request was received successfully.",
                "operationId": "POST Amend Status Contract",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platformRefId",
                        "required": true,
                        "description": "Client provided reference number to track a Payment Contract.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "status",
                        "required": true,
                        "description": "status of the Payment Contract as defined by tag paymentContractStatus to be amended<br> Active - To process the payment as per the payment contract received<br> Hold - To warehouse but hold the execution of payment contract",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "Hold",
                                "Active"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Payment Contract Status Amended",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "$ref": "#/components/schemas/createPaymentContractResponse"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract/{platformRefId}/close": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Close Payment Contract",
                "description": "The Close Payment Contract API allows you to close payment contract logically upon validation at the end of the contract lifecycle. The response is a representation or acknowledgment that request was received successfully.",
                "operationId": "POST Close Payment Contract",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platformRefId",
                        "required": true,
                        "description": "Client provided reference number to track a Payment Contract",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Payment Contract Closed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPaymentContractResponse"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "Status": "Success",
                                            "platformRefId": "12312312312"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPaymentContractResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/paymentcontract/{platformRefId}/cancel": {
            "post": {
                "tags": [
                    "Payment Contracts"
                ],
                "summary": "Cancel Payment Contract",
                "description": "The Cancel Payment Contract API cancels payment contract before it gets initiated / processed via Manage Payment Contract API. Applicable only for Conditional Payment Release Type. The response is a representation or acknowledgment that request was received successfully.",
                "operationId": "POST Cancel Payment Contract",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "platformRefId",
                        "required": true,
                        "description": "Client provided reference number to track a Payment Contract",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Payment Contract Closed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cancelPaymentResponse"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "Status": "Cancelled",
                                            "platformRefId": "12312312312"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/payment": {
            "get": {
                "tags": [
                    "Payment Administration"
                ],
                "summary": "Get Payments",
                "description": "The Get Payments API retrieves the Payments in the platform for a deal triggered for requested filter criteria. Response can be sorted or filtered using specific parameters such as dealRefId, platformRefId, endToEndId etc.",
                "operationId": "GET Payments",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "page",
                        "description": "Page number of the request",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "count",
                        "description": "Number of records to return per page",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "totalCount",
                        "description": "Boolean flag to specify if count is needed - true",
                        "schema": {
                            "type": "boolean"
                        },
                        "example": true
                    },
                    {
                        "in": "query",
                        "name": "filter",
                        "description": "Records to filter by the keys available. Format to be JSON. example - {\"dealRefId\":\"Deal-1\"} <br>\nMultiple values for the same filter can be supplied as - [URL]?filter={\"dealRefId\":{\"$in\":[\"Deal-1\",\"Deal-2\"]}}. <br>\nList of filters available for GET Payments Request - <br>\n1.  dealRefId - to filter the results for a particular dealRefId. Multiple dealRefId possible <br>\n2.  platformRefId - to filter the results for a platformRefId. Multiple platformRefId possible <br>\n3. endToEndId - to filter the results by endToEndId, Multiple possible. <br>\n3.  paymentInfo.partyRefId - to filter the results for a debtor partyRefId. Multiple debtor partyRefIds possible <br>\n4. requestedExecutionOn - to filter the results by Transaction Execution Date. <br>\n Multiple dates possible.<br>\nDate range also can also be provided via: ?filter={\"requestedExecutionOn\":{\"$gte\":\"DDMMYYYY\",\"$lte\":\"DDMMYYYY\"}}<br>\n\n  $lte - less than or equal to <br>\n\n  $gte - greater than or equal to <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "sort",
                        "description": "Records to be sorted in a particular order by a key provided, in an ascending or descending manner. example- [URL]?sort={\"validUntil\":\"asc\"} for ascending, ?sort={\"validUntil\":\"dsc\"} for descending <br>\nList of fields available to sort in get payments response - <br>\n1.  requestedExecutionOn - To sort the response records by Payment Execution Date <br>",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Get Payment Contracts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPaymentsResponse"
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/getPaymentsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/payment/{endToEndId}/cancel": {
            "post": {
                "tags": [
                    "Payment Administration"
                ],
                "summary": "Cancel Payment",
                "description": "The Cancel Payment API enables you to cancel a payment for requested filter criteria which was previously scheduled by Create Payment Contract API or Manage Payment Contract API",
                "operationId": "POST Cancel Payment",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "endToEndId",
                        "required": true,
                        "description": "End To End ID generated by SCS",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Payment Cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPaymentResponse"
                                },
                                "example": {
                                    "status": "Success",
                                    "endToEndId": "SCSC-GS1001",
                                    "platformRefId": "12312312312",
                                    "fragment": [
                                        {
                                            "fragmentPlatformRefId": "121abc",
                                            "scheduledOn": "DATETIMESTRING",
                                            "status": "CANC"
                                        },
                                        {
                                            "fragmentPlatformRefId": "123xyz",
                                            "scheduledOn": "DATETIMESTRING",
                                            "status": "CANC"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        },
        "/scs/{version}/payment/{endToEndId}/cancel/{fragmentPlatformRefId}": {
            "post": {
                "tags": [
                    "Payment Administration"
                ],
                "summary": "Cancel Payment Fragment",
                "description": "The Cancel Payment Fragment API cancels one fragment of the Payment Contract - denoted by the fragmentPlatformRefId of an already scheduled split payment - denoted by the endToEndId. The response is a representation or acknowledgment that request was received successfully and provides the status of cancelled contract fragment.",
                "operationId": "POST Cancel Payment Contract Fragment",
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "description": "API Version",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "GroupId",
                        "in": "header",
                        "required": true,
                        "description": "Unique Straight2Bank Group ID assigned to the client by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCS-ClientId",
                        "in": "header",
                        "required": true,
                        "description": "Unique SCS Client ID by SCB as a one time static value",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "X-SCS-TrackingId",
                        "in": "header",
                        "required": true,
                        "description": "Uniquely generated 20-character or lesser GUID to track each to track each connection attempt.<br> Format: GEU00814yymmddxxxxxx <br> GEU00814: 8-character client id provided by SCB which is unique for each client. <br> yymmdd: Year+Month+Day. Example - 210823 for 23 Aug 2021 <br> xxxxxx: running sequence number. <br>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "requestId",
                        "in": "header",
                        "required": true,
                        "description": "Unique request ID generated by the Client for each unique payload. A request ID will be reused in case of any technical error until the request is processed successfully.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "endToEndId",
                        "required": true,
                        "description": "End To End ID generated by SCS",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "path",
                        "name": "fragmentPlatformRefId",
                        "required": true,
                        "description": "Unique tracking ID within a payment or payment contract to identify a split (fragmented) payment",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success - Payment Fragment Cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cancelPaymentResponse"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "status": "Success",
                                            "endToEndId": "SCSC-GS1001",
                                            "platformRefId": "12312312312",
                                            "fragment": [
                                                {
                                                    "fragmentPlatformRefId": "121abc",
                                                    "scheduledOn": "DATETIMESTRING",
                                                    "status": "CANC"
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/createPaymentContractResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                },
                                "examples": {
                                    "response": {
                                        "value": [
                                            {
                                                "errorCode": "SCSC-BUS-ERR-09",
                                                "errorDescription": "Technical Issue -Please Contact the Bank"
                                            }
                                        ]
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-01",
                                            "errorMessage": "UnAuthorized"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Technical Issue - Please contact the bank.This indicates error on the webserver hosting the API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                },
                                "examples": {
                                    "response": {
                                        "value": {
                                            "errorCode": "SCSC-TECH-ERR-02",
                                            "errorMessage": "Technical Issue - Please contact the bank"
                                        }
                                    }
                                }
                            },
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorObj"
                                }
                            }
                        }
                    }
                },
                "x-markets": "SG,MY,IN,GB,AE"
            }
        }
    },
    "components": {
        "requestBodies": {
            "createPaymentContract": {
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/createPaymentContract"
                        }
                    },
                    "application/x-www-form-urlencoded": {
                        "schema": {
                            "$ref": "#/components/schemas/createPaymentContract"
                        }
                    },
                    "multipart/form-data": {
                        "schema": {
                            "$ref": "#/components/schemas/createPaymentContract"
                        }
                    }
                },
                "description": "Provides details of an escrow transaction entered between two or more parties including the deposit and payout construct.",
                "required": true
            }
        },
        "schemas": {
            "accountType": {
                "type": "string",
                "enum": [
                    "Account_Number",
                    "IBAN",
                    "Proxy",
                    "Virtual_Account"
                ],
                "description": "Indicator to confirm whether the provided value is IBAN, Account_Number,Proxy or Virtual_Account Number",
                "example": "Account_Number"
            },
            "proxyType": {
                "type": "string",
                "description": "Applicable only when accountType is \"Proxy\", to be one of the listed values.",
                "enum": [
                    "Mobile_No",
                    "Id_Card",
                    "Passport",
                    "Company_Id",
                    "Tax_Id",
                    "Police_or_Army_No",
                    "VPA"
                ]
            },
            "accountKey": {
                "type": "string",
                "description": "Preferred key/identifiers to enable identification of a specific account based on information available in payment contract. This is needed in cases where there are multiple accounts under the same party.",
                "example": "Key1"
            },
            "accountTypeImmutable": {
                "type": "string",
                "enum": [
                    "Account_Number",
                    "IBAN",
                    "Proxy",
                    "Virtual_Account"
                ],
                "description": "(immutable) Indicator to confirm whether the provided value is IBAN, Account_Number,Proxy or Virtual_Account Number",
                "example": "Account_Number"
            },
            "proxyTypeImmutable": {
                "type": "string",
                "description": "(immutable) Applicable only when accountType is \"Proxy\", to be one of the listed values.",
                "enum": [
                    "Mobile_No",
                    "IC",
                    "Passport",
                    "Company_Id",
                    "Tax_Id",
                    "Police_or_Army_No",
                    "VPA"
                ]
            },
            "accountKeyImmutable": {
                "type": "string",
                "description": "(immutable) Preferred key/identifiers to enable identification of a specific account based on information available in payment contract. This is needed in cases where there are multiple accounts under the same party.",
                "example": "Key1"
            },
            "deletePartyAndVaultResponse": {
                "type": "object",
                "description": "Party onboard success message",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of the party after the party is created in the system",
                        "example": "Inactive"
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "Deal Ref ID for which the party is added",
                        "example": "SG-AS-02-20012"
                    },
                    "partyId": {
                        "type": "string",
                        "description": "System generated partyId for performing actions to update/delete a party in the Deal",
                        "example": "SG-AS-02-20012-1001201"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "Client provided unique reference ID for a party within a deal sent back in response to co-relate the request",
                        "example": "1001201"
                    },
                    "vault": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/deleteVaultResponse"
                        }
                    }
                }
            },
            "deleteVaultResponse": {
                "type": "object",
                "description": "Delete Vault Request Success Response",
                "properties": {
                    "vaultTreeNo": {
                        "type": "string"
                    },
                    "vaultNo": {
                        "type": "string"
                    },
                    "vaultStatus": {
                        "type": "string",
                        "example": "closed"
                    }
                }
            },
            "createParty": {
                "type": "object",
                "required": [
                    "partyAddress",
                    "partyType",
                    "dealRefId",
                    "attributes",
                    "name",
                    "partyRefId",
                    "status",
                    "kycCompleted",
                    "validFrom",
                    "validUntil",
                    "responsibility"
                ],
                "properties": {
                    "dealRefId": {
                        "type": "string",
                        "description": "(immutable) Unique SCS Deal ID provided by SCB as a one time static value",
                        "example": "SG-AB-02-20012"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "(immutable) Client provided unique reference ID for a party within a deal.",
                        "example": "1001201"
                    },
                    "partyType": {
                        "type": "string",
                        "description": "Type of party i.e. legal person status of party",
                        "enum": [
                            "Individual",
                            "Company"
                        ],
                        "example": "Individual"
                    },
                    "individual": {
                        "type": "object",
                        "description": "Details of the Individual including legal name and particulars",
                        "required": [
                            "name",
                            "nationality",
                            "identificationDocument",
                            "documentNumber",
                            "documentIssueDate",
                            "documentExpiryDate"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "(immutable) Legal Name of the party"
                            },
                            "nationality": {
                                "type": "string",
                                "description": "Nationality of the party"
                            },
                            "dateOfBirth": {
                                "type": "string",
                                "description": "Date of birth of the party in YYYY-MM-DD format"
                            },
                            "identificationDocument": {
                                "type": "string",
                                "enum": [
                                    "Passport",
                                    "Driving_License",
                                    "Residency",
                                    "Id_Card"
                                ],
                                "description": "Identification document name of the party from the given list"
                            },
                            "documentNumber": {
                                "type": "string",
                                "description": "Document number of the identification document"
                            },
                            "documentIssueDate": {
                                "type": "string",
                                "description": "Issue date of the identification document in YYYY-MM-DD format",
                                "example": "2020-12-31T00:00:00.000Z"
                            },
                            "documentExpiryDate": {
                                "type": "string",
                                "description": "Expiry date of the identification document in YYYY-MM-DD format.",
                                "example": "2025-12-31T00:00:00.000Z"
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the individual"
                            },
                            "email": {
                                "type": "string",
                                "description": "Email of the individual"
                            },
                            "phoneNo": {
                                "type": "string",
                                "description": "Phone number of the individual"
                            }
                        }
                    },
                    "company": {
                        "type": "object",
                        "description": "Details of the Company including legal name and particulars",
                        "required": [
                            "companyName",
                            "registrationNumber"
                        ],
                        "properties": {
                            "companyName": {
                                "type": "string",
                                "description": "(immutable) Name of the company"
                            },
                            "registrationNumber": {
                                "type": "string",
                                "description": "Registration number of the company"
                            },
                            "incorporationDate": {
                                "type": "string",
                                "description": "Date of incorporation of the company in YYYY-MM-DD format."
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the company"
                            }
                        }
                    },
                    "referToOps": {
                        "$ref": "#/components/schemas/referToOps"
                    },
                    "partyAddress": {
                        "type": "object",
                        "description": "Legal address of incorporation or domicile of the party",
                        "required": [
                            "addressLine1",
                            "country"
                        ],
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "description": "Address Line 1, Maximum 35 characters will be allowed"
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Address Line 2, Maximum 35 characters will be allowed"
                            },
                            "country": {
                                "type": "string",
                                "description": "country of incorporation / domicile"
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of a party in the deal",
                        "example": "Active"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Future effective date of a party to onboard/amend, in YYYY-MM-DD format. If not provided, party will be onboarded/amended with immediate effect.",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "kycCompleted": {
                        "type": "boolean",
                        "description": "Whether KYB / KYC is completed for this party",
                        "example": true
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid / Effective From in YYYY-MM-DD format",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid Until - Party will be marked inactive after expiry. It is required only when value for the field “kycCompleted” is “true”. After the expiry date, the status of the party shall automatically change to “Inactive”. <br> To be provided in YYYY-MM-DD format.",
                        "example": "2023-12-31T00:00:00.000Z"
                    },
                    "responsibility": {
                        "type": "string",
                        "description": "Party’s Responsibility in the deal - choose from pre-defined values in SCS Platform as appropriate",
                        "example": "Merchant"
                    },
                    "attributes": {
                        "type": "object",
                        "description": "Party specific attributes pre-defined at a party responsibility level."
                    },
                    "contacts": {
                        "type": "array",
                        "description": "Contacts for the party",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "designation",
                                "authorizedSignatory",
                                "enableNotifications",
                                "workPhone",
                                "mobilePhone",
                                "email",
                                "address"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the contact",
                                    "example": "John Doe"
                                },
                                "designation": {
                                    "type": "string",
                                    "description": "Designation of the contact",
                                    "example": "CEO"
                                },
                                "authorizedSignatory": {
                                    "type": "boolean",
                                    "description": "Whether the contact is an authorized signatory or not",
                                    "example": false
                                },
                                "enableNotifications": {
                                    "type": "boolean",
                                    "description": "Whether this contact should receive notifications or not",
                                    "example": false
                                },
                                "workPhone": {
                                    "type": "string",
                                    "description": "Work Phone number of contact",
                                    "example": 91123456789
                                },
                                "mobilePhone": {
                                    "type": "string",
                                    "description": "Mobile Phone number of contact",
                                    "example": 91123456789
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email ID of contact",
                                    "example": "john.doe@gmail.com"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "town",
                                        "street",
                                        "pincode",
                                        "state",
                                        "country"
                                    ],
                                    "properties": {
                                        "town": {
                                            "type": "string",
                                            "description": "Contact's town",
                                            "example": "Bengaluru Urban"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "Contact's Street",
                                            "example": "M G Road"
                                        },
                                        "pincode": {
                                            "type": "string",
                                            "description": "Contact's zip/pin code",
                                            "example": 400034
                                        },
                                        "state": {
                                            "type": "string",
                                            "description": "Contact's State",
                                            "example": "KA"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "Contact's Country",
                                            "example": "IN"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "Accounts for the party",
                        "items": {
                            "$ref": "#/components/schemas/accountOnboardParty"
                        }
                    },
                    "scheduledPaymentsPolicy": {
                        "$ref": "#/components/schemas/scheduledPaymentsPolicy"
                    },
                    "vaultDetails": {
                        "$ref": "#/components/schemas/vaultDetails"
                    },
                    "splitPayProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/splitPayProfileObject"
                        }
                    }
                }
            },
            "scheduledPaymentsPolicy": {
                "type": "object",
                "description": "Preference to enable management of scheduled payments when a party status is amended to inactive or reactivated to active. If not provided, deal level policies will be applied.",
                "properties": {
                    "onPartyActivate": {
                        "type": "string",
                        "enum": [
                            "doNothing",
                            "releaseExecutions",
                            "cancelExecutions"
                        ],
                        "description": "Preference to set payment behavior in case of a deactivated party is reactivated. <br><br> 'doNothing' will not do anything to payments scheduled/on hold for the party. <br><br> 'releaseExecutions' will release the withheld payments when the party was deactivated.<br><br> 'cancelExecutions' will cancel the payments for the party."
                    },
                    "onPartyDeactivate": {
                        "type": "string",
                        "enum": [
                            "doNothing",
                            "holdExecutions"
                        ],
                        "description": "Preference to set payment behavior in case of an active party is deactivated. <br><br> 'doNothing' will not do anything to payments scheduled/on hold for the party. <br><br> 'holdExecutions' will put the payments scheduled for the party on hold. <br><br>"
                    }
                }
            },
            "getPartyResponseObject": {
                "type": "object",
                "required": [
                    "partyAddress",
                    "partyType",
                    "dealRefId",
                    "attributes",
                    "name",
                    "partyRefId",
                    "status",
                    "kycCompleted",
                    "validFrom",
                    "validUntil",
                    "responsibility"
                ],
                "properties": {
                    "dealRefId": {
                        "type": "string",
                        "description": "(immutable) Unique SCS Deal ID provided by SCB as a one time static value",
                        "example": "SG-AB-02-20012"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "(immutable) Client provided unique reference ID for a party within a deal.",
                        "example": "1001201"
                    },
                    "partyType": {
                        "type": "string",
                        "description": "Type of party i.e. legal person status of party",
                        "enum": [
                            "Individual",
                            "Company"
                        ],
                        "example": "Individual"
                    },
                    "individual": {
                        "type": "object",
                        "description": "Details of the Individual including legal name and particulars",
                        "required": [
                            "name",
                            "nationality",
                            "identificationDocument",
                            "documentNumber",
                            "documentIssueDate",
                            "documentExpiryDate"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "(immutable) Legal Name of the party"
                            },
                            "nationality": {
                                "type": "string",
                                "description": "Nationality of the party"
                            },
                            "dateOfBirth": {
                                "type": "string",
                                "description": "Date of birth of the party in YYYY-MM-DD format"
                            },
                            "identificationDocument": {
                                "type": "string",
                                "enum": [
                                    "Passport",
                                    "Driving_License",
                                    "Residency",
                                    "Id_Card"
                                ],
                                "description": "Identification document name of the party from the given list"
                            },
                            "documentNumber": {
                                "type": "string",
                                "description": "Document number of the identification document"
                            },
                            "documentIssueDate": {
                                "type": "string",
                                "description": "Issue date of the identification document in YYYY-MM-DD format",
                                "example": "2020-12-31T00:00:00.000Z"
                            },
                            "documentExpiryDate": {
                                "type": "string",
                                "description": "Expiry date of the identification document in YYYY-MM-DD format.",
                                "example": "2025-12-21T00:00:00.000Z"
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the individual"
                            },
                            "email": {
                                "type": "string",
                                "description": "Email of the individual"
                            },
                            "phoneNo": {
                                "type": "string",
                                "description": "Phone number of the individual"
                            }
                        }
                    },
                    "company": {
                        "type": "object",
                        "description": "Details of the Company including legal name and particulars",
                        "required": [
                            "companyName",
                            "registrationNumber"
                        ],
                        "properties": {
                            "companyName": {
                                "type": "string",
                                "description": "(immutable) Name of the company"
                            },
                            "registrationNumber": {
                                "type": "string",
                                "description": "Registration number of the company"
                            },
                            "incorporationDate": {
                                "type": "string",
                                "description": "Date of incorporation of the company in YYYY-MM-DD format."
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the company"
                            }
                        }
                    },
                    "partyAddress": {
                        "type": "object",
                        "description": "Legal address of incorporation or domicile of the party",
                        "required": [
                            "addressLine1",
                            "country"
                        ],
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "description": "Address Line 1, Maximum 35 characters will be allowed"
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Address Line 2, Maximum 35 characters will be allowed"
                            },
                            "country": {
                                "type": "string",
                                "description": "country of incorporation / domicile"
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of a party in the deal",
                        "example": "Active"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Future effective date of a party to onboard/amend, in YYYY-MM-DD format. If not provided, party will be onboarded/amended with immediate effect.",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "kycCompleted": {
                        "type": "boolean",
                        "description": "Whether KYB / KYC is completed for this party",
                        "example": true
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid / Effective From in YYYY-MM-DD format",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid Until - Party will be marked inactive after expiry. It is required only when value for the field “kycCompleted” is “true”. After the expiry date, the status of the party shall automatically change to “Inactive”. <br> To be provided in YYYY-MM-DD format.",
                        "example": "2023-12-31T00:00:00.000Z"
                    },
                    "responsibility": {
                        "type": "string",
                        "description": "Party’s Responsibility in the deal - choose from pre-defined values in SCS Platform as appropriate",
                        "example": "Merchant"
                    },
                    "attributes": {
                        "type": "object",
                        "description": "Party specific attributes pre-defined at a party responsibility level."
                    },
                    "contacts": {
                        "type": "array",
                        "description": "Contacts for the party",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "designation",
                                "authorizedSignatory",
                                "enableNotifications",
                                "workPhone",
                                "mobilePhone",
                                "email",
                                "address"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the contact",
                                    "example": "John Doe"
                                },
                                "designation": {
                                    "type": "string",
                                    "description": "Designation of the contact",
                                    "example": "CEO"
                                },
                                "authorizedSignatory": {
                                    "type": "boolean",
                                    "description": "Whether the contact is an authorized signatory or not",
                                    "example": false
                                },
                                "enableNotifications": {
                                    "type": "boolean",
                                    "description": "Whether this contact should receive notifications or not",
                                    "example": false
                                },
                                "workPhone": {
                                    "type": "string",
                                    "description": "Work Phone number of contact",
                                    "example": 91123456789
                                },
                                "mobilePhone": {
                                    "type": "string",
                                    "description": "Mobile Phone number of contact",
                                    "example": 91123456789
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email ID of contact",
                                    "example": "john.doe@gmail.com"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "town",
                                        "street",
                                        "pincode",
                                        "state",
                                        "country"
                                    ],
                                    "properties": {
                                        "town": {
                                            "type": "string",
                                            "description": "Contact's town",
                                            "example": "Bengaluru Urban"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "Contact's Street",
                                            "example": "M G Road"
                                        },
                                        "pincode": {
                                            "type": "string",
                                            "description": "Contact's zip/pin code",
                                            "example": 400034
                                        },
                                        "state": {
                                            "type": "string",
                                            "description": "Contact's State",
                                            "example": "KA"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "Contact's Country",
                                            "example": "IN"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "Accounts for the party",
                        "items": {
                            "$ref": "#/components/schemas/accountOnboardParty"
                        }
                    },
                    "paymentPreferences": {
                        "$ref": "#/components/schemas/paymentPreferencesParty"
                    },
                    "splitPayProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/splitPayProfileObject"
                        }
                    }
                }
            },
            "amendParty": {
                "type": "object",
                "required": [
                    "partyAddress",
                    "partyType",
                    "dealRefId",
                    "attributes",
                    "name",
                    "partyRefId",
                    "status",
                    "kycCompleted",
                    "validFrom",
                    "validUntil",
                    "responsibility"
                ],
                "properties": {
                    "dealRefId": {
                        "type": "string",
                        "description": "(immutable) Unique SCS Deal ID provided by SCB as a one time static value",
                        "example": "SG-AB-02-20012"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "(immutable) Client provided unique reference ID for a party within a deal.",
                        "example": "1001201"
                    },
                    "partyType": {
                        "type": "string",
                        "description": "Type of party i.e. legal person status of party",
                        "enum": [
                            "Individual",
                            "Company"
                        ],
                        "example": "individual"
                    },
                    "individual": {
                        "type": "object",
                        "description": "Details of the Individual including legal name and particulars",
                        "required": [
                            "name",
                            "nationality",
                            "identificationDocument",
                            "documentNumber",
                            "documentIssueDate",
                            "documentExpiryDate"
                        ],
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "(immutable) Legal Name of the party"
                            },
                            "nationality": {
                                "type": "string",
                                "description": "Nationality of the party"
                            },
                            "dateOfBirth": {
                                "type": "string",
                                "description": "Date of birth of the party in YYYY-MM-DD format"
                            },
                            "identificationDocument": {
                                "type": "string",
                                "enum": [
                                    "Passport",
                                    "Driving_License",
                                    "Residency",
                                    "Id_Card"
                                ],
                                "description": "Identification document name of the party from the given list"
                            },
                            "documentNumber": {
                                "type": "string",
                                "description": "Document number of the identification document"
                            },
                            "documentIssueDate": {
                                "type": "string",
                                "description": "Issue date of the identification document in YYYY-MM-DD format",
                                "example": "2020-12-31T00:00:00.000Z"
                            },
                            "documentExpiryDate": {
                                "type": "string",
                                "description": "Expiry date of the identification document in YYYY-MM-DD format.",
                                "example": "2025-12-31T00:00:00.000Z"
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the individual"
                            },
                            "email": {
                                "type": "string",
                                "description": "Email of the individual"
                            },
                            "phoneNo": {
                                "type": "string",
                                "description": "Phone number of the individual"
                            }
                        }
                    },
                    "company": {
                        "type": "object",
                        "description": "Details of the Company including legal name and particulars",
                        "required": [
                            "companyName",
                            "registrationNumber"
                        ],
                        "properties": {
                            "companyName": {
                                "type": "string",
                                "description": "(immutable) Name of the company"
                            },
                            "registrationNumber": {
                                "type": "string",
                                "description": "Registration number of the company"
                            },
                            "incorporationDate": {
                                "type": "string",
                                "description": "Date of incorporation of the company in YYYY-MM-DD format"
                            },
                            "taxId": {
                                "type": "string",
                                "description": "Tax ID of the company"
                            }
                        }
                    },
                    "referToOps": {
                        "$ref": "#/components/schemas/referToOps"
                    },
                    "partyAddress": {
                        "type": "object",
                        "description": "Legal address of incorporation or domicile of the party",
                        "required": [
                            "addressLine1",
                            "country"
                        ],
                        "properties": {
                            "addressLine1": {
                                "type": "string",
                                "description": "Address Line 1, Maximum 35 characters will be allowed"
                            },
                            "addressLine2": {
                                "type": "string",
                                "description": "Address Line 2, Maximum 35 characters will be allowed"
                            },
                            "country": {
                                "type": "string",
                                "description": "country of incorporation / domicile"
                            }
                        }
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of a party in the deal",
                        "example": "Active"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "Future effective date of a party to onboard/amend, in YYYY-MM-DD format. If not provided, party will be onboarded/amended with immediate effect.",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "kycCompleted": {
                        "type": "boolean",
                        "description": "Whether KYB / KYC is completed for this party",
                        "example": true
                    },
                    "validFrom": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid / Effective From in YYYY-MM-DD format",
                        "example": "2021-12-31T00:00:00.000Z"
                    },
                    "validUntil": {
                        "type": "string",
                        "format": "date",
                        "description": "Party's KYB / KYC Valid Until - Party will be marked inactive after expiry. It is required only when value for the field “kycCompleted” is “true”. After the expiry date, the status of the party shall automatically change to “Inactive”. <br> To be provided in YYYY-MM-DD format.",
                        "example": "2023-12-31T00:00:00.000Z"
                    },
                    "responsibility": {
                        "type": "string",
                        "description": "Party’s Responsibility in the deal - choose from pre-defined values in SCS Platform as appropriate",
                        "example": "Merchant"
                    },
                    "attributes": {
                        "type": "object",
                        "description": "Party specific attributes pre-defined at a party responsibility level."
                    },
                    "contacts": {
                        "type": "array",
                        "description": "Contacts for the party",
                        "items": {
                            "type": "object",
                            "required": [
                                "name",
                                "designation",
                                "authorizedSignatory",
                                "enableNotifications",
                                "workPhone",
                                "mobilePhone",
                                "email",
                                "address"
                            ],
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Name of the contact",
                                    "example": "John Doe"
                                },
                                "designation": {
                                    "type": "string",
                                    "description": "Designation of the contact",
                                    "example": "CEO"
                                },
                                "authorizedSignatory": {
                                    "type": "boolean",
                                    "description": "Whether the contact is an authorized signatory or not",
                                    "example": false
                                },
                                "enableNotifications": {
                                    "type": "boolean",
                                    "description": "Whether this contact should receive notifications or not",
                                    "example": false
                                },
                                "workPhone": {
                                    "type": "string",
                                    "description": "Work Phone number of contact",
                                    "example": 91123456789
                                },
                                "mobilePhone": {
                                    "type": "string",
                                    "description": "Mobile Phone number of contact",
                                    "example": 91123456789
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Email ID of contact",
                                    "example": "john.doe@gmail.com"
                                },
                                "address": {
                                    "type": "object",
                                    "required": [
                                        "town",
                                        "street",
                                        "pincode",
                                        "state",
                                        "country"
                                    ],
                                    "properties": {
                                        "town": {
                                            "type": "string",
                                            "description": "Contact's town",
                                            "example": "Bengaluru Urban"
                                        },
                                        "street": {
                                            "type": "string",
                                            "description": "Contact's Street",
                                            "example": "M G Road"
                                        },
                                        "pincode": {
                                            "type": "string",
                                            "description": "Contact's zip/pin code",
                                            "example": 400034
                                        },
                                        "state": {
                                            "type": "string",
                                            "description": "Contact's State",
                                            "example": "KA"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "Contact's Country",
                                            "example": "IN"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "accounts": {
                        "type": "array",
                        "description": "Accounts for the party",
                        "items": {
                            "$ref": "#/components/schemas/accountOnboardParty"
                        }
                    },
                    "scheduledPaymentsPolicy": {
                        "$ref": "#/components/schemas/scheduledPaymentsPolicy"
                    },
                    "splitPayProfiles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/splitPayProfileObject"
                        }
                    }
                }
            },
            "getPartyResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 2
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 1
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "partyId": {
                                    "type": "string",
                                    "description": "System generated partyId for performing actions to update/delete a party in the Deal"
                                },
                                "partyInformation": {
                                    "$ref": "#/components/schemas/getPartyResponseObject"
                                }
                            }
                        }
                    }
                }
            },
            "getPaymentContractResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 3
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 2
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "data array containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "status": {
                                    "type": "string",
                                    "description": "Status of the payment contract - whether accepted or not for processing."
                                },
                                "paymentContractInformation": {
                                    "$ref": "#/components/schemas/createPaymentContract"
                                },
                                "endToEndIds": {
                                    "type": "array",
                                    "description": "List of End To End IDs generated for the platform ref IDs if applicable",
                                    "items": {
                                        "$ref": "#/components/schemas/createPaymentResponse"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "accounts": {
                "type": "object",
                "description": "Account Details",
                "required": [
                    "accountType",
                    "accountNumber",
                    "accountCurrency",
                    "accountBankBic",
                    "accountName",
                    "accountAddressLine1",
                    "accountAddressLine2",
                    "accountCountry",
                    "countryOfIncorporation"
                ],
                "properties": {
                    "accountType": {
                        "$ref": "#/components/schemas/accountType"
                    },
                    "proxyType": {
                        "$ref": "#/components/schemas/proxyType"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Irrespective of the accountType, value to be provided here",
                        "example": 123456789
                    },
                    "accountCurrency": {
                        "type": "string",
                        "description": "Valid 3 character ISO currency code",
                        "example": "USD"
                    },
                    "accountBankBic": {
                        "type": "string",
                        "description": "Account Bank BIC",
                        "example": "ICICINBBNRI"
                    },
                    "bankCode": {
                        "type": "string",
                        "description": "Bank Code for Local Transfers where applicable",
                        "example": "ICIC000123"
                    },
                    "intermediaryBankBic": {
                        "type": "string",
                        "description": "Intermediary Bank BIC where applicable",
                        "example": "ICICINBBNRI"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "Registered Legal Account Name - max 35 characters",
                        "example": "Merchant X"
                    },
                    "accountDescription": {
                        "type": "string",
                        "description": "Account description",
                        "example": "Merchant Payout Account"
                    },
                    "accountAddressLine1": {
                        "type": "string",
                        "description": "Party’s Address of Domicile in relation to the account Line 1 - max 35 characters",
                        "example": "address line 1"
                    },
                    "accountAddressLine2": {
                        "type": "string",
                        "description": "Party’s Address of Domicile in relation to the account Line 2 - max 35 characters",
                        "example": "address line 2"
                    },
                    "accountCountry": {
                        "type": "string",
                        "description": "Account's country where the account is operational - 2 character ISO Country Code",
                        "example": "IN"
                    },
                    "countryOfIncorporation": {
                        "type": "string",
                        "description": "Party's country of incorporation/domicile in relation to the account - 2 character ISO Country Code",
                        "example": "IN"
                    }
                }
            },
            "accountOnboardParty": {
                "type": "object",
                "description": "Account Details",
                "required": [
                    "accountType",
                    "accountNumber",
                    "accountCurrency",
                    "accountBankBic",
                    "accountName",
                    "accountAddressLine1",
                    "accountAddressLine2",
                    "accountCountry"
                ],
                "properties": {
                    "accountType": {
                        "$ref": "#/components/schemas/accountType"
                    },
                    "proxyType": {
                        "$ref": "#/components/schemas/proxyType"
                    },
                    "accountNumber": {
                        "type": "string",
                        "description": "Irrespective of the accountType, value to be provided here",
                        "example": 123456789
                    },
                    "accountCurrency": {
                        "type": "string",
                        "description": "Valid 3 character ISO currency code",
                        "example": "USD"
                    },
                    "accountBankBic": {
                        "type": "string",
                        "description": "Account Bank BIC",
                        "example": "ICICINBBNRI"
                    },
                    "bankCode": {
                        "type": "string",
                        "description": "Bank Code for Local Transfers where applicable",
                        "example": "ICIC000123"
                    },
                    "intermediaryBankBic": {
                        "type": "string",
                        "description": "Intermediary Bank BIC where applicable",
                        "example": "ICICINBBNRI"
                    },
                    "accountName": {
                        "type": "string",
                        "description": "(immutable) Registered Legal Account Name - max 35 characters",
                        "example": "Merchant X"
                    },
                    "accountDescription": {
                        "type": "string",
                        "description": "Account description",
                        "example": "Merchant Payout Account"
                    },
                    "accountAddressLine1": {
                        "type": "string",
                        "description": "Party’s Address of Domicile in relation to the account Line 1 - max 35 characters",
                        "example": "address line 1"
                    },
                    "accountAddressLine2": {
                        "type": "string",
                        "description": "Party’s Address of Domicile in relation to the account Line 2 - max 35 characters",
                        "example": "address line 2"
                    },
                    "accountCountry": {
                        "type": "string",
                        "description": "Party’s country of domicile in relation to the account - 2 character ISO Country Code",
                        "example": "IN"
                    },
                    "accountKey": {
                        "$ref": "#/components/schemas/accountKey"
                    },
                    "paymentPreferences": {
                        "$ref": "#/components/schemas/paymentPreferencesParty"
                    }
                }
            },
            "createPartyAndVaultResponse": {
                "type": "object",
                "description": "Party onboard success message",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of the party after the party is created in the system",
                        "example": "Inactive"
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "Deal Ref ID for which the party is added",
                        "example": "SG-AS-02-20012"
                    },
                    "partyId": {
                        "type": "string",
                        "description": "System generated partyId for performing actions to update/delete a party in the Deal",
                        "example": "SG-AS-02-20012-1001201"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "Client provided unique reference ID for a party within a deal sent back in response to co-relate the request",
                        "example": "1001201"
                    },
                    "vault": {
                        "$ref": "#/components/schemas/createVaultResponse"
                    }
                }
            },
            "createPartyResponse": {
                "type": "object",
                "description": "Party onboard success message",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of the party after the party is created in the system",
                        "example": "Inactive"
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "Deal Ref ID for which the party is added",
                        "example": "SG-AS-02-20012"
                    },
                    "partyId": {
                        "type": "string",
                        "description": "System generated partyId for performing actions to update/delete a party in the Deal",
                        "example": "SG-AS-02-20012-1001201"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "Client provided unique reference ID for a party within a deal sent back in response to co-relate the request",
                        "example": "1001201"
                    }
                }
            },
            "amendPartyResponse": {
                "type": "object",
                "description": "Party onboard success message",
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "Active",
                            "Inactive"
                        ],
                        "description": "Status of the party after the party is created in the system",
                        "example": "Inactive"
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "Deal Ref ID for which the party is added",
                        "example": "SG-AS-02-20012"
                    },
                    "partyId": {
                        "type": "string",
                        "description": "System generated partyId for performing actions to update/delete a party in the Deal",
                        "example": "SG-AS-02-20012-1001201"
                    },
                    "partyRefId": {
                        "type": "string",
                        "description": "Client provided unique reference ID for a party within a deal sent back in response to co-relate the request",
                        "example": "1001201"
                    },
                    "warnings": {
                        "type": "array",
                        "description": "array of warning strings - applicable if any payment executions are affected due to party amendment.",
                        "items": {
                            "type": "string"
                        },
                        "example": [
                            "Warning 1",
                            "Warning 2",
                            "Warning 3"
                        ]
                    }
                }
            },
            "splitPayProfileObject": {
                "type": "object",
                "description": "The charges to be applied",
                "required": [
                    "splitPayId",
                    "parties"
                ],
                "properties": {
                    "splitPayId": {
                        "type": "string",
                        "example": "MY_CLIENT_OFFLINE",
                        "description": "Applicable value from list of Pre-defined/ agreed Split Pay Profile ID assigned by SCB"
                    },
                    "parties": {
                        "type": "array",
                        "description": "Party/ies participating under a single split pay id.",
                        "items": {
                            "type": "object",
                            "required": [
                                "responsibility",
                                "pricePlan"
                            ],
                            "properties": {
                                "responsibility": {
                                    "type": "string",
                                    "description": "The responsibility of a party for whom the price and settlement plan is provided"
                                },
                                "pricePlan": {
                                    "type": "array",
                                    "description": "Rate or amount to be split from or for the party from a payment contract amount",
                                    "items": {
                                        "type": "object",
                                        "required": [
                                            "pricePlanId",
                                            "payOnly",
                                            "minAmount",
                                            "maxAmount",
                                            "computationMethods"
                                        ],
                                        "properties": {
                                            "pricePlanId": {
                                                "type": "string",
                                                "description": "Pre-defined/agreed unique ID assigned by SCB"
                                            },
                                            "payOnly": {
                                                "type": "string",
                                                "enum": [
                                                    "NA",
                                                    "higher",
                                                    "lower",
                                                    "all"
                                                ],
                                                "description": "Option to select when more than one computation method is configured\n\nNA - not applicable\n\nhigher - Whichever is higher among the computation methods defined will be considered for payout.\n\nlower - Whichever is lower among the computation methods defined will be considered for payout.\n\nall - Sum of all computed amounts will be considered for payout",
                                                "example": "NA"
                                            },
                                            "minAmount": {
                                                "type": "number",
                                                "description": "The minimum payout amount to be considered(If payout computation is 20 and minAmount is set to 50, then 50 will be considered for the payout). <br>Can be 0 if not required, cannot be negative.",
                                                "example": 50
                                            },
                                            "maxAmount": {
                                                "type": "number",
                                                "description": "The maximum payout cap to be considered (If payout computation is 200 and maxAmount is set to 100, then 100 will be considered). <br>Can be \"9999999999\" if not required, cannot be negative.",
                                                "example": 100
                                            },
                                            "computationMethods": {
                                                "type": "array",
                                                "description": "List of all computation methods to be applied",
                                                "items": {
                                                    "required": [
                                                        "tierType",
                                                        "rangeUnitAttribute",
                                                        "computationOn",
                                                        "payoutRates"
                                                    ],
                                                    "type": "object",
                                                    "properties": {
                                                        "tierType": {
                                                            "type": "string",
                                                            "description": "FLAT_TIER - Price to be applied based on the tier the rangeUnitAttribute value falls on. Example - tiers - 0 to 100 Fixed 10, 101 to 200 Fixed 20, If the rangeUnitAttribute value is 150, the payout amount will be 20.\nA single tier can be defined as from 0, to \"9999999999\"\n\nSPLIT_TIER - Incremental price to be applied across respective tiers. Example- 0 to 100 has Fixed rate 10, 101 to 200 has Fixed rate 20, If the rangeUnitAttribute value is 150, then payout amount will be 30 (10+20)",
                                                            "enum": [
                                                                "FLAT_TIER",
                                                                "SPLIT_TIER"
                                                            ],
                                                            "example": "FLAT_TIER/SPLIT_TIER"
                                                        },
                                                        "rangeUnitAttribute": {
                                                            "type": "string",
                                                            "description": "Attribute name to add context to the tier values to be considered for the given range in payoutRates. The value of attribute specified must be numeric in nature which will be taken from the incoming transaction. Example - kWh, Transaction amount etc.",
                                                            "example": "kWh"
                                                        },
                                                        "computationOn": {
                                                            "type": "string",
                                                            "enum": [
                                                                "TXN_AMOUNT",
                                                                "RESIDUAL_AMOUNT_1",
                                                                "RESIDUAL_AMOUNT_2",
                                                                "RESIDUAL_AMOUNT_3",
                                                                "RESIDUAL_AMOUNT_4",
                                                                "RESIDUAL_AMOUNT_5"
                                                            ],
                                                            "description": "The amount to be considered for split payout computation"
                                                        },
                                                        "payoutRates": {
                                                            "type": "array",
                                                            "description": "To maintain the rates to be applied to the split payout.",
                                                            "items": {
                                                                "required": [
                                                                    "rate",
                                                                    "rateType",
                                                                    "from",
                                                                    "to"
                                                                ],
                                                                "type": "object",
                                                                "properties": {
                                                                    "from": {
                                                                        "type": "number",
                                                                        "description": "tier lower limit",
                                                                        "example": 0
                                                                    },
                                                                    "to": {
                                                                        "type": "number",
                                                                        "description": "tier upper limit",
                                                                        "example": "9999999999"
                                                                    },
                                                                    "rate": {
                                                                        "type": "number",
                                                                        "description": "fixed amount or percentage rate",
                                                                        "example": 10
                                                                    },
                                                                    "rateType": {
                                                                        "type": "string",
                                                                        "description": "Type of rate to be applied\nfixed - Fixed amount to be applied as payout rate for the tier\npercentage - a percentage of amount to be applied as the payout rate for the tier",
                                                                        "enum": [
                                                                            "fixed",
                                                                            "percentage"
                                                                        ],
                                                                        "example": "fixed"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "settlementPlan": {
                                    "type": "object",
                                    "description": "Settlement plan to be maintained for the party",
                                    "required": [
                                        "settlementCycle"
                                    ],
                                    "properties": {
                                        "settlementCycle": {
                                            "type": "string",
                                            "description": "Frequency of settling payouts to the party.",
                                            "enum": [
                                                "T_Plus_N",
                                                "Weekly",
                                                "Fortnightly",
                                                "Monthly",
                                                "Quarterly",
                                                "HalfYearly",
                                                "Yearly"
                                            ]
                                        },
                                        "t_Plus_N": {
                                            "type": "number",
                                            "description": "T is 'Transaction Date' received in Transaction Request, N is the 'Number of Calendar Days' from the transaction date. If value is 2, it represents T+2 settlement schedule.\nIf settlementCycle is 'T_Plus_N' and then the value will be mandatory.",
                                            "example": 2
                                        },
                                        "weekly": {
                                            "type": "string",
                                            "description": "A single Day or multiple days of a week, with hyphen (-) separation. Transactions will be scheduled for payout for the next applicable day and not on the same day. <br> <br>If settlementCycle is 'Weekly' and then the value will be mandatory. <br>example- Mon, Tue, Mon-Wed, Mon-Wed-Fri, etc. If value is Mon-Thu then transaction will be scheduled on Monday and Thursday. ",
                                            "example": "Mon-Tue-Thu"
                                        },
                                        "fortnightlyInterval": {
                                            "type": "string",
                                            "description": "Fortnight interval of a month.<br>\nIf settlementCycle is 'Fortnightly' and then the value will be mandatory.<br>\nNote: SCS shall schedule the transactions accordingly as per the applicable calendar month e.g., If 17-31 is configured then, for calendar months ending with 28/29/30, SCS shall consider the interval as 17-28/17-29/17-30. Similar logic shall apply for intervals 16-30 and 15-29",
                                            "example": "1-15",
                                            "enum": [
                                                "1-15",
                                                "2-16",
                                                "3-17",
                                                "4-18",
                                                "5-19",
                                                "6-20",
                                                "7-21",
                                                "8-22",
                                                "9-23",
                                                "10-24",
                                                "11-25",
                                                "12-26",
                                                "13-27",
                                                "14-28",
                                                "15-29",
                                                "16-30",
                                                "17-31"
                                            ]
                                        },
                                        "dayOfMonth": {
                                            "type": "number",
                                            "description": "Day of the month to be considered, ranges from 1 to 31.<br> If settlementCycle is 'Monthly | Quarterly | HalfYearly | Yearly' then, the value will be mandatory.<br> Note: SCS shall schedule the transactions accordingly as per the applicable calendar month<br> e.g., If 31 is configured then, the settlement day will be considered as 28/29/30 for applicable calendar months.",
                                            "example": 3
                                        },
                                        "month": {
                                            "type": "string",
                                            "description": "The month to be considered  i.e., Jan, Feb, Mar, …. Dec <br>\nIf settlementCycle is 'Quarterly | HalfYearly | Yearly' then, the value will be mandatory<br>\ne.g., If month = Jan; dayOfMonth = 10 with settlementCycle = Quarterly then, the settlement shall be done on 10-Jan, 10-Apr, 10-Jul, 10-Oct every year.",
                                            "example": "Feb",
                                            "enum": [
                                                "Jan",
                                                "Feb",
                                                "Mar",
                                                "Apr",
                                                "May",
                                                "Jun",
                                                "Jul",
                                                "Aug",
                                                "Sep",
                                                "Oct",
                                                "Nov",
                                                "Dec"
                                            ]
                                        },
                                        "settlementCutoff": {
                                            "type": "number",
                                            "description": "Cut off in terms of calendar? days applied to payment contract date for processing. <br>For e.g. if cut off days is set as 2, then payment contract submitted prior to 2 days alone will be processed. <br>Default value is 1. <br>This is not applicable for T_Plus_N frequency. ",
                                            "example": 1
                                        },
                                        "settlementDelay": {
                                            "type": "number",
                                            "description": "Add a buffer lead time in terms of number of calendar? days to from the system computed settlement day. Default value is 0. It will not be applicable for T_Plus_N frequency.",
                                            "example": 2
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "vaultDetails": {
                "type": "object",
                "description": "Vault details for creating a party vault",
                "required": [
                    "vaultName",
                    "vaultNo"
                ],
                "properties": {
                    "vaultName": {
                        "type": "string",
                        "description": "(max length - 100 characters) The name to identify a vault."
                    },
                    "vaultNo": {
                        "type": "string",
                        "description": "(immutable) (max length - 100 characters) Unique vault number to identify a vault which can represent either be a:<br> - 'partyRefId' for a party vault or<br> - 'platformRefId' for a transaction vault or<br> - a unique reference number assigned by the client<br>"
                    },
                    "treeIdentifiers": {
                        "type": "object",
                        "description": "Set of attributes to identify a tree to place a vault uniquely in case of multiple trees configured.<br> Either vaultTreeNo OR physicalAccountNo-country-assetCurrency combination needs to be provided to identify the tree.<br> Mandatory section in case of multiple trees configured for client",
                        "properties": {
                            "vaultTreeNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Unique Reference Number for a vault tree."
                            },
                            "physicalAccountNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Physical bank account number associated with the vault."
                            },
                            "country": {
                                "type": "string",
                                "description": "(immutable) The country of the physical account number. 2 character ISO country code"
                            },
                            "assetCurrency": {
                                "type": "string",
                                "description": "(immutable) Asset Currency for the configured asset type."
                            }
                        }
                    },
                    "parentIdentifiers": {
                        "type": "object",
                        "description": "Parent vault identifiers if needed. To be passed if tree depth is more than 1. <br> Either parent vault number OR vaNumber-country-currency combination has to be mentioned to identify parent vault.<br>\n If none of the parent vault identifiers are provided then this vault will be tagged under the root vault of the tree.",
                        "properties": {
                            "vaultNo": {
                                "type": "string",
                                "description": "(immutable) (max length - 100 characters) Parent Vault Number to uniquely identify the Vault in the platform.<br>\n "
                            },
                            "vaNumber": {
                                "type": "number",
                                "description": "(immutable) (max length - 34 characters) Virtual account number of the parent vault"
                            },
                            "country": {
                                "type": "string",
                                "description": "(immutable) Parent vault's country code",
                                "example": "SG"
                            },
                            "currency": {
                                "type": "string",
                                "description": "(immutable) Parent vault's currency code"
                            }
                        }
                    },
                    "virtualAccountDetails": {
                        "type": "object",
                        "description": "virtual account identifiers if needed.",
                        "properties": {
                            "vaIBAN": {
                                "type": "string",
                                "description": "(immutable) (max length - 34 characters) virtual IBAN to be populated where applicable."
                            },
                            "vaNumber": {
                                "type": "number",
                                "description": "(immutable) (max length - 34 characters) Virtual account number to be assigned for the vault, to be present if asset type is money. Can also be used to identify tree number uniquely with country and assetCurrency under treeIdentifiers section."
                            },
                            "vaName": {
                                "type": "string",
                                "description": "(immutable) (max length - 35 digits) The name of the virtual account number. Maximum length - 35 characters. Special characters allowed - @ & ( ) / + ? ! #"
                            }
                        }
                    },
                    "tag": {
                        "type": "string",
                        "description": "(max length - 40 characters) Description of Vault, such as category (buyer, seller, marketplace, etc)  "
                    },
                    "limitApplied": {
                        "type": "string",
                        "description": "Whether to apply the limits or not while performing transactions/movements - Yes or No. <br> Will be defaulted to 'No'.",
                        "enum": [
                            "Yes",
                            "No"
                        ],
                        "example": "No"
                    },
                    "limits": {
                        "$ref": "#/components/schemas/vaultLimits"
                    }
                }
            },
            "vaultLimits": {
                "type": "object",
                "description": "Section to specify various vault limits. To be specified if limitApplied is 'Yes'.",
                "properties": {
                    "maxTopupLimit": {
                        "type": "number",
                        "description": "Maximum amount allowed for topup of a Vault"
                    },
                    "minTopupLimit": {
                        "type": "number",
                        "description": "Minimum amount required for topup of a Vault"
                    },
                    "maxBalanceLimit": {
                        "type": "number",
                        "description": "Maximum balance that a Vault can hold"
                    },
                    "minBalanceLimit": {
                        "type": "number",
                        "description": "Minimum balance that a Vault must maintain"
                    },
                    "maxDrawdownLimit": {
                        "type": "number",
                        "description": "Maximum amount allowed for drawdown from a Vault"
                    },
                    "minDrawdownLimit": {
                        "type": "number",
                        "description": "Minimum amount required for drawdown from a Vault"
                    }
                }
            },
            "createVaultResponse": {
                "type": "object",
                "description": "Create Vault Request Success Response",
                "properties": {
                    "vaultTreeNo": {
                        "type": "string",
                        "description": "Unique Reference Number for a vault tree"
                    },
                    "vaultNo": {
                        "type": "string"
                    },
                    "vaultStatus": {
                        "$ref": "#/components/schemas/vaultStatus"
                    },
                    "vaDetails": {
                        "type": "object",
                        "properties": {
                            "vaNumber": {
                                "type": "number"
                            },
                            "vaName": {
                                "type": "string"
                            },
                            "vaIBAN": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "vaultStatus": {
                "type": "string",
                "enum": [
                    "Pending",
                    "Active",
                    "Inactive",
                    "Blocked",
                    "Closed"
                ],
                "description": "The status of the vault.<br><br>\nPending - When Virtual Account Number registration with the vault is in progress.<br><br>\nActive - When a virtual account number is registered with the vault.<br><br>\nBlocked - When the vault has been blocked by the client for debit transactions and all movements.<br><br>\nClosed - When Vault is logically closed for transactions/movements."
            },
            "paymentPreferences": {
                "type": "object",
                "description": "Payment Related Preferences. If release type is conditional, then paymentPreferences not applicable for payment contract, and can be supplied as part of manage payment contract API.",
                "properties": {
                    "paymentType": {
                        "type": "string",
                        "description": "Preference of payment type if any when payouts are made into account set up of the party. If this field is not updated then, values defined at party/deal level will be considered. <br> One of the following values -\n  ACH – Domestic non-urgenet payment <br>\n  RTGS – Domestic Urgent payment for high-value <br>\n  BT – Book Transfer <br>\n  TT – Telegraphic transfer <br>\n  IBFT – Real-time low-value Domestic Payments <br>\n  XACH - Cross Border non-urgenet payment <br>\n  XBT - Cross Border Book Transfer <br>\n  XRTS - Cross Border Urgent payment for high-value <br>",
                        "enum": [
                            "ACH",
                            "RTGS",
                            "BT",
                            "TT",
                            "IBFT",
                            "XACH",
                            "XBT",
                            "XRTS"
                        ]
                    },
                    "senderPopCode": {
                        "type": "string",
                        "description": "Applicable Sender Purpose Code according to the Debtor's country requirement where bank account is held. Please refer to the supplementary document for the Country-wise List of sender purpose codes and applicability."
                    },
                    "receiverPopCode": {
                        "type": "string",
                        "description": "Applicable Receiver Purpose Code according to the Beneficiary's country requirement where bank account is held. Please refer to the supplementary document for the Country-wise List of purpose codes and applicability."
                    },
                    "remittanceInfo": {
                        "type": "string",
                        "description": "Preferred Remittance info or narration to be recorded for the payment."
                    },
                    "chargeBearer": {
                        "type": "string",
                        "enum": [
                            "OUR",
                            "BEN",
                            "SHA"
                        ],
                        "description": "Indicator for charge bearer preferences applicable to certain payment types <br> OUR - Debtor pays all charges <br> BEN - Beneficiary pays all charges <br> SHA - Debtor and Creditor pay their own charges"
                    },
                    "groupKey": {
                        "type": "string",
                        "description": "Preferred key/identifiers to enable system to club payment contract amounts to be clubbed and settled to a beneficiary. If not provided, SCS will default according to the deal/contract preference."
                    }
                }
            },
            "paymentPreferencesParty": {
                "type": "object",
                "description": "Payment Related Preferences for the party.",
                "properties": {
                    "paymentType": {
                        "type": "string",
                        "description": "Preference of payment type if any when payouts are made into account set up of the party. If this field is not updated then, values defined at party/deal level will be considered.  <br> One of the following values -\n  ACH – Domestic non-urgenet payment <br>\n  RTGS – Domestic Urgent payment for high-value <br>\n  BT – Book Transfer <br>\n  TT – Telegraphic transfer <br>\n  IBFT – Real-time low-value Domestic Payments <br>\n  XACH - Cross Border non-urgenet payment <br>\n  XBT - Cross Border Book Transfer <br>\n  XRTS - Cross Border Urgent payment for high-value <br>",
                        "enum": [
                            "ACH",
                            "RTGS",
                            "BT",
                            "TT",
                            "IBFT",
                            "XACH",
                            "XBT",
                            "XRTS"
                        ]
                    },
                    "senderPopCode": {
                        "type": "string",
                        "description": "Applicable Sender Purpose Code according to the Debtor's country requirement where bank account is held. Please refer to the supplementary document for the Country-wise List of sender purpose codes and applicability"
                    },
                    "receiverPopCode": {
                        "type": "string",
                        "description": "Applicable Receiver Purpose Code according to the Beneficiary's country requirement where bank account is held. Please refer to the supplementary document for the Country-wise List of purpose codes and applicability"
                    },
                    "remittanceInfo": {
                        "type": "string",
                        "description": "Indicator for charge bearer preferences applicable to certain payment types"
                    },
                    "chargeBearer": {
                        "type": "string",
                        "enum": [
                            "OUR",
                            "BEN",
                            "SHA"
                        ],
                        "description": "Indicator for charge bearer preferences applicable to certain payment types <br> OUR - Debtor pays all charges <br> BEN - Beneficiary pays all charges <br> SHA - Debtor and Creditor pay their own charges"
                    }
                }
            },
            "createPaymentContract": {
                "type": "object",
                "required": [
                    "paymentReleaseType",
                    "category",
                    "dealRefId",
                    "platformRefId",
                    "paymentContract"
                ],
                "properties": {
                    "paymentReleaseType": {
                        "type": "string",
                        "enum": [
                            "Schedule",
                            "Conditional",
                            "Immediate"
                        ],
                        "description": "(immutable) Payment release construct.<br>\n  Immediate – To process the payment immediately <br>\n  Schedule – To schedule the payment for a future date/time<br>\n  Conditional – To payout subject to outcomes/conditions; when instructed via manage payment contract API",
                        "example": "Conditional"
                    },
                    "category": {
                        "type": "string",
                        "enum": [
                            "TRANSACTION",
                            "ASSIGNMENT",
                            "DIGITAL_ESCROW"
                        ],
                        "description": "(immutable) Nature of transaction posted by clients.",
                        "example": "DIGITAL_ESCROW"
                    },
                    "dealRefId": {
                        "type": "string",
                        "description": "(immutable) Unique SCS Deal ID provided by SCB as a one time static value",
                        "example": "REF1123456"
                    },
                    "platformRefId": {
                        "type": "string",
                        "description": "(immutable) Client provided unique reference number to track a Payment Contract. Duplicates will be rejected.",
                        "example": "REF1123456"
                    },
                    "referToOps": {
                        "$ref": "#/components/schemas/referToOps"
                    },
                    "paymentContract": {
                        "type": "object",
                        "required": [
                            "debtor",
                            "creditors",
                            "paymentContractDate",
                            "paymentContractAttributes"
                        ],
                        "description": "Payment Contract Details",
                        "properties": {
                            "paymentContractDate": {
                                "type": "string",
                                "description": "(immutable) Payment Contract Date, in YYYY-MM-DD format",
                                "example": "2021-12-31T00:00:00.000Z"
                            },
                            "paymentContractStatus": {
                                "type": "string",
                                "description": "Payment Contract Status, default is Active if not provided. <br> Active - To process the payment as per the payment contract received <br> Hold - To warehouse but hold the execution of payment contract",
                                "enum": [
                                    "Active",
                                    "Hold"
                                ],
                                "example": "Active"
                            },
                            "paymentContractAttributes": {
                                "$ref": "#/components/schemas/paymentContractAttributes"
                            },
                            "debtor": {
                                "type": "object",
                                "description": "Debtor party, funding party, location, currency and deposit details.",
                                "required": [
                                    "paymentInfo"
                                ],
                                "properties": {
                                    "paymentInfo": {
                                        "type": "object",
                                        "description": "Details of deposit or consideration as per transaction terms",
                                        "required": [
                                            "partyRefId",
                                            "paymentContractAmount"
                                        ],
                                        "properties": {
                                            "partyRefId": {
                                                "type": "string",
                                                "description": "(immutable) The party who is supposed to pay agreed amount or consideration as per the payment contract.",
                                                "example": "debtorPartyRefId"
                                            },
                                            "paymentContractAmount": {
                                                "type": "number",
                                                "description": "Payment contract amount, should be equal to the sum of amounts maintained against all creditors.",
                                                "example": 1000
                                            },
                                            "paymentContractCurrency": {
                                                "type": "string",
                                                "description": "(immutable) Payment Contract Currency. If not provided, account currency will be considered as payment contract currency.",
                                                "example": "EUR"
                                            },
                                            "paymentContractAmtInAcctCurr": {
                                                "type": "number",
                                                "description": "Payment Contract Amount in Account Currency, should be equal to the sum of amounts maintained against all creditors. Needed if payment contract currency is different from account currency, and fxType is either 'C' or 'H'",
                                                "example": 1057
                                            },
                                            "accountNumber": {
                                                "type": "string",
                                                "description": "(immutable) Debtor account number.  <br>Required in case of Virtual Accounts and is assigned by client.",
                                                "example": 123212
                                            },
                                            "accountCurrency": {
                                                "type": "string",
                                                "description": "(immutable) 3-character ISO currency code of the debit account. <br> Required only if there are more than one accounts with different currencies, under the same party and country.",
                                                "example": "USD"
                                            },
                                            "accountCountry": {
                                                "type": "string",
                                                "description": "(immutable) 2-character ISO country code of the debit account <br> Required only if there are more than one accounts under the party in different countries",
                                                "example": "SG"
                                            },
                                            "accountKey": {
                                                "type": "string",
                                                "description": "(immutable) Preferred key/identifiers to enable identification of a specific account based on information available in payment contract. This is neededin cases where there are multiple accounts under the same party."
                                            },
                                            "cutOffDate": {
                                                "type": "string",
                                                "description": "Cut off date by which escrow account is expected to be fully funded, in YYYY-MM-DD format. Not Applicable if cutOffDate is filled in fundingInfo. ",
                                                "example": "2022-01-31T00:00:00.000Z"
                                            },
                                            "fxInfo": {
                                                "$ref": "#/components/schemas/fxInfo"
                                            }
                                        }
                                    },
                                    "fundingInfo": {
                                        "type": "object",
                                        "required": [
                                            "amount",
                                            "partyRefId",
                                            "cutOffDate"
                                        ],
                                        "description": "Details of funding where deposit is caused in different location, currency or party vis-a-vis the transaction. Applicable only when the funding account/location is different from debtor account/location.",
                                        "properties": {
                                            "partyRefId": {
                                                "type": "string",
                                                "description": "(immutable) Funding Party Ref ID",
                                                "example": "fundingPartyRefID"
                                            },
                                            "amount": {
                                                "type": "number",
                                                "description": "funding currency equivalent of payment contract amount.",
                                                "example": 75000
                                            },
                                            "accountNumber": {
                                                "type": "string",
                                                "description": "(immutable) Debtor account number.  <br>Required in case of Virtual Accounts and is assigned by client.",
                                                "example": 123456
                                            },
                                            "accountCurrency": {
                                                "type": "string",
                                                "description": "(immutable) 3-character ISO currency code of the funding account. <br> Required only if there are more than one accounts with different currencies, under the same party and country.",
                                                "example": "INR"
                                            },
                                            "accountCountry": {
                                                "type": "string",
                                                "description": "(immutable) 2-character ISO country code of the funding account. <br> Required only if there are more than one accounts under the party in different countries",
                                                "example": "IN"
                                            },
                                            "accountKey": {
                                                "type": "string",
                                                "description": "(immutable) To pass the key of the account where applicable, in the cases where there are multiple accounts under the same party to differentiate."
                                            },
                                            "cutOffDate": {
                                                "type": "string",
                                                "description": "Cut off date by which escrow account is expected to be fully funded, in YYYY-MM-DD format.",
                                                "example": "2020-12-31T00:00:00.000Z"
                                            },
                                            "fxInfo": {
                                                "$ref": "#/components/schemas/fxInfo"
                                            },
                                            "smartContractSweep": {
                                                "type": "string",
                                                "description": "(immutable) Default to No if not present.\nYes - Smart Contract Suite collects funds locally and initiates cross border sweep to safeguarding/escrow location.\nNo - service-provider/agent will ensure the funds in safeguarding/escrow location.",
                                                "enum": [
                                                    "Yes",
                                                    "No"
                                                ],
                                                "example": "No"
                                            }
                                        }
                                    },
                                    "collectionAgentInfo": {
                                        "type": "array",
                                        "description": "Array of Collection Agent Parties Information.",
                                        "required": [
                                            "partyRefId",
                                            "accountCurrency",
                                            "accountCountry"
                                        ],
                                        "items": {
                                            "type": "object",
                                            "description": "Agent details",
                                            "required": [
                                                "partyRefId"
                                            ],
                                            "properties": {
                                                "partyRefId": {
                                                    "type": "string",
                                                    "description": "(immutable) Party Ref ID of collection agent"
                                                },
                                                "accountType": {
                                                    "$ref": "#/components/schemas/accountTypeImmutable"
                                                },
                                                "proxyType": {
                                                    "$ref": "#/components/schemas/proxyTypeImmutable"
                                                },
                                                "accountCurrency": {
                                                    "type": "string",
                                                    "description": "(immutable) Account Currency of collection agent. <br> Required only if there are more than one accounts with different currencies, under the same party and country."
                                                },
                                                "accountCountry": {
                                                    "type": "string",
                                                    "description": "(immutable) Collection Agent Account's Country code. <br> Required only if there are more than one accounts under the party in different countries"
                                                },
                                                "accountKey": {
                                                    "$ref": "#/components/schemas/accountKeyImmutable"
                                                }
                                            }
                                        }
                                    },
                                    "ultimateDebtor": {
                                        "type": "object",
                                        "description": "Ultimate Debtor details. Where applicable, either oboPartyRefId or oboInfo is mandatory.",
                                        "properties": {
                                            "dealRefId": {
                                                "type": "string",
                                                "description": "Ultimate Debtor Deal Ref Id to specify the deal wherever applicable. If not provided, SCS will look for the party in the Deal specified by the main dealRefId."
                                            },
                                            "oboPartyRefId": {
                                                "type": "string",
                                                "description": "Ultimate Debtor Party Ref ID. Required if OBO party is already onboarded in Smart Contract Suite."
                                            },
                                            "oboInfo": {
                                                "type": "object",
                                                "description": "Ultimate Debtor Information. Required if party is not onboarded in Smart Contract Suite.",
                                                "required": [
                                                    "oboName",
                                                    "oboAddressLine1",
                                                    "oboAddressLine2",
                                                    "oboCountry"
                                                ],
                                                "properties": {
                                                    "oboName": {
                                                        "type": "string",
                                                        "description": "Ultimate Debtor Name"
                                                    },
                                                    "oboAddressLine1": {
                                                        "type": "string",
                                                        "description": "Ultimate Debtor Address Line 1. Maximum 35 characters allowed"
                                                    },
                                                    "oboAddressLine2": {
                                                        "type": "string",
                                                        "description": "Ultimate Debtor Address Line 2. Maximum 35 characters allowed"
                                                    },
                                                    "oboCountry": {
                                                        "type": "string",
                                                        "description": "Ultimate Debtor country code"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            },
                            "payAsPerSplitPayProfile": {
                                "type": "string",
                                "description": "(immutable) To indicate whether Payout to be as per the Split Pay Profile or as per payment contract request <br> Yes – Payout will be computed and processed as per split pay profile maintained in SCS <br> No – Payout will be processed as per payment contract request.\nDefaulted to No if not provided.",
                                "enum": [
                                    "Yes",
                                    "No"
                                ],
                                "example": "No"
                            },
                            "splitPayPolicyId": {
                                "type": "string",
                                "description": "Preferred Split Pay Policy ID can be provided if payAsPerSplitPayProfile is 'Yes'.<br> SCS will derive if the value is not provided."
                            },
                            "creditors": {
                                "type": "array",
                                "description": "Beneficiary Parties and Respective Payments details",
                                "items": {
                                    "type": "object",
                                    "required": [
                                        "fragmentPlatformRefId"
                                    ],
                                    "properties": {
                                        "fragmentPlatformRefId": {
                                            "type": "string",
                                            "description": "(immutable) Unique tracking ID within a payment or payment contract to identify a split (fragmented) payment"
                                        },
                                        "fragmentAmtInDebitAcctCurr": {
                                            "type": "number",
                                            "description": "Payment contract fragment amount for the particular creditor - amount in debtor's accountCurrency. Required if payAsPerSplitPayProfile is 'No'"
                                        },
                                        "paymentAmount": {
                                            "type": "number",
                                            "description": "Payment amount in payment currency, required if the payment needs to happen in a currency other than debtor's account currency"
                                        },
                                        "paymentCurrency": {
                                            "type": "string",
                                            "description": "Payment currency, required if the payment needs to happen in a currency other than debtor's account currency"
                                        },
                                        "fxInfo": {
                                            "$ref": "#/components/schemas/fxInfo"
                                        },
                                        "participant": {
                                            "type": "object",
                                            "required": [
                                                "partyRefId",
                                                "country",
                                                "currency"
                                            ],
                                            "description": "Beneficiary party details. Either participant or account details must be present.",
                                            "properties": {
                                                "dealRefId": {
                                                    "type": "string",
                                                    "description": "(immutable) SCS deal Reference ID of the beneficiary to be populated where applicable. If not provided, SCS will look for the party in the Deal specified by the main dealRefId."
                                                },
                                                "partyRefId": {
                                                    "type": "string",
                                                    "description": "(immutable) Beneficiary Party Ref ID"
                                                },
                                                "accountType": {
                                                    "$ref": "#/components/schemas/accountType"
                                                },
                                                "proxyType": {
                                                    "$ref": "#/components/schemas/proxyType"
                                                },
                                                "accountCurrency": {
                                                    "type": "string",
                                                    "description": "Beneficiary Account's Currency. <br> Required only if there are more than one accounts with different currencies, under the same party and country."
                                                },
                                                "accountCountry": {
                                                    "type": "string",
                                                    "description": "Beneficiary Account's Country code. <br> Required only if there are more than one accounts with different currencies, under the same party and country."
                                                },
                                                "accountKey": {
                                                    "$ref": "#/components/schemas/accountKey"
                                                }
                                            }
                                        },
                                        "account": {
                                            "$ref": "#/components/schemas/accounts"
                                        },
                                        "creditorAgent": {
                                            "type": "array",
                                            "description": "description: Creditor Agent Info in case of payment via agent and paymentReleaseType is 'Conditional'. Agent who will be settling the payment to respective parties. ",
                                            "items": {
                                                "type": "object",
                                                "description": "Creditor Agent details",
                                                "required": [
                                                    "partyRefId"
                                                ],
                                                "properties": {
                                                    "partyRefId": {
                                                        "type": "string",
                                                        "description": "(immutable) Creditor Agent Party Ref ID"
                                                    },
                                                    "accountType": {
                                                        "$ref": "#/components/schemas/accountType"
                                                    },
                                                    "proxyType": {
                                                        "$ref": "#/components/schemas/proxyType"
                                                    },
                                                    "accountNumber": {
                                                        "type": "string",
                                                        "description": "Creditor Agent's account number. <br>Required in case of Virtual Accounts.  <br>Also required if there are more than one account number under the party for different country and currency combinations.",
                                                        "example": 123456789
                                                    },
                                                    "accountCurrency": {
                                                        "type": "string",
                                                        "description": "Creditor Agent Account's Currency. <br> Required only if there are more than one accounts with different currencies, under the same party and country."
                                                    },
                                                    "accountCountry": {
                                                        "type": "string",
                                                        "description": "Creditor Agent Account's Country code. <br> Required only if there are more than one accounts under the party in different countries"
                                                    },
                                                    "accountKey": {
                                                        "$ref": "#/components/schemas/accountKey"
                                                    }
                                                }
                                            }
                                        },
                                        "ultimateCreditor": {
                                            "$ref": "#/components/schemas/ultimateCreditor"
                                        },
                                        "paymentPreferences": {
                                            "$ref": "#/components/schemas/paymentPreferences"
                                        },
                                        "requestedExecutionOn": {
                                            "type": "string",
                                            "description": "Applicable if payment is to be scheduled on a future date - payment release type is Scheduled. Also dependent on payAsPerSplitPayProfile where value is 'No'. ISO Datetime format or yyyy-mm-dd format"
                                        }
                                    }
                                },
                                "example": [
                                    {
                                        "fragmentPlatformRefId": "abc1",
                                        "fragmentAmtInDebitAcctCurr": 900,
                                        "paymentAmount": 80000,
                                        "paymentCurrency": "INR",
                                        "fxInfo": {
                                            "fxType": "D",
                                            "fxRate": "",
                                            "quote": {
                                                "quoteId": ""
                                            },
                                            "booking": {
                                                "contractId": ""
                                            }
                                        },
                                        "participant": {
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyRefId": "sellerPartyRefId",
                                            "accountType": "Proxy",
                                            "proxyType": "Mobile_No",
                                            "accountCurrency": "USD",
                                            "accountCountry": "SG"
                                        },
                                        "account": {
                                            "accountType": "Account_Number",
                                            "accountNumber": "123123123123",
                                            "accountCurrency": "GBP",
                                            "accountBankBic": "ICICINBBNRI",
                                            "intermediaryBankBic": "ICICINBBNRI",
                                            "bankCode": "ICIC000123",
                                            "accountName": "Merchant X",
                                            "accountDescription": "Merchant Payout Account",
                                            "accountAddressLine1": "",
                                            "accountAddressLine2": "",
                                            "accountCountry": "IN",
                                            "countryOfIncorporation": "IN"
                                        },
                                        "creditorAgent": [
                                            {
                                                "partyRefId": null,
                                                "accountType": "Proxy",
                                                "proxyType": "Company_Id",
                                                "accountNumber": "111111111",
                                                "accountCurrency": "EUR",
                                                "accountCountry": "SG"
                                            }
                                        ],
                                        "ultimateCreditor": {
                                            "dealRefId": "ucDealID1",
                                            "ucPartyRefId": "ucPartyRef1",
                                            "ultimateCreditorInfo": {
                                                "ucName": "ucN1",
                                                "ucAddressLine1": "AddrLine1",
                                                "ucAddressLine2": "AddrLine2",
                                                "ucCountry": "SG"
                                            }
                                        },
                                        "paymentPreferences": {
                                            "paymentType": "ACH,",
                                            "senderPopCode": "GDD,",
                                            "receiverPopCode": "GDD,",
                                            "remittanceInfo": "Narration",
                                            "chargeBearer": "OUR",
                                            "groupKey": null
                                        },
                                        "requestedExecutionOn": "2023-01-10T20:00:00Z'/ '2023-01-10'"
                                    },
                                    {
                                        "fragmentPlatformRefId": "abc2",
                                        "fragmentAmtInDebitAcctCurr": 30,
                                        "paymentAmount": 2700,
                                        "paymentCurrency": "INR",
                                        "fxInfo": {
                                            "fxType": "D",
                                            "fxRate": null,
                                            "quote": {
                                                "quoteId": null
                                            },
                                            "booking": {
                                                "contractId": null
                                            }
                                        },
                                        "participant": {
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyRefId": "sellerPartyRefId",
                                            "accountType": "Proxy",
                                            "proxyType": "Mobile_No",
                                            "accountCurrency": "USD",
                                            "accountCountry": "SG"
                                        },
                                        "account": {
                                            "accountType": "Account_Number",
                                            "accountNumber": "123123123123",
                                            "accountCurrency": "GBP",
                                            "accountBankBic": "ICICINBBNRI",
                                            "intermediaryBankBic": "ICICINBBNRI",
                                            "bankCode": "ICIC000123",
                                            "accountName": "Merchant X",
                                            "accountDescription": "Merchant Payout Account",
                                            "accountAddressLine1": "",
                                            "accountAddressLine2": "",
                                            "accountCountry": "IN",
                                            "countryOfIncorporation": "IN"
                                        },
                                        "creditorAgent": [
                                            {
                                                "partyRefId": null,
                                                "accountType": "Proxy",
                                                "proxyType": "Company_Id",
                                                "accountNumber": "111111111",
                                                "accountCurrency": "EUR",
                                                "accountCountry": "SG"
                                            }
                                        ],
                                        "paymentPreferences": {
                                            "paymentType": "ACH,",
                                            "senderPopCode": "GDD,",
                                            "receiverPopCode": "GDD,",
                                            "remittanceInfo": "Narration",
                                            "chargeBearer": "OUR",
                                            "groupKey": null
                                        },
                                        "requestedExecutionOn": "2023-01-10T20:00:00Z'/ '2023-01-10'"
                                    },
                                    {
                                        "fragmentPlatformRefId": "abc3",
                                        "fragmentAmtInDebitAcctCurr": 70,
                                        "paymentAmount": 6000,
                                        "paymentCurrency": "INR",
                                        "fxInfo": {
                                            "fxType": "D",
                                            "fxRate": null,
                                            "quote": {
                                                "quoteId": null
                                            },
                                            "booking": {
                                                "contractId": null
                                            }
                                        },
                                        "participant": {
                                            "dealRefId": "SG-AS-02-20012",
                                            "partyRefId": "sellerPartyRefId",
                                            "accountType": "Proxy",
                                            "proxyType": "Mobile_No",
                                            "accountCurrency": "USD",
                                            "accountCountry": "SG"
                                        },
                                        "account": {
                                            "accountType": "Account_Number",
                                            "accountNumber": "123123123123",
                                            "accountCurrency": "GBP",
                                            "accountBankBic": "ICICINBBNRI",
                                            "intermediaryBankBic": "ICICINBBNRI",
                                            "bankCode": "ICIC000123",
                                            "accountName": "Merchant X",
                                            "accountDescription": "Merchant Payout Account",
                                            "accountAddressLine1": "",
                                            "accountAddressLine2": "",
                                            "accountCountry": "IN",
                                            "countryOfIncorporation": "IN"
                                        },
                                        "creditorAgent": [
                                            {
                                                "partyRefId": null,
                                                "accountType": "Proxy",
                                                "proxyType": "Company_Id",
                                                "accountNumber": "111111111",
                                                "accountCurrency": "EUR",
                                                "accountCountry": "SG"
                                            }
                                        ],
                                        "paymentPreferences": {
                                            "paymentType": "ACH,",
                                            "senderPopCode": "GDD,",
                                            "receiverPopCode": "GDD,",
                                            "remittanceInfo": "Narration",
                                            "chargeBearer": "OUR",
                                            "groupKey": null
                                        },
                                        "requestedExecutionOn": "2022-02-05T20:00:00Z'/ '2022-02-05'"
                                    }
                                ]
                            }
                        }
                    }
                }
            },
            "createPaymentContractResponse": {
                "type": "object",
                "description": "Create Payment Contract Success Message in case of Conditional payment release type",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "success status in case of successful validation and acceptance of payment contract with payment release type as conditional",
                        "example": "Success"
                    },
                    "platformRefId": {
                        "type": "string",
                        "description": "Client provided reference number to track a Payment Contract",
                        "example": 12312312312
                    }
                }
            },
            "createPaymentResponse": {
                "type": "object",
                "description": "Payment Creation Success Message in case of Payment Release type as Schedule/Immediate in Payment contract API or if Manage Payment Contract API is invoked successfully for a conditional payment contract.",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "success status in case of successful validation and acceptance of payload.",
                        "example": "Success"
                    },
                    "endToEndId": {
                        "type": "string",
                        "description": "Unique ID for the payment, assigned by the SCS platform which can be used to either fetch or cancel the payment.",
                        "example": "SCSC-GS1001"
                    },
                    "platformRefId": {
                        "type": "string",
                        "description": "Client provided reference number to track a Payment Contract",
                        "example": 12312312312
                    },
                    "fragment": {
                        "type": "array",
                        "description": "Details of fragments or split payment against the end to end ID",
                        "items": {
                            "type": "object",
                            "properties": {
                                "fragmentPlatformRefId": {
                                    "type": "string",
                                    "description": "Unique tracking ID within a payment or payment contract to identify a split (fragmented) payment"
                                },
                                "scheduledOn": {
                                    "type": "string",
                                    "description": "ISO Datetime indicating the Date and time when the payment will execute"
                                },
                                "paymentStatus": {
                                    "type": "string",
                                    "description": "Status of the split payment"
                                }
                            }
                        }
                    }
                }
            },
            "ultimateCreditor": {
                "type": "object",
                "description": "Ultimate Creditor Details, Applicable only for Scheduled and Immediate Payment Release Type",
                "properties": {
                    "dealRefId": {
                        "type": "string",
                        "description": "Ultimate Creditor Deal Ref Id to specify the deal wherever applicable. If not provided, SCS will look for the party in the Deal specified by the main dealRefId."
                    },
                    "ucPartyRefId": {
                        "type": "string",
                        "description": "Ultimate Creditor Party Ref ID. Required if Ultimate Creditor party is already onboarded in Smart Contract Suite."
                    },
                    "ultimateCreditorInfo": {
                        "type": "object",
                        "description": "Ultimate Creditor Information. Required if party is not onboarded in Smart Contract Suite.",
                        "required": [
                            "ucName",
                            "ucAddressLine1",
                            "ucAddressLine2",
                            "ucCountry"
                        ],
                        "properties": {
                            "ucName": {
                                "type": "string",
                                "description": "Ultimate Creditor Name"
                            },
                            "ucAddressLine1": {
                                "type": "string",
                                "description": "Ultimate Creditor Address Line 1. Maximum 35 characters allowed"
                            },
                            "ucAddressLine2": {
                                "type": "string",
                                "description": "Ultimate Creditor Address Line 2. Maximum 35 characters allowed"
                            },
                            "ucCountry": {
                                "type": "string",
                                "description": "Ultimate Creditor country code"
                            }
                        }
                    }
                }
            },
            "managePaymentContract": {
                "type": "object",
                "required": [
                    "action",
                    "platformRefId",
                    "paymentRequestId",
                    "from",
                    "to"
                ],
                "properties": {
                    "action": {
                        "type": "string",
                        "enum": [
                            "PAY",
                            "SWEEP",
                            "Vault_Transfer"
                        ],
                        "description": "Action\nPAY - Trigger payment to beneficiaries as per payment contract\nSWEEP - Move funds from a source account (at SCB) to a different destination account (at SCB) participating in a structure. (same client/deal)\nVault_Transfer - To enable vault to vault transfers mapped to the same physical account at SCB.",
                        "example": "PAY"
                    },
                    "subaction": {
                        "type": "string",
                        "description": "Predefined subactions for each action\nApportion - Applicable only for SWEEP action, enables transfer of funds from a physical account to one or more vaults under another physical account.\nRefund - Applicable only for PAY action, to process refund to the debtor as per payment contract i.e. debit debtor account number provided in payment contract and pay-out to account number provided in debtor's user set up or account reference provided in the request. Refunds can be allowed up to the transaction amount in the payment contract similar to payment action logic.",
                        "enum": [
                            "Apportion",
                            "Refund"
                        ],
                        "example": "vaultTransfer"
                    },
                    "platformRefId": {
                        "type": "string",
                        "description": "Reference ID which has been submitted by client and available in platform",
                        "example": "REF1123456"
                    },
                    "paymentRequestId": {
                        "type": "string",
                        "description": "Reference ID assigned by the client to uniquely identify the mile stones of a transaction\nDuplicates of platformRefId+paymentRequestId will be rejected",
                        "example": "PREQ123456"
                    },
                    "referToOps": {
                        "$ref": "#/components/schemas/referToOpsManageContract"
                    },
                    "from": {
                        "type": "object",
                        "required": [
                            "partyRefId"
                        ],
                        "properties": {
                            "partyRefId": {
                                "type": "string",
                                "description": "debtor party ID",
                                "example": "party123"
                            },
                            "accountNumber": {
                                "type": "string",
                                "description": "Debtor account number.  <br>Required in case of Virtual Accounts and is assigned by client.",
                                "example": "123423"
                            },
                            "accountCurrency": {
                                "type": "string",
                                "description": "3-character debtor account ISO currency code. <br> Required only if there are more than one accounts with different currencies, under the same party and country.",
                                "example": "INR"
                            },
                            "accountCountry": {
                                "type": "string",
                                "description": "2-character debtor account ISO country code. <br> Required only if there are more than one accounts under the party in different countries",
                                "example": "SG"
                            },
                            "accountKey": {
                                "type": "string",
                                "description": "To pass the key of the account where applicable, in the cases where there are multiple accounts under the same party to differentiate."
                            }
                        }
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "required": [
                                "fragmentPlatformRefId",
                                "paymentAmtInDebitAcctCurr"
                            ],
                            "type": "object",
                            "properties": {
                                "fragmentPlatformRefId": {
                                    "type": "string",
                                    "description": "Unique tracking ID for all the split(fragmented) transactions."
                                },
                                "partyDetails": {
                                    "type": "object",
                                    "description": "Either participant or account details mandatory. In case of payment is via Agent, agent details to be populated here. Ultimate party details to be populated in ultimateCreditor section",
                                    "required": [
                                        "partyRefId"
                                    ],
                                    "properties": {
                                        "partyRefId": {
                                            "type": "string",
                                            "description": "Beneficiary Party Ref ID"
                                        },
                                        "accountType": {
                                            "$ref": "#/components/schemas/accountType"
                                        },
                                        "proxyType": {
                                            "$ref": "#/components/schemas/proxyType"
                                        },
                                        "accountCurrency": {
                                            "type": "string",
                                            "description": "Beneficiary Account's Currency Code. <br> Required only if there are more than one accounts with different currencies, under the same party and country."
                                        },
                                        "accountCountry": {
                                            "type": "string",
                                            "description": "Beneficiary Account's Country code. <br> Required only if there are more than one accounts under the party in different countries"
                                        },
                                        "accountKey": {
                                            "$ref": "#/components/schemas/accountKey"
                                        }
                                    }
                                },
                                "accountDetails": {
                                    "$ref": "#/components/schemas/accounts"
                                },
                                "ultimateCreditor": {
                                    "$ref": "#/components/schemas/ultimateCreditor"
                                },
                                "paymentAmtInDebitAcctCurr": {
                                    "type": "number",
                                    "example": 1000,
                                    "description": "Payment amount for the particular creditor - amount in debtor's accountCurrency."
                                },
                                "paymentAmount": {
                                    "type": "number",
                                    "example": 900,
                                    "description": "Payment amount in payment currency, required if the payment needs to happen in currency other than debtor's account currency"
                                },
                                "paymentCurrency": {
                                    "type": "string",
                                    "example": "INR",
                                    "description": "Payment currency, required if the payment needs to happen in a currency other than debtor's account currency"
                                },
                                "fxInfo": {
                                    "$ref": "#/components/schemas/fxInfo"
                                },
                                "paymentPreferences": {
                                    "$ref": "#/components/schemas/paymentPreferences"
                                },
                                "requestedExecutionOn": {
                                    "type": "string",
                                    "description": "Applicable if payment is to be scheduled on a future date - payment release type is Scheduled. Also dependent on payAsPerSplitPayProfile where value is 'No'. ISO Datetime format or yyyy-mm-dd format"
                                }
                            }
                        },
                        "example": [
                            {
                                "fragmentPlatformRefId": "A12121",
                                "partyDetails": {
                                    "partyRefId": "sellerPartyRefId |validation->present in debtor or creditors",
                                    "accountType": "Proxy",
                                    "proxyType": "Mobile_No",
                                    "accountCountry": "SG",
                                    "accountCurrency": "INR",
                                    "accountKey": "Key1"
                                },
                                "accountDetails": {
                                    "accountType": "Account_Number",
                                    "accountNumber": "19191919",
                                    "accountCurrency": "GBP",
                                    "accountBankBic": "ICICINBBNRI",
                                    "intermediaryBankBic": "ICICINBBNRI",
                                    "accountName": "Merchant X",
                                    "accountDescription": "Merchant Payout Account",
                                    "accountAddressLine1": "",
                                    "accountAddressLine2": "",
                                    "accountCountry": "IN",
                                    "countryOfIncorporation": "IN"
                                },
                                "paymentAmount": "900",
                                "paymentCurrency": "INR",
                                "ultimateCreditor": {
                                    "dealRefId": "ucDealID1",
                                    "ucPartyRefId": "ucPartyRef1",
                                    "ultimateCreditorInfo": {
                                        "ucName": "ucN1",
                                        "ucAddressLine1": "AddrLine1",
                                        "ucAddressLine2": "AddrLine2",
                                        "ucCountry": "SG"
                                    }
                                },
                                "paymentPreferences": {
                                    "paymentType": "ACH,",
                                    "senderPopCode": "GDD,",
                                    "receiverPopCode": "GDD,",
                                    "remittanceInfo": "Narration",
                                    "chargeBearer": "OUR",
                                    "groupKey": null
                                },
                                "requestedExecutionOn": "2023-01-10T20:00:00Z'/ '2023-01-10'"
                            },
                            {
                                "fragmentPlatformRefId": "A12122",
                                "partyDetails": {
                                    "partyRefId": "sellerPartyRefId |validation->present in debtor or creditors",
                                    "accountType": "Proxy",
                                    "proxyType": "Mobile_No",
                                    "accountCountry": "SG",
                                    "accountCurrency": "INR"
                                },
                                "accountDetails": {
                                    "accountType": "Account_Number",
                                    "accountNumber": "19191919",
                                    "accountCurrency": "GBP",
                                    "accountBankBic": "ICICINBBNRI",
                                    "intermediaryBankBic": "ICICINBBNRI",
                                    "accountName": "Merchant X",
                                    "accountDescription": "Merchant Payout Account",
                                    "accountAddressLine1": "",
                                    "accountAddressLine2": "",
                                    "accountCountry": "IN",
                                    "countryOfIncorporation": "IN"
                                },
                                "paymentAmount": "70",
                                "paymentCurrency": "INR",
                                "paymentPreferences": {
                                    "paymentType": "ACH,",
                                    "senderPopCode": "GDD,",
                                    "receiverPopCode": "GDD,",
                                    "remittanceInfo": "Narration",
                                    "chargeBearer": "OUR",
                                    "groupKey": null
                                },
                                "requestedExecutionOn": "2023-01-10T20:00:00Z'/ '2023-01-10'"
                            },
                            {
                                "fragmentPlatformRefId": "A12123",
                                "partyDetails": {
                                    "partyRefId": "sellerPartyRefId |validation->present in debtor or creditors",
                                    "accountType": "Proxy",
                                    "proxyType": "Mobile_No",
                                    "accountCountry": "SG",
                                    "accountCurrency": "INR"
                                },
                                "accountDetails": {
                                    "accountType": "Account_Number",
                                    "accountNumber": "19191919",
                                    "accountCurrency": "GBP",
                                    "accountBankBic": "ICICINBBNRI",
                                    "intermediaryBankBic": "ICICINBBNRI",
                                    "accountName": "Merchant X",
                                    "accountDescription": "Merchant Payout Account",
                                    "accountAddressLine1": "",
                                    "accountAddressLine2": "",
                                    "accountCountry": "IN",
                                    "countryOfIncorporation": "IN"
                                },
                                "paymentAmount": "30",
                                "paymentCurrency": "INR",
                                "paymentPreferences": {
                                    "paymentType": "ACH,",
                                    "senderPopCode": "GDD,",
                                    "receiverPopCode": "GDD,",
                                    "remittanceInfo": "Narration",
                                    "chargeBearer": "OUR",
                                    "groupKey": null
                                },
                                "requestedExecutionOn": "2023-01-10T20:00:00Z'/ '2023-01-10'"
                            }
                        ]
                    }
                }
            },
            "referToOps": {
                "type": "boolean",
                "description": "(immutable) To park the request for ops approval to process further, default to No if not provided",
                "example": true
            },
            "referToOpsManageContract": {
                "type": "boolean",
                "description": "To park the request for ops approval to process further, default to No if not provided",
                "example": true
            },
            "fxInfo": {
                "type": "object",
                "description": "Forex Information such as quotation, FX type, FX contract ID etc. to be provided where applicable (whenever there is a cross currency requirement)",
                "required": [
                    "fxType"
                ],
                "properties": {
                    "fxType": {
                        "type": "string",
                        "enum": [
                            "C",
                            "D",
                            "H"
                        ],
                        "description": "FX Type  <br> C - Used to indicate that an FX contract has been booked with SCB. If supplied, fxRate and contractId mandatory to be supplied in case of Manage Payment Contract or Payment Contract being other than \"Conditional\" <br> D - Deal at best. Applies spot rate at the time of processing the payment.  <br> H - Held rate. Applies a pre-agreed FX rate.",
                        "example": "C"
                    },
                    "fxRate": {
                        "type": "string",
                        "description": "FX rate"
                    },
                    "quote": {
                        "type": "object",
                        "required": [
                            "quoteId",
                            "amount"
                        ],
                        "description": "FX quotation details",
                        "properties": {
                            "quoteId": {
                                "type": "string",
                                "description": "Quote ID",
                                "example": "q123"
                            }
                        }
                    },
                    "booking": {
                        "type": "object",
                        "required": [
                            "contractId"
                        ],
                        "description": "FX quote details",
                        "properties": {
                            "contractId": {
                                "type": "string",
                                "description": "FX contract ID",
                                "example": "c123"
                            }
                        }
                    }
                }
            },
            "paymentContractAttributes": {
                "type": "object",
                "description": "Category Specific Payment Contract  Details/Attributes",
                "oneOf": [
                    {
                        "$ref": "#/components/schemas/digitalEscrowCategoryAttributes"
                    },
                    {
                        "$ref": "#/components/schemas/assignmentCategoryAttributes"
                    },
                    {
                        "$ref": "#/components/schemas/transactionCategoryAttributes"
                    }
                ],
                "example": {
                    "productType": "Goods / Services",
                    "productCategory": "Books / Agro products",
                    "paymentReleaseType": "buy now pay later",
                    "escrowType": "Buyer Confirmation / Sighting / Shipping documents / Inspection",
                    "escrowFunding": "Milestone based"
                }
            },
            "digitalEscrowCategoryAttributes": {
                "type": "object",
                "description": "Attributes for Digital Escrow Payment Category",
                "properties": {
                    "productType": {
                        "type": "string",
                        "description": "Goods / Services"
                    },
                    "productCategory": {
                        "type": "string",
                        "description": "Books / Agro products"
                    },
                    "paymentReleaseType": {
                        "type": "string",
                        "description": "One of <br> buy now pay later <br> pay now release later <br> pay now release now",
                        "enum": [
                            "buy now pay later",
                            "pay now release later",
                            "pay now release now"
                        ]
                    },
                    "escrowType": {
                        "type": "string",
                        "description": "Buyer Confirmation / Sighting shipping documents / Inspection"
                    },
                    "escrowFunding": {
                        "type": "string",
                        "description": "One of - Milestone based / Fully funded",
                        "enum": [
                            "Milestone based",
                            "Fully funded"
                        ]
                    }
                }
            },
            "assignmentCategoryAttributes": {
                "type": "object",
                "description": "Attributes for ASSIGNMENT Payment Category",
                "properties": {
                    "productType": {
                        "type": "string",
                        "description": "Supply Chain Finance, Invoice Discounting, Dynamic Discounting"
                    },
                    "productCategory": {
                        "type": "string",
                        "description": "Books / Agro products"
                    },
                    "paymentReleaseType": {
                        "type": "string",
                        "description": "One of <br> drawdown <br> repayment <br> commission",
                        "enum": [
                            "drawdown",
                            "repayment",
                            "commission"
                        ]
                    }
                }
            },
            "getPaymentsResponse": {
                "type": "object",
                "properties": {
                    "pageNumber": {
                        "type": "number",
                        "description": "page number of the response, corresponding to the page query parameter in the GET request",
                        "example": 3
                    },
                    "pageRecordCount": {
                        "type": "number",
                        "description": "number of records returned in a page, corresponding to the count query parameter in the GET request",
                        "example": 2
                    },
                    "totalCount": {
                        "type": "number",
                        "description": "Total number of records corresponding to the GET request with all the filters, will be returned if totalCount parameter is 'true' in the GET request.",
                        "example": 1000
                    },
                    "data": {
                        "type": "array",
                        "description": "list of containing the GET response records",
                        "items": {
                            "type": "object",
                            "properties": {
                                "endToEndId": {
                                    "type": "string",
                                    "description": "Unique ID for the payment, assigned by the SCS platform"
                                },
                                "category": {
                                    "type": "string",
                                    "description": "Nature of transaction posted by clients."
                                },
                                "dealRefId": {
                                    "type": "string",
                                    "description": "Unique SCS Deal ID provided by SCB as a one time static value"
                                },
                                "platformRefId": {
                                    "type": "string",
                                    "description": "Client provided reference number to track the Payment - same as platformRefId received in the Initial Payment Request."
                                },
                                "paymentInfo": {
                                    "type": "object",
                                    "description": "Details of deposit as per payment terms",
                                    "properties": {
                                        "partyRefId": {
                                            "type": "string",
                                            "description": "Party Ref ID of the party who has paid the amount as per the payment."
                                        },
                                        "currency": {
                                            "type": "string",
                                            "description": "3-character ISO currency code of the debit account."
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "2-character ISO country code of the debit account."
                                        },
                                        "amount": {
                                            "type": "number",
                                            "description": "Payment amount"
                                        },
                                        "chargeBearer": {
                                            "type": "string",
                                            "description": "Indicator for charge bearer."
                                        }
                                    }
                                },
                                "creditTransactionInfo": {
                                    "type": "object",
                                    "properties": {
                                        "endToEndId": {
                                            "type": "string",
                                            "description": "Unique ID for the payment, assigned by the SCS platform"
                                        },
                                        "amountToBeSettled": {
                                            "type": "string",
                                            "description": "Amount to be settled based on split"
                                        },
                                        "settledAmount": {
                                            "type": "string",
                                            "description": "Settled amount if status is ACSP"
                                        },
                                        "status": {
                                            "type": "string",
                                            "description": "Latest status of the payment execution"
                                        },
                                        "executedOn": {
                                            "type": "string",
                                            "description": "Payment Execution Datetime"
                                        },
                                        "scheduledOn": {
                                            "type": "string",
                                            "description": "Payment Scheduling Datetime"
                                        },
                                        "errors": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "fragmentPlatformRefId": {
                                            "type": "string",
                                            "description": "Unique tracking ID within a payment to identify a split (fragmented) payment"
                                        },
                                        "partyRefId": {
                                            "type": "string",
                                            "description": "Creditor party ref ID"
                                        },
                                        "currency": {
                                            "type": "string",
                                            "description": "Credit currency"
                                        },
                                        "country": {
                                            "type": "string",
                                            "description": "Credit Country"
                                        },
                                        "amount": {
                                            "type": "integer",
                                            "description": "Credit amount for the split payment"
                                        },
                                        "requestedExecutionOn": {
                                            "type": "string",
                                            "description": "Payment Scheduling date time in ISO datetime format as received in payment request"
                                        },
                                        "paymentContractAttributes": {
                                            "$ref": "#/components/schemas/paymentContractAttributes"
                                        }
                                    }
                                }
                            },
                            "example": {
                                "endToEndId": "SCSC12121212",
                                "category": "ASSIGNMENT",
                                "dealRefId": "REF1923081923",
                                "platformRefId": "9028309123",
                                "paymentInfo": {
                                    "partyRefId": "1",
                                    "currency": "GBP",
                                    "country": "GB",
                                    "amount": 80000,
                                    "chargeBearer": "SHA"
                                },
                                "creditTransactionInfo": {
                                    "endToEndId": "SC1201201",
                                    "amountToBeSettled": "2",
                                    "settledAmount": "2",
                                    "status": "ACSP",
                                    "executedOn": "2020-02-20T20:00:00:000Z",
                                    "scheduledOn": "2020-02-20T20:00:00:000Z",
                                    "errors": [],
                                    "fragmentPlatformRefId": "2",
                                    "partyRefId": "2",
                                    "currency": "GBP",
                                    "country": "GB",
                                    "amount": 100,
                                    "requestedExecutionOn": "2020-08-01T20:00:00:000Z/2020-08-20",
                                    "paymentContractAttributes": {}
                                }
                            }
                        }
                    }
                }
            },
            "transactionCategoryAttributes": {
                "type": "object",
                "description": "Attributes for TRANSACTION Payment Category",
                "properties": {
                    "productType": {
                        "type": "string",
                        "description": "Goods / Services"
                    },
                    "productCategory": {
                        "type": "string",
                        "description": "Books / Agro products"
                    }
                }
            },
            "cancelPaymentResponse": {
                "type": "object",
                "description": "Cancel Payment response",
                "properties": {
                    "status": {
                        "type": "string",
                        "example": "Cancelled"
                    },
                    "endToEndId": {
                        "type": "string",
                        "example": "SCSC-GS1001"
                    },
                    "platformRefId": {
                        "type": "string",
                        "example": 12312312312
                    },
                    "fragment": {
                        "type": "object",
                        "properties": {
                            "fragmentPlatformRefId": {
                                "type": "string"
                            },
                            "scheduledOn": {
                                "type": "string"
                            },
                            "status": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "ErrorArray": {
                "type": "array",
                "description": "Error message array",
                "items": {
                    "type": "object",
                    "properties": {
                        "errorCode": {
                            "type": "string",
                            "description": "Error code to clasify the error",
                            "example": "SCSC-BUS-ERR-09"
                        },
                        "errorDescription": {
                            "type": "string",
                            "description": "Narration of the error",
                            "example": "Technical Issue -Please Contact the Bank"
                        }
                    }
                }
            },
            "ErrorObj": {
                "type": "object",
                "description": "Error message object",
                "properties": {
                    "errorCode": {
                        "type": "string",
                        "description": "Error code to clasify the error",
                        "example": "SCSC-TECH-ERR-02"
                    },
                    "errorMessage": {
                        "type": "string",
                        "description": "Narration of the error",
                        "example": "Technical Issue -Please Contact the Bank"
                    }
                }
            }
        }
    }
}