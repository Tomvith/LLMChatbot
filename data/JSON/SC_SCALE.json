{
    "openapi": "3.0.1",
    "info": {
        "title": "API Banking - SCALE API",
        "description": "SCALE (Standard Chartered Aggregated Liquidity Engine) allows you to expand your business internationally and price your customers in their local currency without having to worry about management of FX risks. SCALE gives you the flexibility in configuring the FX rates, allowing you to price your goods and services competitively. SCALE is 24/7 and uses a highly configurable API allowing easy and quick connection to your business.",
        "version": "1.0.2"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "http://api.standardchartered.com/openapi/scale/v2",
            "description": "Scale OpenAPI"
        }
    ],
    "tags": [
        {
            "name": "Admin",
            "description": "Facilitates to perform miscellaneous operations other than get-quotes and transactions.",
            "x-subcategory": "Corporate Financial Markets"
        },
        {
            "name": "Aggregation As a Service (AGAS)",
            "description": "Provides an ability to receive the pre aggregated transactions. New service exposed by SCALE to handle Forward FX transactions. With the new APIs, clients can push Forward (post SPOT) fx transactions which will be warehoused in scale before converting into actual micro transaction for fx settlement, such transactions are handled as Nano transactions. Nano transactions to be booked as micro transactions at regular intervals based on quote ID captured in nanos. Client will be able to make the following actions on nano transactions - trigger aggregation, execute and cancel transaction",
            "x-subcategory": "Corporate Financial Markets"
        },
        {
            "name": "Rate Quotes",
            "description": "Provides an ability to retrieve rate quotes for single or bulk of currency pairs",
            "x-subcategory": "Corporate Financial Markets"
        },
        {
            "name": "Reports",
            "description": "Provides an ability to fetch report for a client based on few criteria such as dates and report-id etc.",
            "x-subcategory": "Corporate Financial Markets"
        },
        {
            "name": "Swap Transactions",
            "description": "Provides an ability to facilitate various actions on Swap Transactions",
            "x-subcategory": "Corporate Financial Markets"
        },
        {
            "name": "Transactions",
            "description": "Facilitates various transactions such as Market Rate Transactions, SCB Guaranteed Rate Transactions, Refund Transactions etc",
            "x-subcategory": "Corporate Financial Markets"
        }
    ],
    "paths": {
        "/quotes-service/get-quotes/{clientId}/{rateCategoryID}": {
            "get": {
                "tags": [
                    "Rate Quotes"
                ],
                "summary": "Rate Quotes - Batch",
                "description": "This operation would allow the clients to fetch a rate which would be guaranteed for a certain period of time. The guaranteed period would be agreed at the time of onboarding which will also be reflected in the response of this operation (in the form of validTill field). The tenor will also be agreed at the time of onboarding. \r\n\r\nTypically, the clients would fetch rates once a day but can fetch multiple times as well. The clients can use these rates to convert the amount from one currency to another thus it would enable them to do the multi currency pricing. \r\n\r\nIf client would like to fetch rate quotes in batch, the Rate Quotes - Batch API will send all currency pairs under the client’s profile or client’s rate categories. The Rate Quotes - By Currency Pair API is recommended if client requests for quote per currency pair basis. If the rates are returned then the status would be SUCCESS. If some are not available then the status would be PARTIALSUCCESS. If none of the rates are available then the status would be RATESNOTAVAILABLE.",
                "operationId": "get-quotes",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rateCategoryID",
                        "in": "path",
                        "description": "A client can set up a single or multiple rate categories/sheets in SCALE system. A rate sheet consists of a set of currencies which share unique attributes such as margins and settlement tenor. An ID would be associated with a rate category which will be communicated to the clients during the time of onboarding. Clients can request rates for a specific rate category via specifying the rate category ID. If it is not specified and sent as ‘*’ then all the rate sheets/categories (if exist) would be sent back.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                },
                                "example": "{ \"clientID\": \"XYZ\", \"clientRequestID\": \"TX1-SCALE-TX-1OSAYT9H8EDKV\", \"status\": \"SUCCESS\", \"rates\": [ { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"GBP\", \"sellCurrency\": \"SGD\", \"tenor\": 2, \"rate\": 2.1395, \"clientRateType\": \"RETAIL\", \"status\": \"GOOD\" }, { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-12QJL9EBI9FPK\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"AUD\", \"sellCurrency\": \"MYR\", \"tenor\": 2, \"rate\": 3.2169, \"clientRateType\": \"RETAIL\", \"status\": \"GOOD\" } ] }"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Quote not found",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/quotes-service/get-single-quote/{clientId}/{rateCategoryID}/{buyCurrency}/{sellCurrency}/{tenor}": {
            "get": {
                "tags": [
                    "Rate Quotes"
                ],
                "summary": "Rate Quotes - By Currency Pair",
                "description": "This operation would allow the clients to fetch a rate which would be guaranteed for a certain period of time. The guaranteed period would be agreed at the time of onboarding which will also be reflected in the response of this operation (in the form of validTill field). The tenor will also be agreed at the time of onboarding. \r\n\r\nTypically, the clients would fetch rates once a day but can fetch multiple times as well. The clients can use these rates to convert the amount from one currency to another thus it would enable them to do the multi currency pricing. \r\n\r\nIf client would like to fetch rate quotes in batch, the Rate Quotes - Batch API will send all currency pairs under the client’s profile or client’s rate categories. The Rate Quotes - By Currency Pair API is recommended if client requests for quote per currency pair basis. If the rates are returned then the status would be SUCCESS. Otherwise, it would be RATESNOTAVAILABLE",
                "operationId": "get-single-quote",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rateCategoryID",
                        "in": "path",
                        "description": "A client can set up a single or multiple rate categories/sheets in SCALE system. A rate sheet consists of a set of currencies which share unique attributes such as margins and settlement tenor. An ID would be associated with a rate category which will be communicated to the clients during the time of onboarding. Clients can request rates for a specific rate category via specifying the rate category ID. If it is not specified and sent as ‘*’ then all the rate sheets/categories (if exist) would be sent back.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyCurrency",
                        "in": "path",
                        "description": "The currency which client wants to buy from the bank",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sellCurrency",
                        "in": "path",
                        "description": "The currency which client wants to sell to the bank",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tenor",
                        "in": "path",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                },
                                "example": "{ \"clientID\": \"XYZ\", \"clientRequestID\": \"TX1-SCALE-TX-1OSAYT9H8EDKV\", \"status\": \"SUCCESS\", \"rates\": [ { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"GBP\", \"sellCurrency\": \"SGD\", \"tenor\": 2, \"rate\": 2.1395, \"clientRateType\": \"RETAIL\", \"status\": \"GOOD\" } ] }"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Quote not found",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/transactions-service/post-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Transaction Execution",
                "description": "This operation would allow the clients to execute a transaction on the guaranteed rate provided earlier. Whenever a customer buys goods, it will constitute a FX trade which would be sent by the client to SCALE. While sending the transaction the clients have to specify the rate quote ID to refer to the rate to be used. \r\n\r\nThe trades would be checked for the following: \r\n\r\n1.Validity of the rate table – whether the rate has expired or not. Client should use only the valid rates to execute the transaction. If the rate is not valid then the transaction would be rejected unless the “Rate Escalation” flag is set (discussed later). \r\n\r\n2.Validity of the buy/sell currency - whether the client has permission to trade in this pair and the same currency pair has been referred in quote ID. \r\n\r\nOnce the trade is found to be valid, it would be accepted. Clients would be returned the profits from that deal. \r\n\r\nIf the rate has expired, clients can still book the deal through “Rates Escalation” flag. This is configurable parameter decided at the time of onboarding. If set then the client can send the transaction after the rate has expired (say 24 hours). Rather than refusing it, the transaction would be done at the applicable market rate (plus the margins). \r\n\r\nWhile sending the FX transaction the clients would send only one of the amounts - either the sell amount or the buy amount. Based on the rate quote ID (which would give the Rate), the other amount can be calculated using the below formula: Sell Amount = Rate × Buy Amount. Both the amount will be returned as a part of the response.",
                "operationId": "post-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Transaction Execution Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTransactionResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"transactionResponses\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \" XYZ-TRAN-ID1\",\n\"scaleTxnID\": \"XYZ-1XFZJZ0341I26\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 100.0,\n\"sellAmount\": 213.95,\n\"rate\": 2.1395,\n\"tradeDate\": \"2015-09-25\",\n\"valueDate\": \"2015-09-27\",\n\"clientProfitsCurrency\": \"SGD\",\n\"clientProfits\": 6.3,\n\"clientRef1\": \"ref1\",\n\"clientRef2\": \"ref2\",\n\"clientRef3\": \"ref3\"\n},\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-TRAN-ID2\",\n\"scaleTxnID\": \"XYZ-1F3DIS8VSZ8TG\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 201.0,\n\"sellAmount\": 430.04,\n\"rate\": 2.1395,\n\"tradeDate\": \"2015-09-25\",\n\"valueDate\": \"2015-09-27\",\n\"clientProfitsCurrency\": \"SGD\",\n\"clientProfits\": 12.67\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/post-market-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Transaction Execution (Market Rate)",
                "description": "The Transaction Execution (Market Rate) API allow the clients to execute a transaction at the market rate plus the agreed margin. \r\n\r\nIt is not required to retrieve rate quotes first for market rate transaction thus there is no rateQuoteID in the request. All other details remain same as that of Transaction Execution API at the guaranteed rate. The system will quote the latest market rate and tag to a new rateQuoteID in the API response. \r\n\r\nThe validation of the rate table would not be valid here but the validity of the buy/sell currency would still be checked i.e. whether the client has permission to trade in this pair.",
                "operationId": "post-market-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Transaction Execution Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostMarketTxnRequestPayload"
                            }
                        },
                        "application/xml": {
                            "schema": {
                                "$ref": "#/components/schemas/PostMarketTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostMarketTxnResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"transactionResponses\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \" XYZ-TRAN-ID1\",\n\"scaleTxnID\": \"XYZ-1XFZJZ0341I26\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 100.0,\n\"sellAmount\": 213.95,\n\"rate\": 2.1395,\n\"tradeDate\": \"2015-09-25\",\n\"valueDate\": \"2015-09-27\",\n\"clientProfitsCurrency\": \"SGD\",\n\"clientProfits\": 6.3,\n\"clientRef1\": \"ref1\",\n\"clientRef2\": \"ref2\",\n\"clientRef3\": \"ref3\"\n},\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-TRAN-ID2\",\n\"scaleTxnID\": \"XYZ-1F3DIS8VSZ8TG\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 201.0,\n\"sellAmount\": 430.04,\n\"rate\": 2.1395,\n\"tradeDate\": \"2015-09-25\",\n\"valueDate\": \"2015-09-27\",\n\"clientProfitsCurrency\": \"SGD\",\n\"clientProfits\": 12.67\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/post-refund-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Transaction Execution for Refund",
                "description": "This operation would allow the clients to request for a refund on an earlier executed transaction. This scenario would arise when a customer wants to return the good such as cancels the airlines ticket or hotel reservation etc. \r\n\r\n Following needs to be taken care while requesting for a refund: \r\n1. Refund would be allowed for configurable number of days. In this period the refund would be done at the rate on which the transaction was done. \r\n2. Refund Escalation – If this flag is set then the refund request would be honoured even if the rate has expired. In that case the refund would be booked at the latest rate. This flag is set at the time of onboarding. \r\n3. Client would need to specify the details (ID) of the transaction on which they are seeking refund. This ID should be a valid ID of a transaction executed earlier. \r\n4. Client would also have an ability to specify the refund amount, means under and over refunds. Under and over refund amount percentages would be configurable. The refund currency should be same as the sellCurrency of the original transaction as the currency which client sold (sellCurrency) would be refunded back. \r\n5. In the absence of refund amount, the original amount would be refunded. \r\n6. The profits for SCB and the client would be reversed. In the case of an over and under refund, the profits would be reversed on pro-rata basis.",
                "operationId": "post-refund-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Refund Transaction Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostRefundTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostRefundTxnResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"transactionResponses\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\":\"XYZ\",\n\"clientRequestID\": \"XYZ-f691\",\n\"orgClientTxnRequestID\": \"\",\n\"scaleTxnID\": \"XYZ11MWAJR2US0SC\",\n\"scaleTxnTime\": \"1592211865082\",\n\"buyCurrency\": \"THB\",\n\"sellCurrency\": \"USD\",\n\"buyAmount\": \"100.0\",\n\"sellAmount\": \"6.87\",\n\"rate\": \"0.056472\",\n\"valueDate\": \"2020-06-15\",\n\"tradeDate\": \"2020-06-15\",\n\"clientProfits\": \"0.0\",\n\"clientProfitsCurrency\": \"THB\",\n\"clientProfitsUSD\": \"0.0\",\n\"clientRef1\": \"REF1\",\n\"clientRef2\": \"REF2\",\n\"clientRef3\": \"REF3\"\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/post-indicative-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Indicative Transaction Execution",
                "description": "This operation would allow the clients to post the indicative transactions which yet to book to SCALE for the guarantee rates. It’s to facilitate the SCB risk management purpose. \r\n\r\nFor all the indicative transactions sent form client, the clientRequestTime is mandatory and it shall be the time when this indicative transaction happen. Normally after a certain time, the client will send the actual transactions. SCALE will treat the indicative transactions to be hedged already if the clientRequestTime is older than the actual transactions clientRequestTime for the same client.",
                "operationId": "post-indicative-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Indicative Transaction Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostIndicativeTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostIndicativeTransactionResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestTime\": \"1592211865082\"\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/post-adjust-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Transaction Execution for Adjustment",
                "description": "This operation would allow the clients to request for an adjustment on an earlier executed transaction. This scenario would arise when a customer wants to adjust the accumulated amount for the good such as cancels the airlines ticket or hotel reservation etc. \r\n\r\nFollowing needs to be taken care while requesting for a refund: \r\n1. Adjustment would be allowed for configurable number of days. In this period the adjustment would be done at the rate on which the transaction was done. \r\n2. Client would need to specify the details (ID) of the transaction on which they are seeking adjustment. This ID should be a valid ID of a transaction executed earlier. \r\n3. Client can specify the adjustment currency to be buy currency or sell currency of the original transactions. \r\n4. Client can specify the adjustment amount to be plus or minus. The adjustment amountpercentages would be configurable. The minus adjustment amount will be the same effect as refund on this amount. The plus adjustment will be the same direction as the original transaction. E.g. if original transaction is client sell EUR 100 buy USD 120. The adjustCurrency is EUR. If the adjustAmount is 5, it means client will sell 5 EUR more to the bank. If the adjustAmount is -5, it means client would like to get 5 EUR back from the bank. \r\n5. The profits for the client would be reversed on pro-rata basis based on the absolute value of the adjusted amount.",
                "operationId": "post-adjust-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Adjust Transaction Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostAdjustTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostAdjustTransactionResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"transactionResponses\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\":\"XYZ\",\n\"clientRequestID\": \"XYZ-f691\",\n\"orgClientTxnRequestID\": \"\",\n\"scaleTxnTime\": \"1592211865082\",\n\"buyCurrency\": \"THB\",\n\"sellCurrency\": \"USD\",\n\"buyAmount\": \"100.0\",\n\"sellAmount\": \"6.87\",\n\"rate\": \"0.056472\",\n\"tradeDate\": \"2020-06-15\",\n\"quoteId\": \"AA13485ILTLWNHR\",\n\"clientProfits\": \"0.0\",\n\"clientProfitsCurrency\": \"THB\",\n\"clientRef1\": \"REF1\",\n\"clientRef2\": \"REF2\",\n\"clientRef3\": \"REF3\"}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/post-prenet-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Transaction Execution for Netting",
                "description": "This operation would allow clients to post FX transaction for Netting, so that currency position is managed better & number of settlement will be minimized.",
                "operationId": "post-prenet-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Post Prenet Transaction Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostPrenetTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostPrenetTransactionResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"transactionResponses\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-f691\",\n\"scaleTxnID\": \"XYZ11MWAJR2US0SC\",\n\"scaleTxnTime\": \"1592211865082\",\n\"rateQuoteID\": \"XYZ1LX3XUS5K0GT9\",\n\"buyCurrency\": \"THB\",\n\"sellCurrency\": \"USD\",\n\"buyAmount\": \"100.0\",\n\"sellAmount\": \"6.87\",\n\"rate\": \"0.056472\",\n\"tradeDate\": \"2020-06-15\",\n\"valueDate\": \"2020-06-15\",\n\"otherAttributes\":\n[\n{\n\"clientProfitsCurrency\": \"THB\",\n\"clientProfits\": \"0.0\",\n\"clientRef1\": \"REF1\",\n\"clientRef2\": \"REF2\",\n\"clientRef3\": \"REF3\"\n}\n]\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/transactions-service/get-transaction/{clientId}/{customerTxId}": {
            "get": {
                "tags": [
                    "Transactions"
                ],
                "summary": "Customer Transaction",
                "description": "The get transaction API allows the client to get transaction",
                "operationId": "get-transaction",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "customerTxId",
                        "in": "path",
                        "description": "It is a unique identifier for a transaction.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTransactionResponse"
                                },
                                "example": "\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \" XYZ-TRAN-ID1\",\n\"scaleTxnID\": \"XYZ-1XFZJZ0341I26\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 100.0,\n\"sellAmount\": 213.95,\n\"rate\": 2.1395,\n\"tradeDate\": \"2015-09-25\",\n\"valueDate\": \"2015-09-27\",\n\"clientProfitsCurrency\": \"SGD\",\n\"clientProfits\": 6.3,\n\"customerAccount\": \"XYZ\",\n\"aggregationId\": \"PASS-AGGXTYTRA\"\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE, BH, BW, CI, CN, GH, GM, HK, ID, IN, JO, KE, KR, LK, MY, NG, NP, PH, PK, QA, SG, SL, TH, TW, TZ, UG, UK, VN, ZM, ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/admin-service/get-ccyholidays/{clientId}/{fromDate}/{toDate}/{ccy}": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve Holidays",
                "description": "This operation would allow the clients to retrieve holidays for a particular currency and within a certain date range. The start and end date could be typically end of the current year.",
                "operationId": "get-ccyholidays",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "path",
                        "description": "Indicate the date range for which the holidays can be requested by the client. Format for the date is YYYY-MM-DD.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "path",
                        "description": "Indicate the date range for which the holidays can be requested by the client. Format for the date is YYYY-MM-DD.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ccy",
                        "in": "path",
                        "description": "Indicate the currency for which the holidays are being requested.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCcyHolidaysResponse"
                                },
                                "example": "{\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-TRAN-ID1\",\n\"status\": \"SUCCESS\",\n\"holidays\":\n[\n{\n\"currency\": \"THB\",\n\"holidays\":\n[\n\"string\"\n]\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/admin-service/update-client-margin/{clientId}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Client Margin Update",
                "description": "This operation would allow the client to update the client margin via API, subject to the bank’s internal review and compliance approval. It can be performed in both Rate Category level and Currency Pair level. The margin to be updated shall be pre-setup already in the system. There will be a pre-defined range for the client margin. The client margin shall be within a range which can be both positive and negative. i.e.: [-x%, y%] \r\n\r\nIt is a HTTP POST request. If the request is processed successfully, the client margin will be effective once response successfully. Otherwise, the “Application Level Response Code” will be response.",
                "operationId": "update-client-margin",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update Client Margin Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientMarginRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdateClientMarginResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"clientID\": \"XYZ\",\n\"clientMarginStatus\":\n[\n {\n \"clientRequestID\": \"XYZ-TRAN-ID1\",\n \"status\": \"SUCCESS\"\n }\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/admin-service/get-valuedate/{clientId}": {
            "post": {
                "tags": [
                    "Admin"
                ],
                "summary": "Retrieve Effective Trade and Value Date",
                "description": "This operation will allow the client to retrieve the effective trade date and value date for a combination of buy and sell currency and a tenor.\r\n\r\nFor each of the trades done by the client, SCALE calculates effective trade date depending on the  input time of trade by the client into SCALE in comparison with the cut-off, Trading hours. This API operation will allow the client to retrieve the value date for a given combination of buy currency, sell currency and input date. The system will take holidays, weekends into consideration while calculating the value date.\r\n\r\nThe client can check the value date considering the request date as Trade date. Alternatively, client can check the value date using a future date input and tenor.  The future date requested could be until end of the current year. There will not be any restriction built in the system since the holidays would change for the future years, it is recommended only for the current year.",
                "operationId": "get-valuedate",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Get Value Date Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetValueDateRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetValueDateResponse"
                                },
                                "example": "{\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-TRAN-ID1\",\n\"status\": \"SUCCESS\",\n\"dates\":\n[\n{\n\"buyCurrency\": \"THB\",\n\"sellCurrency\": \"USD\",\n\"bookingAccountAlias\": \"XYZ E1 MY G11 Trades\",\n\"tenor\": \"SP\",\n\"tradeDate\": \"2020-06-15\",\n\"valueDate\": \"2020-06-15\",\n\"status\": \"SUCCESS\"\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/reporting-service/get-report/{clientId}/{reportId}/{fromDate}/{fromTime}/{toDate}/{toTime}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Report",
                "description": "This operation would allow the clients to fetch report from SCALE. The list of available report and contents are subjected client entitlement, which is not covered in this document. \r\n\r\nIt is a HTTP GET request. If the request is processed successfully, the report will be return in the response. Otherwise, the “Application Level Response Code” will be response. \r\n\r\nget-report responses the report content in plain CSV text format. The content is the same as the report send from SCALE via email.",
                "operationId": "get-report",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reportId",
                        "in": "path",
                        "description": "Indicates the report type which needs to be fetched eg. CLIENT_TX",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromDate",
                        "in": "path",
                        "description": "Indicate the date range for which the holidays can be requested by the client. Format for the date is YYYY-MM-DD.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "fromTime",
                        "in": "path",
                        "description": "Indicate the time range for which the holidays can be requested by the client. Format for the date is min:sec.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toDate",
                        "in": "path",
                        "description": "Indicate the date range for which the holidays can be requested by the client. Format for the date is YYYY-MM-DD.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "toTime",
                        "in": "path",
                        "description": "Indicate the time range for which the holidays can be requested by the client. Format for the date is min:sec.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation for CLIENT_TX",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": "[{\"Client ID\": \"AA\",\"Client Entity\": \"Thai Air Asia X\",\"Client Request Id\": \"AA-1594013250114\",\"SCALE Tx Id\": \"AA1OAN83D4OD5FS\",\"Tx Time\": \"2020-07-06 05:27\",\"Aggregated Txn ID\": \"\",\"Client Booking Account\": \"AA XJ MY Trades\",\"Rate Quote Id\": \"AA12WGUUNPTO8U8\",\"Amount Bought\": 1000,\"Buy Currency\": \"EUR\",\"Amount Sold\": 1152.73,\"Sell Currency\": \"USD\",\"Trade Date\": \"2020-07-07\",\"Settlement Date\": \"2020-07-07\",\"Client Rebates\": 50.9,\"Rebates Currency\": \"USD\",\"Client Ref 1\": \"REF1\",\"Client Ref 2\": \"\",\"Client Ref 3\": \"\"},{\"Client ID\": \"AA\",\"Client Entity\": \"Thai Air Asia X\",\"Client Request Id\": \"AA-1594013670152\",\"SCALE Tx Id\": \"AA1MKMS379GJ0P0\",\"Tx Time\": \"2020-07-06 05:34\",\"Aggregated Txn ID\": \"PASS-AGG1ERC6BT0GNHWY\",\"Client Booking Account\": \"AA XJ MY Trades\",\"Rate Quote Id\": \"AA1ERN39KLXEVJ1\",\"Amount Bought\": 1000,\"Buy Currency\": \"EUR\",\"Amount Sold\": 1152.73,\"Sell Currency\": \"USD\",\"Trade Date\": \"2020-07-06\",\"Settlement Date\": \"2020-07-06\",\"Client Rebates\": 50.9,\"Rebates Currency\": \"USD\",\"Client Ref 1\": \"REF1\",\"Client Ref 2\": \"\",\"Client Ref 3\": \"\"}]"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/reporting-service/get-latest-report/{clientId}/{reportType}": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Retrieve Latest Report",
                "description": "This operation would allow the clients to fetch latest report from SCALE. The list of available report and contents are subjected client entitlement, which is not covered in this document. \r\n\r\nIt is a HTTP GET request. If the request is processed successfully, the report will be return in the response. Otherwise, the “Application Level Response Code” will be response. \r\n\r\nget-report responses the report content in plain CSV text format. The content is the same as the report send from SCALE via email.",
                "operationId": "get-latest-report",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "reportType",
                        "in": "path",
                        "description": "Indicates the report type which needs to be fetched eg. CLIENT_TX",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation for CLIENT_TX",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                },
                                "example": "[{\"Client ID\": \"XYZ\",\"Client Entity\": \"XYZ Entity X\",\"Client Request Id\": \"XYZ-1594013250114\",\"SCALE Tx Id\": \"XYZ1OAN83D4OD5FS\",\"Tx Time\": \"2020-07-06 05:27\",\"Aggregated Txn ID\": \"\",\"Client Booking Account\": \"XYZ Account1\",\"Rate Quote Id\": \"XYZ12WGUUNPTO8U8\",\"Amount Bought\": 1000,\"Buy Currency\": \"EUR\",\"Amount Sold\": 1152.73,\"Sell Currency\": \"USD\",\"Trade Date\": \"2020-07-07\",\"Settlement Date\": \"2020-07-07\",\"Client Rebates\": 50.9,\"Rebates Currency\": \"USD\",\"Client Ref 1\": \"REF1\",\"Client Ref 2\": \"\",\"Client Ref 3\": \"\"},{\"Client ID\": \"XYZ\",\"Client Entity\": \"XYZ Entity X\",\"Client Request Id\": \"XYZ-1594013670152\",\"SCALE Tx Id\": \"XYZ1MKMS379GJ0P0\",\"Tx Time\": \"2020-07-06 05:34\",\"Aggregated Txn ID\": \"PASS-AGG1ERC6BT0GNHWY\",\"Client Booking Account\": \"XYZ Account1\",\"Rate Quote Id\": \"XYZ1ERN39KLXEVJ1\",\"Amount Bought\": 1000,\"Buy Currency\": \"EUR\",\"Amount Sold\": 1152.73,\"Sell Currency\": \"USD\",\"Trade Date\": \"2020-07-06\",\"Settlement Date\": \"2020-07-06\",\"Client Rebates\": 50.9,\"Rebates Currency\": \"USD\",\"Client Ref 1\": \"REF1\",\"Client Ref 2\": \"\",\"Client Ref 3\": \"\"}]"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE, BH, BW, CI, CN, GH, GM, HK, ID, IN, JO, KE, KR, LK, MY, NG, NP, PH, PK, QA, SG, SL, TH, TW, TZ, UG, UK, VN, ZM, ZW"
            }
        },
        "/quotes-service/validate-quotes/{clientId}": {
            "post": {
                "tags": [
                    "Rate Quotes"
                ],
                "summary": "Quotes Validation",
                "description": "This operation would allow the clients to validate a ratequoteID at any point of time. Typically, the clients could fetch the rates multiple times during the day and the rates could be guaranteed for a bigger window. This operation allows the client to check if the quote holds valid at a certain time using the ratequote ID provided earlier by SCALE . SCALE would check for the validity of the quote and responds with the validity along with the rate. \r\n\r\nThe client can send a request with one ratequote ID or multiple rate quote IDs to check the status. The number of bulk quotes that could be requested in a single payload will be configured within the application. The number of quotes that could be checked in a bulk request is limited to 25.\r\n\r\nThe validity of the quote shall be checked against the validity end time and the grace period will not be considered for the quote validity check.  Quote validity could be checked for the quotes that are fetched in the last 48 hours.",
                "operationId": "validate-quotes",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Validate Quotes Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ValidateQuotesRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidateQuotesResponse"
                                },
                                "example": "{\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \"XYZ-TRAN-ID1\",\n\"status\": \"SUCCESS\",\n\"rates\":\n[\n{\n\"rateQuoteID\": \"XYZ1LX3XUS5K0GT9\",\n\"rateCategoryID\": \"XYZ-1LX3XUS5K0GT9\",\n\"rateType\": \"TRADABLE\",\n\"validFrom\": \"2.5\",\n\"validTill\": \"2.5\",\n\"buyCurrency\": \"THB\",\n\"sellCurrency\": \"USD\",\n\"tenor\": \"SP\",\n\"rate\": \"2.1395\",\n\"status\": \"SUCCESS\"\n}\n]\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/nano-quotes-service/get-single-quote/{clientId}/{rateCategoryID}/{buyCurrency}/{sellCurrency}/{tenor}": {
            "get": {
                "tags": [
                    "Aggregation As a Service (AGAS)"
                ],
                "summary": "Nano Quotes - By Currency Pair",
                "description": "This operation would allow the clients to fetch a rate which would be guaranteed for a certain period of time. The guaranteed period would be agreed at the time of onboarding which will also be reflected in the response of this operation (in the form of validTill field). The tenor will also be agreed at the time of onboarding. \r\n\r\nTypically, the clients would fetch rates once a day but can fetch multiple times as well. The clients can use these rates to convert the amount from one currency to another thus it would enable them to do the multi currency pricing. \r\n\r\nThe Nano Quotes - By Currency Pair API is recommended if client requests for quote per currency pair basis. If the rates are returned then the status would be SUCCESS. Otherwise, it would be RATES_NOT_AVAILABLE",
                "operationId": "get-nano-single-quote",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rateCategoryID",
                        "in": "path",
                        "description": "A client can set up a single or multiple rate categories/sheets in SCALE system. A rate sheet consists of a set of currencies which share unique attributes such as margins and settlement tenor. An ID would be associated with a rate category which will be communicated to the clients during the time of onboarding. Clients can request rates for a specific rate category via specifying the rate category ID. If it is not specified and sent as ‘*’ then all the rate sheets/categories (if exist) would be sent back.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "buyCurrency",
                        "in": "path",
                        "description": "The currency which client wants to buy from the bank",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sellCurrency",
                        "in": "path",
                        "description": "The currency which client wants to sell to the bank",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tenor",
                        "in": "path",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                },
                                "example": "{ \"clientID\": \"XYZ\", \"clientRequestID\": \"TX1-SCALE-TX-1OSAYT9H8EDKV\", \"status\": \"SUCCESS\", \"rates\": [ { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"GBP\", \"sellCurrency\": \"SGD\", \"tenor\": 2, \"rate\": 2.1395, \"status\": \"GOOD\", \"valid\": true } ] }"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Quote not found",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/nano-quotes-service/get-quotes/{clientId}/{rateCategoryID}": {
            "get": {
                "tags": [
                    "Aggregation As a Service (AGAS)"
                ],
                "summary": "Nano Quotes - Batch",
                "description": "This operation would allow the clients to fetch a rate which would be guaranteed for a certain period of time. The guaranteed period would be agreed at the time of onboarding which will also be reflected in the response of this operation (in the form of validTill field). The tenor will also be agreed at the time of onboarding. \r\n\r\nTypically, the clients would fetch rates once a day but can fetch multiple times as well. The clients can use these rates to convert the amount from one currency to another thus it would enable them to do the multi currency pricing. \r\n\r\nIf client would like to fetch rate quotes in batch, the Get Quotes - Batch API will send all currency pairs under the client’s profile or client’s rate categories. The Nano Quotes - By Currency Pair API is recommended if client requests for quote per currency pair basis. If the rates are returned then the status would be SUCCESS. If some are not available then the status would be PARTIALSUCCESS. If none of the rates are available then the status would be RATESNOTAVAILABLE.",
                "operationId": "nano-quotes",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rateCategoryID",
                        "in": "path",
                        "description": "A client can set up a single or multiple rate categories/sheets in SCALE system. A rate sheet consists of a set of currencies which share unique attributes such as margins and settlement tenor. An ID would be associated with a rate category which will be communicated to the clients during the time of onboarding. Clients can request rates for a specific rate category via specifying the rate category ID. If it is not specified and sent as ‘*’ then all the rate sheets/categories (if exist) would be sent back.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                },
                                "example": "{ \"clientID\": \"XYZ\", \"clientRequestID\": \"TX1-SCALE-TX-1OSAYT9H8EDKV\", \"status\": \"SUCCESS\", \"rates\": [ { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"GBP\", \"sellCurrency\": \"SGD\", \"tenor\": 2, \"rate\": 2.1395, \"clientRateType\": \"RETAIL\", \"status\": \"GOOD\" }, { \"rateType\": \"TRADABLE\", \"rateQuoteID\": \"XYZ-12QJL9EBI9FPK\", \"rateCategoryID\": \"CatA\", \"validFrom\": 1443150225448, \"validTill\": 1443323025448, \"buyCurrency\": \"AUD\", \"sellCurrency\": \"MYR\", \"tenor\": 2, \"rate\": 3.2169, \"status\": \"GOOD\", \"valid\": true } ] }"
                            },
                            "application/xml": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetQuotesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid parameter supplied",
                        "content": {}
                    },
                    "404": {
                        "description": "Quote not found",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW"
            }
        },
        "/nano-transactions-service/post-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Aggregation As a Service (AGAS)"
                ],
                "summary": "Nano Transaction Execution",
                "description": "The Nano Transaction Execution API allows the clients to execute a nano transaction on the guaranteed rate provided earlier. Whenever a customer buys goods, it will constitute a FX trade which would be sent by the client to SCALE. While sending the transaction the clients have to specify the nano rate quote ID to refer to the rate to be used. \r\n\r\nThe trades would be checked for the following: \r\n\r\n1.Validity of the rate table – whether the rate has expired or not. Client should use only the valid rates to execute the transaction. If the rate is not valid then the transaction would be rejected unless the “Rate Escalation” flag is set (discussed later). \r\n\r\n2.Validity of the buy/sell currency - whether the client has permission to trade in this pair and the same currency pair has been referred in nano quote ID. \r\n\r\nOnce the trade is found to be valid, it would be accepted. Clients would be returned the profits from that deal. \r\n\r\nIf the rate has expired, clients can still book the deal through “Rates Escalation” flag. This is configurable parameter decided at the time of onboarding. If set then the client can send the transaction after the rate has expired (say 24 hours). Rather than refusing it, the transaction would be done at the applicable market rate (plus the margins). \r\n\r\nWhile sending the FX transaction the clients would send only one of the amounts - either the sell amount or the buy amount. Based on the nano rate quote ID (which would give the Rate), the other amount can be calculated using the below formula: Sell Amount = Rate × Buy Amount. Both the amount will be returned as a part of the response.",
                "operationId": "nano-post-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "PostTxn Request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostTxnRequestPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostTransactionResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"status\": \"SUCCESS\",\n\"transactionResponses\":\n[\n{\n\"status\": \"ACCEPTED\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \" XYZ-TRAN-ID1\",\n\"scaleNanoTxnId\": \"XYZ-1XFZJZ0341I26\",\n\"scaleTxnTime\": 1443150639699,\n\"rateQuoteID\": \"XYZ-1LX3XUS5K0GT9\",\n\"buyCurrency\": \"GBP\",\n\"sellCurrency\": \"SGD\",\n\"buyAmount\": 100.0,\n\"sellAmount\": 213.95,\n\"rate\": 2.1395,\n\"indicativeTradeDate\": \"2015-09-25\",\n\"indicativeValueDate\": \"2015-09-27\",\n\"clientRef1\": \"ref1\",\n\"clientRef2\": \"ref2\",\n\"clientRef3\": \"ref3\" } ] }"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/nano-transactions-service/cancel-transactions/{clientId}": {
            "post": {
                "tags": [
                    "Aggregation As a Service (AGAS)"
                ],
                "summary": "Nano Transaction Cancellation",
                "description": "The Nano Transaction Cancellation API allows the client to cancel any of the nano transactions before the nano aggregation period. Cancellation can be triggered at a nano transaction level for one or a batch of transactions on the payload.  Cancellation is not allowed after the aggregation period / system will returns the TXNALREADYAGGREGATED message for such cancellations",
                "operationId": "cancel-transactions",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Nano Txn Cancel Req Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NanoTxnCancelReqPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NanoTxnCancelResponse"
                                },
                                "example": "{\n\"msgUid\": \"e0d63ba9-9735-4229-a8e4-58e6b04d1ced\",\n\"status\": \"SUCCESS\",\n\"cancelTransactionsResponse\":\n[\n{\n\"status\": \"SUCCESS\",\n\"clientID\": \"XYZ\",\n\"clientRequestID\": \" XYZ-TRAN-ID1\",\n\"cancelRequestTime\": 1443150639699,\n\"bookingAccountAlias\": \"spuklfwd\",\n\"result\": \n[\n{\n\"clientTxId\": \"XYZ-TRAN-ID1\",\n\"scaleTxId\": \"STP1TGCOM2CHWW40\",\n\"status\": \"CANCELLED\",\n\"cancelTime\": 1443150639699 } ] } ] }"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/nano-transactions-service/trigger-aggregation/{clientId}": {
            "post": {
                "tags": [
                    "Aggregation As a Service (AGAS)"
                ],
                "summary": "Nano Transaction Aggregation",
                "description": "This operation shall allow the client to trigger on-demand aggregation process to convert the outstanding nano transactions into a micro transaction. This trigger could be ahead of the scheduled aggregation so as to confirm the transactions with the bank. Client is able to cancel transactions by triggering the Nano Cancel Transaction API prior to the scheduled aggregation. At the scheduled aggregation cycle, all outstanding nano will be converted as a valid micro transaction for settlement.",
                "operationId": "trigger-aggregation",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Aggregate Nano Transaction Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AggregateNanoTxnPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwapsPostQuoteResponse"
                                },
                                "example": "{\n  \"msgUid\": \"nanoAggTest1617787474474\",\n   \"status\": \"SUCCESS\",\n\"aggregateTransactionsResponse\": {    \"clientID\": \"STP\",\n    \"clientRequestID\": \"TriggerMicroAgg1617787474474\",\n    \"aggregateTime\": 1617787474616,    \"result\": [\n        {            \"bookingAccountAlias\": \"spuklfwd\",\n            \"scaleTxnID\": \"STP1HR1OMAQ66PX2\",\n            \"scaleTxnTime\": 1617787474635,            \"rateQuoteID\": \"STP1TC72JPX15CWJ\",\n            \"buyCurrency\": \"KES\",\n            \"sellCurrency\": \"USD\",\n            \"buyAmount\": \"1311.8\",\n            \"sellAmount\": \"12.28\",\n            \"rate\": \"0.00936121\",\n            \"tradeDate\": \"2021-04-07\",\n            \"valueDate\": \"2021-04-13\",\n            \"clientProfitsCurrency\": \"USD\",\n            \"clientProfits\": \"0.03\",\n            \"status\": \"BOOKED\" \n} \n ] \n } }"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/fmapi-quotes-service/post-quote-request/{customerId}": {
            "post": {
                "tags": [
                    "Swap Transactions"
                ],
                "summary": "Swap Quotes",
                "description": "The Swap Quotes API allows the client to fetch reference quotes for FX SWAPS based on currency pairs. Batch pull is also supported by passing the information on the payload.   If the rates are returned then the status would be SUCCESS. If some are not available then the status would be PARTIALSUCCESS. If none of the rates are available then the status would be RATESNOTAVAILABLE.  Appropriate response is returned on the API based on the permission for currency pair / product.",
                "operationId": "post-quote-request",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Swaps post request Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwapsPostQuoteReqPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwapsPostQuoteResponse"
                                },
                                "example": "{\n \"clientRequestID\": \"SwapsTx1617945074642\",\n \"status\": \"SUCCESS\",\n \"bookingAccountAlias\": \"ZIP-SG\",\n \"fxSecurity\": \"FXSWAP\",\n \"rateType\": \"REFERENCE\",\n \"currencyPair\": \"EUR/USD\",\n \"amount\": \"100.0\",\n \"dealtCurrency\": \"USD\",\n \"transactTime\": \"1617945074811\",\n \"quoteValidity\": \"1617951074804\",\n \"clientBuySpotPrice\": \"1.20723\",\n \"clientBuySwapPoints\": \"-31.798\",\n \"clientSellSpotPrice\": \"1.2075\",\n \"clientSellSwapPoints\": \"-34.24\",\n \"midSwapPoints\": \"-33.01\",\n \"nearLeg\": {\n     \"clientBuyPrice\": \"1.20723\",\n     \"clientBuyFwdPoints\": \"0.0\",\n     \"clientSellPrice\": \"1.2075\",\n     \"clientSellFwdPoints\": \"0.0\",\n     \"midPrice\": \"1.2073643\",\n     \"tenor\": \"SP\",\n     \"valueDate\": 20210413 \n }, \"farLeg\": {\n     \"clientBuyPrice\": \"1.204076\",\n     \"clientBuyFwdPoints\": \"-34.24\",\n     \"clientSellPrice\": \"1.2040502\",\n     \"clientSellFwdPoints\": \"-31.798\",\n     \"midPrice\": \"1.2040633\",\n     \"tenor\": \"1D\",\n     \"valueDate\": 20210414 \n\n} \n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        },
        "/fmapi-transaction-service/post-transaction-request/{customerId}": {
            "post": {
                "tags": [
                    "Swap Transactions"
                ],
                "summary": "Swap Transaction Execution",
                "description": "The Swap Transaction Execution API allows the client to book the FX SWAPS type of transaction at the prevailing market rate at the time of booking plus the agreed margin. It is not required to retrieve rate quotes first for market rate transaction, thus there is no rateQuoteID in the request.  The system will quote the latest market rate and tag to a new rateQuoteID in the API response.",
                "operationId": "post-transaction-request",
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "path",
                        "description": "It is a unique identifier for a client which will be communicated to the clients at the time of onboarding.",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TS",
                        "in": "header",
                        "description": "Timestamp",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SCALE-TX-ID",
                        "in": "header",
                        "description": "SCALE Transaction ID",
                        "required": true,
                        "style": "simple",
                        "explode": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Swaps Transaction Execution Payload",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwapsPostTrxnReqPayload"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SwapsPostTxnResponse"
                                },
                                "example": "{\n \"clientRequestID\": \"SwapsTx1617945136407\",\n \"status\": \"SUCCESS\",\n \"bookingAccountAlias\": \"ZIP-SG\",\n \"fxSecurity\": \"FXSWAP\",\n \"currencyPair\": \"USD/CNH\",\n \"side\": \"SELL\",\n \"dealtCurrency\": \"USD\",\n \"orderID\": \"21BM3UJ\",\n \"spotPrice\": \"6.24371\",\n \"midSwapPoints\": \"52563.3\",\n \"forwardPoints\": \"-0.00136\",\n \"transactTime\": 1617945137143,\n \"nearLeg\": {\n     \"buyCurrency\": \"CNH\",\n     \"buyAmount\": \"18.73\",\n     \"sellCurrency\": \"USD\",\n     \"sellAmount\": \"3.0\",\n     \"price\": \"6.24235\",\n     \"midPrice\": \"6.243184\",\n     \"tenor\": \"TOD\",\n     \"valueDate\": 20210409\n }, \"farLeg\": {\n     \"buyCurrency\": \"USD\",\n     \"buyAmount\": \"3.0\",\n     \"sellCurrency\": \"CNH\",\n     \"sellAmount\": \"36.0\",\n     \"price\": \"12.00122\",\n     \"midPrice\": \"11.499514\",\n     \"tenor\": \"1D\",\n     \"valueDate\": 20210414\n\n}, \"clientReference1\": \"ref1\",\n \"clientReference2\": \"ref2\",\n \"clientReference3\": \"ref3\" \n\n}"
                            }
                        }
                    },
                    "401": {
                        "description": "Permission Denied – clientID not enabled",
                        "content": {}
                    }
                },
                "x-markets": "AE,BH,BW,CI,CN,GH,GM,HK,ID,IN,JO,KE,KR,LK,MY,NG,NP,PH,PK,QA,SG,SL,TH,TW,TZ,UG,UK,VN,ZM,ZW",
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "SwapsPostTrxnReqPayload": {
                "required": [
                    "amount",
                    "bookingAccountAlias",
                    "clientReference1",
                    "clientReference2",
                    "clientReference3",
                    "clientRequestID",
                    "currencyPair",
                    "dealtCurrency",
                    "farLeg",
                    "fxSecurity",
                    "nearLeg",
                    "side"
                ],
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "fxSecurity": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Swaps security circle.",
                        "example": "FXSWAP"
                    },
                    "currencyPair": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency pair which client use for txn.",
                        "example": "EUR/USD"
                    },
                    "side": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Side for swap post txn.",
                        "example": "BUY"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount for the transaction",
                        "format": "int64"
                    },
                    "dealtCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client use as dealt Currency.",
                        "example": "USD"
                    },
                    "nearLeg": {
                        "required": [
                            "tenor"
                        ],
                        "type": "object",
                        "properties": {
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD, SP, 1D)",
                                "example": "TOD"
                            }
                        },
                        "description": "Near Leg Details"
                    },
                    "farLeg": {
                        "required": [
                            "tenor"
                        ],
                        "type": "object",
                        "properties": {
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD, SP, 1D)",
                                "example": "SP"
                            }
                        },
                        "description": "Far Leg Details"
                    },
                    "clientReference1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientReference2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientReference3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "SwapsPostTrxnReqPayload"
                }
            },
            "GetCcyHolidaysResponse": {
                "required": [
                    "clientID",
                    "clientRequestID",
                    "holidays",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "holidays": {
                        "type": "array",
                        "description": "Get-Ccy-Holidays Details",
                        "items": {
                            "$ref": "#/components/schemas/Holidays"
                        }
                    }
                },
                "xml": {
                    "name": "GetCcyHolidaysResponse"
                }
            },
            "PostMarketTxnRequestPayload": {
                "required": [
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/MarketRateTxnReq"
                        }
                    }
                },
                "xml": {
                    "name": "PostMarketTxnRequestPayload"
                }
            },
            "NanoCancelTransactionRes": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "result": {
                        "type": "array",
                        "description": "cancel Transaction result",
                        "items": {
                            "$ref": "#/components/schemas/CancelNanoTransactionResult"
                        }
                    }
                },
                "xml": {
                    "name": "NanoCancelTransactionRes"
                }
            },
            "PostTransactionResponse": {
                "required": [
                    "msgUid",
                    "transactionResponses"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactionResponses": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/TransactionResponse"
                        }
                    }
                },
                "xml": {
                    "name": "PostTransactionResponse"
                }
            },
            "PostMarketTxnResponse": {
                "required": [
                    "msgUid",
                    "transactionResponses"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactionResponses": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/MarketRateTxnRes"
                        }
                    }
                },
                "xml": {
                    "name": "PostMarketTxnResponse"
                }
            },
            "PostAdjustTransactionResponse": {
                "required": [
                    "msgUid",
                    "transactionResponses"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactionResponses": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostAdjustTxnRes"
                        }
                    }
                },
                "xml": {
                    "name": "PostAdjustTransactionResponse"
                }
            },
            "AggregateTransactionsRes": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "aggregateTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "result": {
                        "type": "array",
                        "description": "cancel Transaction result",
                        "items": {
                            "$ref": "#/components/schemas/AggregateTransactionsResResult"
                        }
                    }
                },
                "xml": {
                    "name": "AggregateTransactionsRes"
                }
            },
            "RefundTxnReq": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "orgClientTxnRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "clientRequestID sent as a part of the transaction request which needs to be refunded.",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "refundCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought or sold with the bank. It will be the sell/buy currency of the original transaction.",
                        "example": "USD"
                    },
                    "refundAmount": {
                        "type": "integer",
                        "description": "Client amount which needs to be refunded. It not sent then the whole amount would be reversed. It can be more than the original transaction amount (configuration).",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientRef2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientRef3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "RefundTxnReq"
                }
            },
            "RefundTxnRes": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "orgClientTxnRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request.",
                        "example": ""
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique transaction ID created by SCALE.",
                        "example": "XYZ11MWAJR2US0SC"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "valueDate": {
                        "type": "integer",
                        "description": "Value date(yyyy-MM-dd) for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsUSD": {
                        "type": "integer",
                        "description": "Client profits USD for the transaction",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF1"
                    },
                    "clientRef2": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF2"
                    },
                    "clientRef3": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF3"
                    }
                },
                "xml": {
                    "name": "RefundTxnRes"
                }
            },
            "GetRates": {
                "required": [
                    "buyCurrency",
                    "rate",
                    "rateType",
                    "sellCurrency",
                    "status",
                    "tenor",
                    "validFrom",
                    "validTill"
                ],
                "type": "object",
                "properties": {
                    "rateType": {
                        "maxLength": 16,
                        "type": "string",
                        "description": "Rate Type",
                        "example": "TRADABLE",
                        "enum": [
                            "REFERENCE",
                            "TRADABLE"
                        ]
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "rateCategoryID": {
                        "maxLength": 16,
                        "type": "string",
                        "description": "Sent back from the request. If specified as * in the request then it will have all the ID's which are setup at the time of onboarding",
                        "example": "CatA"
                    },
                    "validFrom": {
                        "type": "integer",
                        "description": "Rates would be valid from this point of time (in UTC)",
                        "format": "int64",
                        "example": 1443150225448
                    },
                    "validTill": {
                        "type": "integer",
                        "description": "Rates would be valid till this point of time (in UTC)",
                        "format": "int64",
                        "example": 1443323025448
                    },
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to buy from the bank.",
                        "example": "GBP"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to sell to the bank",
                        "example": "SGD"
                    },
                    "tenor": {
                        "type": "integer",
                        "description": "Tenor in days (TDY - 0, TOM- 1, Spot - 2 etc)",
                        "format": "int64",
                        "example": 2
                    },
                    "rate": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "This rate needs to be used to calculate the buyAmount or sellAmount from each other",
                        "example": "2.1395"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "valid": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "GetRates"
                }
            },
            "GetValueDateRequestPayload": {
                "required": [
                    "clientID",
                    "dates"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "dates": {
                        "type": "array",
                        "description": "Get-ValueDate Details",
                        "items": {
                            "$ref": "#/components/schemas/DatesReq"
                        }
                    }
                },
                "xml": {
                    "name": "GetValueDateRequestPayload"
                }
            },
            "SwapsPostTxnResponse": {
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "fxSecurity": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Swaps security circle.",
                        "example": "FXSWAP"
                    },
                    "currencyPair": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency pair which client use for txn.",
                        "example": "EUR/USD"
                    },
                    "side": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Side for swap post txn.",
                        "example": "BUY"
                    },
                    "dealtCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client use as dealt Currency.",
                        "example": "USD"
                    },
                    "orderID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a Txn.",
                        "example": "XYZ"
                    },
                    "spotPrice": {
                        "type": "integer",
                        "description": "Spot Price for the transaction",
                        "format": "int64"
                    },
                    "midSwapPoints": {
                        "type": "integer",
                        "description": "midSwapPoints for the transaction",
                        "format": "int64"
                    },
                    "forwardPoints": {
                        "type": "integer",
                        "description": "forwardPoints for the transaction",
                        "format": "int64"
                    },
                    "transactTime": {
                        "type": "integer",
                        "description": "transact time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "nearLeg": {
                        "required": [
                            "buyAmount",
                            "buyCurrency",
                            "midPrice",
                            "price",
                            "sellAmount",
                            "sellCurrency",
                            "tenor",
                            "valueDate"
                        ],
                        "type": "object",
                        "properties": {
                            "buyCurrency": {
                                "maxLength": 3,
                                "type": "string",
                                "description": "The currency which client wants to buy from the bank.",
                                "example": "CNH"
                            },
                            "buyAmount": {
                                "type": "integer",
                                "description": "The amount which client wants to buy from the bank in buyCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                                "format": "int64"
                            },
                            "sellCurrency": {
                                "maxLength": 3,
                                "type": "string",
                                "description": "The currency which client wants to sell to the bank",
                                "example": "USD"
                            },
                            "sellAmount": {
                                "type": "integer",
                                "description": "The amount which client sold to the bank in sellCurrency.",
                                "format": "int64"
                            },
                            "price": {
                                "type": "integer",
                                "description": "Price for the transaction",
                                "format": "int64"
                            },
                            "midPrice": {
                                "type": "integer",
                                "description": "midPrice for the transaction",
                                "format": "int64"
                            },
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                                "example": "TOD"
                            },
                            "valueDate": {
                                "type": "integer",
                                "description": "Value date(yyyyMMdd) for the transaction",
                                "format": "int64",
                                "example": 20200617
                            }
                        },
                        "description": "Transaction Details"
                    },
                    "farLeg": {
                        "required": [
                            "buyAmount",
                            "buyCurrency",
                            "midPrice",
                            "price",
                            "sellAmount",
                            "sellCurrency",
                            "tenor",
                            "valueDate"
                        ],
                        "type": "object",
                        "properties": {
                            "buyCurrency": {
                                "maxLength": 3,
                                "type": "string",
                                "description": "The currency which client wants to buy from the bank.",
                                "example": "CNH"
                            },
                            "buyAmount": {
                                "type": "integer",
                                "description": "The amount which client wants to buy from the bank in buyCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                                "format": "int64"
                            },
                            "sellCurrency": {
                                "maxLength": 3,
                                "type": "string",
                                "description": "The currency which client wants to sell to the bank",
                                "example": "USD"
                            },
                            "sellAmount": {
                                "type": "integer",
                                "description": "The amount which client sold to the bank in sellCurrency.",
                                "format": "int64"
                            },
                            "price": {
                                "type": "integer",
                                "description": "Price for the transaction",
                                "format": "int64"
                            },
                            "midPrice": {
                                "type": "integer",
                                "description": "midPrice for the transaction",
                                "format": "int64"
                            },
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                                "example": "TOD"
                            },
                            "valueDate": {
                                "type": "integer",
                                "description": "Value date(yyyyMMdd) for the transaction",
                                "format": "int64",
                                "example": 20200617
                            }
                        },
                        "description": "Transaction Details"
                    },
                    "clientReference1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientReference2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientReference3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "SwapsPostQuoteResponse"
                }
            },
            "PostIndicativeTxnRequestPayload": {
                "required": [
                    "clientID",
                    "clientRequestTime",
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostIndicativeTxnReq"
                        }
                    }
                },
                "xml": {
                    "name": "PostIndicativeTxnRequestPayload"
                }
            },
            "ValidateQuotesResponse": {
                "required": [
                    "clientID",
                    "clientRequestID",
                    "rates",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "rates": {
                        "type": "array",
                        "description": "Margin Details",
                        "items": {
                            "$ref": "#/components/schemas/Rates"
                        }
                    }
                },
                "xml": {
                    "name": "ValidateQuotesResponse"
                }
            },
            "UpdateClientMarginResponse": {
                "required": [
                    "clientID",
                    "clientMarginStatus",
                    "msgUid"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientMarginStatus": {
                        "type": "array",
                        "description": "Margin Details",
                        "items": {
                            "$ref": "#/components/schemas/ClientMarginStatus"
                        }
                    }
                },
                "xml": {
                    "name": "UpdateClientMarginResponse"
                }
            },
            "PostPrenetTxnReq": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientRef2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientRef3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "PostAdjustTxnReq"
                }
            },
            "PostPrenetTransactionResponse": {
                "required": [
                    "msgUid",
                    "transactionResponses"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactionResponses": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostPrenetTxnRes"
                        }
                    }
                },
                "xml": {
                    "name": "PostPrenetTransactionResponse"
                }
            },
            "AggregateTransactionsResResult": {
                "required": [
                    "bookingAccountAlias",
                    "buyAmount",
                    "buyCurrency",
                    "clientProfits",
                    "clientProfitsCurrency",
                    "rate",
                    "rateQuoteID",
                    "scaleTxnID",
                    "scaleTxnTime",
                    "sellAmount",
                    "sellCurrency",
                    "status",
                    "tradeDate",
                    "valueDate"
                ],
                "type": "object",
                "properties": {
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client.",
                        "example": "XYZ"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "res cancel time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "valueDate": {
                        "type": "integer",
                        "description": "Value date(yyyy-MM-dd) for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - BOOKED or ERROR",
                        "example": "BOOKED"
                    }
                },
                "xml": {
                    "name": "AggregateTransactionsResResult"
                }
            },
            "PostRefundTxnResponse": {
                "required": [
                    "msgUid",
                    "transactionResponses"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1123"
                    },
                    "transactionResponses": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/RefundTxnRes"
                        }
                    }
                },
                "xml": {
                    "name": "PostRefundTxnResponse"
                }
            },
            "PostIndicativeTxnReq": {
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client wants to buy from the bank in buyCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client wants to sell to the bank in sellCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                        "format": "int64"
                    }
                },
                "xml": {
                    "name": "PostIndicativeTxnReq"
                }
            },
            "Transactions": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client wants to buy from the bank in buyCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientRef2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientRef3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "Transactions"
                }
            },
            "PostPrenetTxnRes": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique transaction ID created by SCALE.",
                        "example": "XYZ11MWAJR2US0SC"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "valueDate": {
                        "maxLength": 12,
                        "type": "string",
                        "description": "Value date calculated from SCALE using the currency pair and the tenor in the request.",
                        "example": "2020-06-15T00:00:00.000Z"
                    },
                    "otherAttributes": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostPrenetResOtherAttributes"
                        }
                    }
                },
                "xml": {
                    "name": "PostPrenetTxnRes"
                }
            },
            "PostAdjustTxnRequestPayload": {
                "required": [
                    "adjustments",
                    "msgUid"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "adjustments": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostAdjustTxnReq"
                        }
                    }
                },
                "xml": {
                    "name": "PostAdjustTxnRequestPayload"
                }
            },
            "DatesRes": {
                "type": "object",
                "properties": {
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "SP"
                    },
                    "tradeDate": {
                        "maxLength": 12,
                        "type": "string",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "example": "2020-06-15T00:00:00.000Z"
                    },
                    "valueDate": {
                        "maxLength": 12,
                        "type": "string",
                        "description": "Value date calculated from SCALE using the currency pair and the tenor in the request.",
                        "example": "2020-06-15T00:00:00.000Z"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    }
                },
                "xml": {
                    "name": "GetValueDateRes"
                }
            },
            "SubscribeStreamQuotesPayload": {
                "required": [
                    "currencyPairList"
                ],
                "type": "object",
                "properties": {
                    "currencyPairList": {
                        "type": "array",
                        "description": "Currency Pair List",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyPairs"
                        }
                    }
                },
                "xml": {
                    "name": "SubscribeStreamQuotesPayload"
                }
            },
            "GetTransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique transaction ID created by SCALE.",
                        "example": "XYZ11MWAJR2US0SC"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "valueDate": {
                        "type": "integer",
                        "description": "Value date(yyyy-MM-dd) for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "customerAccount": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Customer account",
                        "example": "XYZ AB XZY"
                    },
                    "aggregationId": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "aggregation Id",
                        "example": "PASS-AGGZXZXSDERT"
                    }
                },
                "xml": {
                    "name": "GetTransactionResponse"
                }
            },
            "GetQuotesResponse": {
                "required": [
                    "clientID",
                    "clientRequestID",
                    "rates",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "rates": {
                        "type": "array",
                        "description": "Get-Quotes Details",
                        "items": {
                            "$ref": "#/components/schemas/GetRates"
                        }
                    }
                },
                "xml": {
                    "name": "GetQuotesResponse"
                }
            },
            "DatesReq": {
                "type": "object",
                "properties": {
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "SP"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    }
                },
                "xml": {
                    "name": "UpdateClientMarginReq"
                }
            },
            "SwapsPostQuoteResponse": {
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "fxSecurity": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Swaps security circle.",
                        "example": "FXSWAP"
                    },
                    "currencyPair": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency pair which client use for txn.",
                        "example": "EUR/USD"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount for the transaction",
                        "format": "int64"
                    },
                    "dealtCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client use as dealt Currency.",
                        "example": "USD"
                    },
                    "transactTime": {
                        "type": "integer",
                        "description": "transact time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "quoteValidity": {
                        "type": "integer",
                        "description": "quote Validity in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "clientBuySpotPrice": {
                        "type": "integer",
                        "description": "Buy Spot Price for the transaction",
                        "format": "int64"
                    },
                    "clientBuySwapPoints": {
                        "type": "integer",
                        "description": "client Buy Swap for the transaction",
                        "format": "int64"
                    },
                    "clientSellSpotPrice": {
                        "type": "integer",
                        "description": "client Sell Spot Price for the transaction",
                        "format": "int64"
                    },
                    "clientSellSwapPoints": {
                        "type": "integer",
                        "description": "client Sell Swap Points for the transaction",
                        "format": "int64"
                    },
                    "midSwapPoints": {
                        "type": "integer",
                        "description": "mid Swap Points for the transaction",
                        "format": "int64"
                    },
                    "nearLeg": {
                        "required": [
                            "clientBuyFwdPoints",
                            "clientBuyPrice",
                            "clientSellFwdPoints",
                            "clientSellPrice",
                            "midPrice",
                            "tenor",
                            "valueDate"
                        ],
                        "type": "object",
                        "properties": {
                            "clientBuyPrice": {
                                "type": "integer",
                                "description": "clientBuyPrice for the transaction",
                                "format": "int64"
                            },
                            "clientBuyFwdPoints": {
                                "type": "integer",
                                "description": "clientBuyFwdPoints for the transaction",
                                "format": "int64"
                            },
                            "clientSellPrice": {
                                "type": "integer",
                                "description": "clientSellPrice for the transaction",
                                "format": "int64"
                            },
                            "clientSellFwdPoints": {
                                "type": "integer",
                                "description": "clientSellFwdPoints for the transaction",
                                "format": "int64"
                            },
                            "midPrice": {
                                "type": "integer",
                                "description": "midPrice for the transaction",
                                "format": "int64"
                            },
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD or SP..)",
                                "example": "TOD"
                            },
                            "valueDate": {
                                "type": "integer",
                                "description": "Value date(yyyyMMdd) for the transaction",
                                "format": "int64",
                                "example": 20200617
                            }
                        },
                        "description": "Transaction Details"
                    },
                    "farLeg": {
                        "required": [
                            "clientBuyFwdPoints",
                            "clientBuyPrice",
                            "clientSellFwdPoints",
                            "clientSellPrice",
                            "midPrice",
                            "tenor",
                            "valueDate"
                        ],
                        "type": "object",
                        "properties": {
                            "clientBuyPrice": {
                                "type": "integer",
                                "description": "clientBuyPrice for the transaction",
                                "format": "int64"
                            },
                            "clientBuyFwdPoints": {
                                "type": "integer",
                                "description": "clientBuyFwdPoints for the transaction",
                                "format": "int64"
                            },
                            "clientSellPrice": {
                                "type": "integer",
                                "description": "clientSellPrice for the transaction",
                                "format": "int64"
                            },
                            "clientSellFwdPoints": {
                                "type": "integer",
                                "description": "clientSellFwdPoints for the transaction",
                                "format": "int64"
                            },
                            "midPrice": {
                                "type": "integer",
                                "description": "midPrice for the transaction",
                                "format": "int64"
                            },
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD or SP..)",
                                "example": "TOD"
                            },
                            "valueDate": {
                                "type": "integer",
                                "description": "Value date(yyyyMMdd) for the transaction",
                                "format": "int64",
                                "example": 20200617
                            }
                        },
                        "description": "Transaction Details"
                    }
                },
                "xml": {
                    "name": "SwapsPostQuoteResponse"
                }
            },
            "CurrencyPairResponse": {
                "required": [
                    "buyCurrency",
                    "sellCurrency",
                    "status",
                    "tenor"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to buy from the bank.",
                        "example": "CNH"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to sell to the bank",
                        "example": "USD"
                    },
                    "tenor": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "TOD"
                    }
                },
                "xml": {
                    "name": "CurrencyPairResponse"
                }
            },
            "NanoTransactions": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "cancelTransactionIDs": {
                        "type": "array",
                        "description": "cancel Transaction Details",
                        "items": {
                            "type": "string",
                            "example": "TransactionId"
                        }
                    }
                },
                "xml": {
                    "name": "NanoTransactions"
                }
            },
            "Rates": {
                "type": "object",
                "properties": {
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "rateCategoryID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Rate Category ID which is setup at the time of onboarding.",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "rateType": {
                        "maxLength": 16,
                        "type": "string",
                        "description": "Rate Type",
                        "example": "TRADABLE",
                        "enum": [
                            "REFERENCE",
                            "TRADABLE"
                        ]
                    },
                    "validFrom": {
                        "type": "integer",
                        "description": "Rates validity start time (in UTC) for the rate quote provided in the request.",
                        "format": "int64"
                    },
                    "validTill": {
                        "type": "integer",
                        "description": "Rates validity end time (in UTC) for the rate quote provided in the request by the client (in UTC).",
                        "format": "int64"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "SP"
                    },
                    "rate": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "This rate needs to be used to calculate the buyAmount or sellAmount from each other",
                        "example": "2.1395"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    }
                },
                "xml": {
                    "name": "ValidateQuotesRes"
                }
            },
            "CurrencyPairs": {
                "required": [
                    "buyCurrency",
                    "sellCurrency",
                    "tenor"
                ],
                "type": "object",
                "properties": {
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to buy from the bank.",
                        "example": "CNH"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The currency which client wants to sell to the bank",
                        "example": "USD"
                    },
                    "tenor": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "TOD"
                    }
                },
                "xml": {
                    "name": "CurrencyPairs"
                }
            },
            "PostRefundTxnRequestPayload": {
                "required": [
                    "msgUid",
                    "refunds"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "refunds": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/RefundTxnReq"
                        }
                    }
                },
                "xml": {
                    "name": "PostRefundTxnRequestPayload"
                }
            },
            "NanoTxnCancelReqPayload": {
                "required": [
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/NanoTransactions"
                        }
                    }
                },
                "xml": {
                    "name": "NanoTxnCancelReqPayload"
                }
            },
            "GetValueDateResponse": {
                "required": [
                    "clientID",
                    "clientRequestID",
                    "dates",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "dates": {
                        "type": "array",
                        "description": "Get-ValueDate Details",
                        "items": {
                            "$ref": "#/components/schemas/DatesRes"
                        }
                    }
                },
                "xml": {
                    "name": "GetValueDateResponse"
                }
            },
            "AggregateTransactions": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "bookingAccountAlias": {
                        "type": "array",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "items": {
                            "type": "string",
                            "example": "XYZ-Account-Alias"
                        }
                    }
                },
                "xml": {
                    "name": "AggregateTransactions"
                }
            },
            "Holidays": {
                "type": "object",
                "properties": {
                    "currency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "holidays": {
                        "type": "array",
                        "description": "Holiday dates in between the From date and To Date provided in the client request. This list provided excluded weekends. The date format will be YYYY-MM-DD.",
                        "items": {
                            "$ref": "#/components/schemas/ObjectSchemaDefinition"
                        }
                    }
                },
                "xml": {
                    "name": "GetCcyHolidaysRes"
                }
            },
            "TransactionResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique transaction ID created by SCALE.",
                        "example": "XYZ11MWAJR2US0SC"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "valueDate": {
                        "type": "integer",
                        "description": "Value date(yyyy-MM-dd) for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    }
                },
                "xml": {
                    "name": "TransactionResponse"
                }
            },
            "ObjectSchemaDefinition": {
                "type": "string"
            },
            "NanoTxnCancelResponse": {
                "required": [
                    "cancelTransactionsResponse",
                    "msgUid",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "cancelTransactionsResponse": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/NanoCancelTransactionRes"
                        }
                    }
                },
                "xml": {
                    "name": "NanoTxnCancelResponse"
                }
            },
            "Margins": {
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "rateCategoryID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Rate Category ID which is setup at the time of onboarding.",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "SP"
                    },
                    "newMargin": {
                        "type": "integer",
                        "description": "Value of margin in basis point format.",
                        "format": "int64"
                    }
                },
                "xml": {
                    "name": "UpdateClientMarginReq"
                }
            },
            "PostPrenetResOtherAttributes": {
                "type": "object",
                "properties": {
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF1"
                    },
                    "clientRef2": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF2"
                    },
                    "clientRef3": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF3"
                    }
                },
                "xml": {
                    "name": "PostPrenetResOtherAttributes"
                }
            },
            "PostAdjustTxnReq": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "orgClientTxnRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "clientRequestID sent as a part of the transaction request which needs to be refunded.",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "adjustCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought or sold with the bank. It will be the sell/buy currency of the original transaction.",
                        "example": "USD"
                    },
                    "adjustAmount": {
                        "type": "integer",
                        "description": "Client amount which needs to be refunded. It not sent then the whole amount would be reversed. It can be more than the original transaction amount (configuration).",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientRef2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientRef3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "PostAdjustTxnReq"
                }
            },
            "PostAdjustTxnRes": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "orgClientTxnRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request.",
                        "example": ""
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientRef1": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF1"
                    },
                    "clientRef2": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF2"
                    },
                    "clientRef3": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF3"
                    },
                    "quoteId": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each Transaction.",
                        "example": "XYZLX3XUS5K9"
                    }
                },
                "xml": {
                    "name": "PostAdjustTxnRes"
                }
            },
            "ValidateQuotesRequestPayload": {
                "required": [
                    "clientID",
                    "rateQuoteIDs"
                ],
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "rateQuoteIDs": {
                        "type": "array",
                        "description": "ValidateQuotes Details",
                        "items": {
                            "$ref": "#/components/schemas/ObjectSchemaDefinition"
                        }
                    }
                },
                "xml": {
                    "name": "ValidateQuotesRequestPayload"
                }
            },
            "PostIndicativeTransactionResponse": {
                "required": [
                    "clientID",
                    "clientRequestTime",
                    "msgUid",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1592211865082
                    }
                },
                "xml": {
                    "name": "PostAdjustTransactionResponse"
                }
            },
            "PostTxnRequestPayload": {
                "required": [
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/Transactions"
                        }
                    }
                },
                "xml": {
                    "name": "PostTxnRequestPayload"
                }
            },
            "CancelNanoTransactionResult": {
                "required": [
                    "cancelTime",
                    "clientTxId",
                    "scaleTxId",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "clientTxId": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client.",
                        "example": "XYZ"
                    },
                    "scaleTxId": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique result ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "cancelTime": {
                        "type": "integer",
                        "description": "Result cancel time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    }
                },
                "xml": {
                    "name": "CancelNanoTransactionResult"
                }
            },
            "MarketRateTxnReq": {
                "type": "object",
                "properties": {
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "buyCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "GBP"
                    },
                    "sellCurrency": {
                        "maxLength": 3,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "SGD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client wants to buy from the bank in buyCurrency. Only one amount out of buyAmount & sellAmount should be specified.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Tenor in days (TDY - 0, TOM- 1, Spot - 2 etc)",
                        "example": "2"
                    },
                    "clientRef1": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 1. If passed then this field will be sent in the transaction report.",
                        "example": "ref1"
                    },
                    "clientRef2": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 2. If passed then this field will be sent in the transaction report.",
                        "example": "ref2"
                    },
                    "clientRef3": {
                        "maxLength": 128,
                        "type": "string",
                        "description": "Client reference field 3. If passed then this field will be sent in the transaction report.",
                        "example": "ref3"
                    }
                },
                "xml": {
                    "name": "MarketRateTransaction"
                }
            },
            "UpdateClientMarginRequestPayload": {
                "required": [
                    "clientID",
                    "clientRequestTime",
                    "margins",
                    "msgUid"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestTime": {
                        "type": "integer",
                        "description": "Request time in UTC",
                        "format": "int64",
                        "example": 1443120639000
                    },
                    "margins": {
                        "type": "array",
                        "description": "Margin Details",
                        "items": {
                            "$ref": "#/components/schemas/Margins"
                        }
                    }
                },
                "xml": {
                    "name": "UpdateClientMarginRequestPayload"
                }
            },
            "MarketRateTxnRes": {
                "type": "object",
                "properties": {
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "clientID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique identifier for a client. Clients would send this identifier in each of the request. It will be communicated to the clients during the time of onboarding.",
                        "example": "XYZ"
                    },
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-f691"
                    },
                    "scaleTxnID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique transaction ID created by SCALE.",
                        "example": "XYZ11MWAJR2US0SC"
                    },
                    "scaleTxnTime": {
                        "type": "integer",
                        "description": "Transaction time in UTC in SCALE",
                        "format": "int64",
                        "example": 1592211865082
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "buyAmount": {
                        "type": "integer",
                        "description": "The amount which client bought from the bank in buyCurrency.",
                        "format": "int64"
                    },
                    "sellAmount": {
                        "type": "integer",
                        "description": "The amount which client sold to the bank in sellCurrency.",
                        "format": "int64"
                    },
                    "rate": {
                        "type": "integer",
                        "description": "The rate belonging to the rateQuoteID - it was used to calculate the buyAmount or sellAmount from the other.",
                        "format": "int64"
                    },
                    "tradeDate": {
                        "type": "integer",
                        "description": "Effective trade date(yyyy-MM-dd) for the transaction captured in SCALE",
                        "format": "int64"
                    },
                    "valueDate": {
                        "type": "integer",
                        "description": "Value date(yyyy-MM-dd) for the transaction",
                        "format": "int64"
                    },
                    "clientProfitsCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Client profits ISO currency",
                        "example": "THB"
                    },
                    "clientProfits": {
                        "type": "integer",
                        "description": "Client profits for the transaction",
                        "format": "int64"
                    },
                    "clientRef1": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF1"
                    },
                    "clientRef2": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF2"
                    },
                    "clientRef3": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Sent back from the request",
                        "example": "REF3"
                    }
                },
                "xml": {
                    "name": "MarketRateTxnRes"
                }
            },
            "SwapTransactionLeg": {
                "type": "object",
                "properties": {
                    "tenor": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "TOD"
                    }
                },
                "xml": {
                    "name": "SwapTransactionLeg"
                }
            },
            "PostPrenetTxnRequestPayload": {
                "required": [
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/PostPrenetTxnReq"
                        }
                    }
                },
                "xml": {
                    "name": "PostPrenetTxnRequestPayload"
                }
            },
            "SubscribeStreamQuotesResponse": {
                "required": [
                    "currencyPairList"
                ],
                "type": "object",
                "properties": {
                    "currencyPairList": {
                        "type": "array",
                        "description": "Currency Pair List",
                        "items": {
                            "$ref": "#/components/schemas/CurrencyPairResponse"
                        }
                    }
                },
                "xml": {
                    "name": "SubscribeStreamQuotesResponse"
                }
            },
            "AggregateNanoTxnResponse": {
                "required": [
                    "aggregateTransactionsResponse",
                    "msgUid",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Individual rate status - GOOD or ERROR",
                        "example": "GOOD"
                    },
                    "aggregateTransactionsResponse": {
                        "type": "array",
                        "description": "Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/AggregateTransactionsRes"
                        }
                    }
                },
                "xml": {
                    "name": "AggregateNanoTxnResponse"
                }
            },
            "AggregateNanoTxnPayload": {
                "required": [
                    "msgUid",
                    "transactions"
                ],
                "type": "object",
                "properties": {
                    "msgUid": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "transactions": {
                        "type": "array",
                        "description": "Aggregate Transaction Details",
                        "items": {
                            "$ref": "#/components/schemas/AggregateTransactions"
                        }
                    }
                },
                "xml": {
                    "name": "AggregateNanoTxnPayload"
                }
            },
            "ClientMarginStatus": {
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique request ID sent by client for each request",
                        "example": "XYZ-TRAN-ID1"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    }
                },
                "xml": {
                    "name": "UpdateClientMarginReq"
                }
            },
            "WebSocketResponse": {
                "required": [
                    "buyCurrency",
                    "rate",
                    "rateCategoryID",
                    "rateQuoteID",
                    "rateType",
                    "sellCurrency",
                    "status",
                    "tenor",
                    "valid",
                    "validFrom",
                    "validTill"
                ],
                "type": "object",
                "properties": {
                    "rateType": {
                        "maxLength": 16,
                        "type": "string",
                        "description": "Rate Type",
                        "example": "TRADABLE",
                        "enum": [
                            "REFERENCE",
                            "TRADABLE"
                        ]
                    },
                    "rateQuoteID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique ID for each currency pair rate. It is sent in response to the get rate request",
                        "example": "XYZ1LX3XUS5K0GT9"
                    },
                    "rateCategoryID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Rate Category ID which is setup at the time of onboarding.",
                        "example": "XYZ-1LX3XUS5K0GT9"
                    },
                    "validFrom": {
                        "type": "integer",
                        "description": "Rates validity start time (in UTC) for the rate quote provided in the request.",
                        "format": "int64"
                    },
                    "validTill": {
                        "type": "integer",
                        "description": "Rates validity end time (in UTC) for the rate quote provided in the request by the client (in UTC).",
                        "format": "int64"
                    },
                    "buyCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client bought from the bank.",
                        "example": "THB"
                    },
                    "sellCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client sold to the bank.",
                        "example": "USD"
                    },
                    "tenor": {
                        "maxLength": 8,
                        "type": "string",
                        "description": "Settlement period in days (e.g. T+0 / T+1 / T+2 or SP)",
                        "example": "SP"
                    },
                    "rate": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "This rate needs to be used to calculate the buyAmount or sellAmount from each other",
                        "example": "2.1395"
                    },
                    "status": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "SUCCESS or other response code",
                        "example": "SUCCESS"
                    },
                    "valid": {
                        "type": "boolean"
                    }
                },
                "xml": {
                    "name": "WebSocketResponse"
                }
            },
            "SwapsPostQuoteReqPayload": {
                "required": [
                    "amount",
                    "bookingAccountAlias",
                    "clientRequestID",
                    "currencyPair",
                    "dealtCurrency",
                    "farLeg",
                    "fxSecurity",
                    "nearLeg"
                ],
                "type": "object",
                "properties": {
                    "clientRequestID": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "A unique message ID with high-entropy value.",
                        "example": "e0d63ba9-9735-4229-a8e4-58e6b04d1ced"
                    },
                    "bookingAccountAlias": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "An alias to the client account; would be informed at the time of onboarding",
                        "example": "XYZ E1 MY G11 Trades"
                    },
                    "fxSecurity": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "Swaps security circle.",
                        "example": "FXSWAP"
                    },
                    "currencyPair": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency pair which client use for txn.",
                        "example": "EUR/USD"
                    },
                    "amount": {
                        "type": "integer",
                        "description": "Amount for the transaction",
                        "format": "int64"
                    },
                    "dealtCurrency": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The ISO currency which client use as dealt Currency.",
                        "example": "USD"
                    },
                    "nearLeg": {
                        "required": [
                            "tenor"
                        ],
                        "type": "object",
                        "properties": {
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD, SP, 1D)",
                                "example": "TOD"
                            }
                        },
                        "description": "Near Leg Details"
                    },
                    "farLeg": {
                        "required": [
                            "tenor"
                        ],
                        "type": "object",
                        "properties": {
                            "tenor": {
                                "maxLength": 64,
                                "type": "string",
                                "description": "Settlement period in days (e.g. TOD, SP, 1D)",
                                "example": "SP"
                            }
                        },
                        "description": "Far Leg Details"
                    }
                },
                "xml": {
                    "name": "SwapsPostQuoteReqPayload"
                }
            }
        }
    }
}