{
    "openapi": "3.0.1",
    "info": {
        "title": "API Banking - Collections",
        "description": "**API Banking - Collections**\r\n\r\nEnables collections for corporate entities. Collect Money APIs expose the ability to initiate direct debit instruction and direct debit authorisation, to retrieve its statuses and to retrieve its latest version using mandate ID. It also allows generating QR code to facilitate the collection events and enables maintenance of virtual accounts.\r\n\r\n",
        "termsOfService": "https://www.sc.com/s2b/legalnotice/",
        "contact": {
            "name": "API Banking Support Team",
            "url": "https://www.sc.com",
            "email": "api.query@sc.com"
        },
        "license": {
            "name": "Company Licence",
            "url": "http://www.sc.com/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.standardchartered.com/openapi"
        }
    ],
    "tags": [
        {
            "name": "Direct Debit Authorisation",
            "description": "Direct Debit Authorisation APIs enable you to initiate a direct debit mandate between payer and payee, retrieve authorisation statuses and provides flexibility to amend or cancel any existing direct debit authorisation.",
            "x-subcategory": "Collect Money"
        },
        {
            "name": "Direct Debit Instruction",
            "description": "Direct Debit Instruction APIs enable you to initiate direct debit instruction, retrieve its statuses and its latest version for a given Reference ID. Additionally it also provide option to retrieve all direct debit instruction status by Mandate ID.",
            "x-subcategory": "Collect Money"
        },
        {
            "name": "Virtual Accounts",
            "description": "Virtual Accounts APIs empower corporates to create shadow accounts for each of their customers there by enabling them to differentiate each collection from the collection source. Virtual accounts APIs enable corporates to perform various functions like creation of Virtual accounts, maintenance functions like update, delete and check status of virtual accounts.",
            "x-subcategory": "Collect Money"
        },
        {
            "name": "QR Code Collections",
            "description": "QR Code Collections APIs enable merchants to generate QR code to facilitate collection events.",
            "x-subcategory": "Collect Money"
        }
    ],
    "paths": {
        "/collections/v2/dda/amend": {
            "post": {
                "tags": [
                    "Direct Debit Authorisation"
                ],
                "summary": "Direct Debit Authorisation - Amend",
                "description": "The Direct Debit Authorisation - Amendment API provides the ability to amend direct debit authorisation. A limited number of fields are available for amendment, all of which are subject to approval by the payer. The API will respond with a receipt and will create a pending DDA amendment request. As the DDA progresses through its lifecycle, status updates will be available via the status API. If you have chosen to make use of the WebHook capability, updates will be pushed directly to your API in real-time. Amendable fields: <ul>   <li>sequenceType</li>   <li>frequencyType</li>   <li>requestInstancesAllowed</li>   <li>effectiveDate</li>   <li>expiryDate</li>   <li>currencyCode</li>   <li>paymentLimit.maximumTransactionAmount</li>   <li>creditor.name</li>   <li>debtorAccount.name</li> </ul>",
                "operationId": "ddaAmend_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenAPIDirectDebitAuthorization"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDirectDebitAuthorizationReport"
                                },
                                "example": {
                                    "mandateId": "MA1111111",
                                    "referenceId": "1234",
                                    "status": "Pending",
                                    "statusMessage": "",
                                    "comments": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/dda/cancel/{debtorReference}": {
            "post": {
                "tags": [
                    "Direct Debit Authorisation"
                ],
                "summary": "Direct Debit Authorisation - Cancel",
                "description": "The Direct Debit Authorisation - Cancellation API provides the ability to cancel Direct Debit Authorisation. The API will respond with a receipt and will create a pending DDA cancellation request. As the DDA progresses through its lifecycle, status updates will be available via the status API. If you have chosen to make use of the WebHook capability, updates will be pushed directly to your API in real-time.",
                "operationId": "ddaCancel_1",
                "parameters": [
                    {
                        "name": "debtorReference",
                        "in": "path",
                        "description": "Debtor Reference to be used to request DDA cancellation<br/>maxLength: 35<br/>minLength: 1<br/>example: 12341234",
                        "required": true,
                        "schema": {
                            "maxLength": 35,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDirectDebitAuthorizationReport"
                                },
                                "example": {
                                    "mandateId": "MA1111111",
                                    "referenceId": "1234",
                                    "status": "Pending",
                                    "statusMessage": "",
                                    "comments": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/dda/initiate": {
            "post": {
                "tags": [
                    "Direct Debit Authorisation"
                ],
                "summary": "Direct Debit Authorisation - Initiate",
                "description": "The Direct Debit Authorisation - Initiation API exposes the ability to initiate a Direct Debit Authorisation (DDA). A DDA is an agreement between the payer and payee that supports periodic or adhoc collection requests, subject to approval by the payer. The API will respond with receipt and will create a pending DDA request. As the DDA progresses through its lifecycle, status updates will be available via the status API. If you have chosen to make use of the WebHook capability, updates will be pushed directly to your API in real-time.",
                "operationId": "ddaInitiate_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenAPIDirectDebitAuthorization"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDirectDebitAuthorizationReport"
                                },
                                "example": {
                                    "mandateId": "MA1111111",
                                    "referenceId": "1234",
                                    "status": "Pending",
                                    "statusMessage": "",
                                    "comments": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/dda/{mandateId}": {
            "get": {
                "tags": [
                    "Direct Debit Authorisation"
                ],
                "summary": "Direct Debit Authorisation - Retrieve by Mandate ID",
                "description": "The Direct Debit Authorisation - Individual Retrieval API returns the latest version of a DDA for the given mandate ID. This API returns the latest version of a DDA based on the allocated Mandate ID, as specified in the URL. If the mandate ID does not exist, the API will return a 404 status code. This API only returns the DDA definition, for status enquiries the DDA status API should be used.",
                "operationId": "ddaMandate_1",
                "parameters": [
                    {
                        "name": "mandateId",
                        "in": "path",
                        "description": "Mandate ID based on which API will return the latest version of direct debit authorisation<br/>maxLength: 35<br/>minLength: 1<br/>example: 12341234",
                        "required": true,
                        "schema": {
                            "maxLength": 35,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIDirectDebitAuthorization"
                                },
                                "example": {
                                    "creditor": {
                                        "legalEntityId": "01243433",
                                        "name": " Company X"
                                    },
                                    "creditorAgent": {
                                        "financialInstitution": {
                                            "BIC": "003"
                                        }
                                    },
                                    "creditorAccount": {
                                        "id": "20205002714",
                                        "identifierType": "Other"
                                    },
                                    "currencyCode": "HKD",
                                    "debtor": {
                                        "name": "FPS CUST 01F302142"
                                    },
                                    "debtorAccount": {
                                        "id": "20205001432",
                                        "identifierType": "Other"
                                    },
                                    "debtorAgent": {
                                        "clearingSystemId": "12345678",
                                        "financialInstitution": {
                                            "BIC": "003"
                                        }
                                    },
                                    "debtorIdentificationDocumentIds": {
                                        "HKId": "A1234567"
                                    },
                                    "debtorReference": "12345745",
                                    "effectiveDate": "2019-02-02",
                                    "expiryDate": "2019-10-10",
                                    "paymentLimit": {
                                        "maximumBatchAmount": 500,
                                        "maximumTransactionAmount": 500,
                                        "periodicity": "Adhoc"
                                    },
                                    "mandateType": "Variable",
                                    "type": "DDMP",
                                    "referenceId": "1234"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/dda/status/{referenceId}": {
            "get": {
                "tags": [
                    "Direct Debit Authorisation"
                ],
                "summary": "Direct Debit Authorisation - Status",
                "description": "The Direct Debit Authorisation - Status API allows for the query of the latest status of a direct debit authorisation (DDA) for a given Reference ID. If the Reference ID is known, an object describes the identifiers of the mandate and its latest status code and status description. A DDA may have several interim statuses throughout its lifecycle before being Completed or Rejected. These interim statuses will all be reflected as a Pending status but with a message that indicates the sub-status of the pending DDA. Any update to the DDI status will result in a notification to the WebHook if it has been enabled during the activation process.",
                "operationId": "ddaStatus_1",
                "parameters": [
                    {
                        "name": "referenceId",
                        "in": "path",
                        "description": "Reference ID is a unique direct debit authorisation identifier which will allow to query its latest status<br/>maxLength: 35<br/>minLength: 1<br/>pattern: ^[a-zA-Z0-9&()/\\\\-@,.'*\" ]+$<br/>example: A999999999999",
                        "required": true,
                        "schema": {
                            "maxLength": 35,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDirectDebitAuthorizationReport"
                                },
                                "example": {
                                    "mandateId": "MA1111111",
                                    "referenceId": "1234",
                                    "status": "Pending",
                                    "statusMessage": "File has been received at RCMS Successfully",
                                    "comments": []
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/ddi/initiate": {
            "post": {
                "tags": [
                    "Direct Debit Instruction"
                ],
                "summary": "Direct Debit Instruction - Initiate",
                "description": "The Direct Debit Instruction - Initiate API exposes the ability to initiate a Direct Debit Instruction (DDI) that allow fund collection from a payer bank account to payee bank account with Standard Chartered Bank.\r\n\r\nFor Hong Kong, the DDI requires an active Direct Debit Authorisation (DDA) to be referenced and must comply with the parameters and limits of the parent DDA. The payer & receiver account details are strictly taken from the DDA.",
                "operationId": "ddiInitiate_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenAPIDirectDebitInstruction"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDDIStatus"
                                },
                                "example": {
                                    "referenceId": "38a26ee484344d1d94eadf10c5a45026",
                                    "paymentContainerId": "9da30825-8b75-41fa-8e3e-0d8dfb1239bd",
                                    "statusString": "Completed",
                                    "statusCode": null,
                                    "valueDate": "2021-06-09",
                                    "reasonInformation": "D13",
                                    "timestamp": "2021-06-09T08:52:21.519Z"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK,SG"
            }
        },
        "/collections/v2/ddi/{referenceId}": {
            "get": {
                "tags": [
                    "Direct Debit Instruction"
                ],
                "summary": "Direct Debit Instruction - Retrieve",
                "description": "The Direct Debit Instruction - Retrieve API returns the latest version of a DDI for the given Reference ID. This API returns the latest version of a DDI based on the allocated Reference ID, as specified in the URL. If the Reference ID does not exist, the API will return a 404 status code. This API only returns the DDI definition, for status enquiries the DDI status API should be used.",
                "operationId": "ddiRetrieve_1",
                "parameters": [
                    {
                        "name": "referenceId",
                        "in": "path",
                        "description": "Reference ID is a unique direct debit instruction identifier which will allow to retrieve instruction submitted earlier<br/>maxLength: 35<br/>minLength: 1<br/>pattern: ^[a-zA-Z0-9&()/\\\\-@,.'*\" ]+$<br/>example: A999999999999",
                        "required": true,
                        "schema": {
                            "maxLength": 35,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenAPIDirectDebitInstruction"
                                },
                                "example": {
                                    "referenceId": "eDDIabc12345",
                                    "debtorAccount": {
                                        "id": "44780029910",
                                        "identifierType": "BBAN",
                                        "accountType": "CACC"
                                    },
                                    "creditorAccount": {
                                        "id": "44708153456",
                                        "identifierType": "BBAN",
                                        "accountType": "CACC"
                                    },
                                    "instructedAmount": {
                                        "currencyCode": "HKD",
                                        "amount": 23.44
                                    },
                                    "purpose": "DDOTHR",
                                    "chargerBearer": "DEBT",
                                    "mandateId": "123p1Q12215",
                                    "creditor": {
                                        "legalEntityId": "692537",
                                        "name": "Company Name"
                                    },
                                    "debtor": {
                                        "name": "NAME G513601",
                                        "identity": {
                                            "id": "",
                                            "identityType": ""
                                        }
                                    },
                                    "creditorAgent": {
                                        "financialInstitution": {
                                            "branchCode": "",
                                            "BIC": "SCBLHKHHXXX"
                                        },
                                        "clearingSystemId": "003",
                                        "clearingSystemCode": "",
                                        "branchCode": ""
                                    },
                                    "debtorAgent": {
                                        "financialInstitution": {
                                            "branchCode": "",
                                            "BIC": "SCBLHKHHXXX"
                                        },
                                        "clearingSystemId": "003",
                                        "clearingSystemCode": "",
                                        "branchCode": ""
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK,SG"
            }
        },
        "/collections/v2/ddi/status/{referenceId}": {
            "get": {
                "tags": [
                    "Direct Debit Instruction"
                ],
                "summary": "Direct Debit Instruction - Status",
                "description": "The Direct Debit Instruction - Status API allows for the query of the latest status of a Direct Debit Instruction (DDI) for a given Reference ID. If the reference ID is known, an object describing the identifiers of the instruction and its latest status code and status description is returned. A DDI may have several interim statuses throughout its lifecycle before being Completed or Rejected. These interim statuses will be reflected as Pending status but with a message that indicates the sub-status of the pending DDI. Any update to the DDI status will result in a notification to the WebHook if it has been enabled during the activation process.",
                "operationId": "ddiStatus_1",
                "parameters": [
                    {
                        "name": "referenceId",
                        "in": "path",
                        "description": "Reference ID is a unique direct debit instruction identifier which will allow to query its latest status<br/>maxLength: 35<br/>minLength: 1<br/>pattern: ^[a-zA-Z0-9&()/\\\\-@,.'*\" ]+$<br/>example: A999999999999",
                        "required": true,
                        "schema": {
                            "maxLength": 35,
                            "minLength": 1,
                            "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiDDIStatus"
                                },
                                "example": {
                                    "referenceId": "38a26ee484344d1d94eadf10c5a4502",
                                    "paymentContainerId": "9da30825-8b75-41fa-8e3e-0d8dfb1239bd",
                                    "statusString": "Completed",
                                    "statusCode": "",
                                    "timestamp": "2021-06-09T08:52:21.519Z",
                                    "valueDate": "2021-06-09",
                                    "reasonInformation": "D13"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "DDI Not found for given reference id",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK,SG"
            }
        },
        "/collections/v2/merchant/qrcode/dynamic/generate": {
            "post": {
                "tags": [
                    "QR Code Collections"
                ],
                "summary": "QR Code Generation",
                "description": "The QR Code Generation API exposes an ability to generate a QR Code for scanning by a merchant's customer for collection events. The request contains all parameters of the QR code, except the merchant name and account details, which are derived from the authenticated identity of the API call (i.e. Client Certificate). An example use case of the QR code is for Bill payment. When a Bill is being generated and sent to a retail customer, a QR code can be created specifically for this Bill, containing the beneficiary, amount and bill reference Id. This is information is captured by the Retail payment mobile application and made available through the Credit/Debit notification APIs, this may be used for real-time reconciliation of bill payment. When invoked, the API returns a QR Code in PNG format, encoded as a Base64 string.  The EMVCo content of the QR Code is also returned in the qrContent field.",
                "operationId": "qRCode_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenApiQRCodeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiQRCode"
                                },
                                "example": {
                                    "qrCodeBase64": "",
                                    "qrContent": "00020101021252040000530384054040.005802HK620901051234526160012hk.com.hkicl6304b891",
                                    "width": 600,
                                    "height": 600
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthorised request",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "Authentication failed",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Resource not found",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "429": {
                        "description": "Default return code for health status, indicating a warning",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "503": {
                        "description": "System dependency is down or undergoing maintenance. Try again later",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "x-markets": "HK"
            }
        },
        "/collections/v2/virtual-account/create": {
            "post": {
                "tags": [
                    "Virtual Accounts"
                ],
                "summary": "Virtual Account (VA) - Create",
                "description": "The Virtual Account (VA) - Create API provides the ability to create virtual accounts that are mapped to single physical account with multiple or single currency and multiple physical accounts with different currencies. Virtual Accounts have Part A identifying an Operating unit (OPU) and part B identifying the supplier.",
                "operationId": "virtualAccountCreate_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenApiVirtualAccountCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiVirtualAccountCreateResponse"
                                },
                                "example": {
                                    "virtualAccountNumber": "CLIENT998877B66",
                                    "status": "PENDING",
                                    "iban": "KZ5590238934023248812"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "errorMessage": "Currently the VAM feature is not supported in your country. Please check with support",
                                    "errorCode": "AER-7XX"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {
                                "example": {}
                            }
                        }
                    }
                },
                "x-markets": "HK, SG, MY, IN, PH, BD, AE"
            }
        },
        "/collections/v2/virtual-account/delete": {
            "post": {
                "tags": [
                    "Virtual Accounts"
                ],
                "summary": "Virtual Account (VA) - Delete",
                "description": "The Virtual Account (VA) - Delete API provides the ability to delete virtual accounts that are mapped to single physical account with multiple or single currency and multiple physical accounts with different currencies. Virtual Accounts have Part A identifying an Operating unit (OPU) and part B identifying the supplier.",
                "operationId": "virtualAccountDelete_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenApiVirtualAccountCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiVirtualAccountCreateResponse"
                                },
                                "example": {
                                    "virtualAccountNumber": "CLIENT998877B66",
                                    "status": "PENDING",
                                    "iban": "KZ5590238934023248812"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "errorMessage": "Currently the VAM feature is not supported in your country. Please check with support",
                                    "errorCode": "AER-7XX"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {
                                "example": {}
                            }
                        }
                    }
                },
                "x-markets": "HK, SG, MY, IN, PH, BD, AE"
            }
        },
        "/collections/v2/virtual-account/status/{clientReferenceId}": {
            "get": {
                "tags": [
                    "Virtual Accounts"
                ],
                "summary": "Virtual Account (VA) - Status Enquiry",
                "description": "The Virtual Account (VA) - Status Enquiry API provides the status of a previously submitted Virtual Account Maintenance (VAM) request.",
                "operationId": "virtualAccountStatus_1",
                "parameters": [
                    {
                        "name": "clientReferenceId",
                        "in": "path",
                        "description": "Client Reference ID to retrieve Virtual Account Maintenance (VAM) request status<br/>maxLength: 50<br/>minLength: 1<br/>example: ABC12345",
                        "required": true,
                        "schema": {
                            "maxLength": 50,
                            "minLength": 1,
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiVirtualAccountStatus"
                                }
                            },
                            "application/json": {
                                "example": {
                                    "virtualAccountNumber": "CLIENT998877B66",
                                    "status": "PENDING",
                                    "statusDescription": null,
                                    "iban": "KZ5590238934023248812"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "errorMessage": "Currently the VAM feature is not supported in your country. Please check with support",
                                    "errorCode": "AER-7XX"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {
                                "example": {}
                            }
                        }
                    }
                },
                "x-markets": "HK, SG, MY, IN, PH, BD, AE"
            }
        },
        "/collections/v2/virtual-account/update": {
            "post": {
                "tags": [
                    "Virtual Accounts"
                ],
                "summary": "Virtual Account (VA) - Update",
                "description": "The Virtual Account (VA)- Update API provides the ability to update virtual account details that are mapped to single physical account with multiple or single currency and multiple physical accounts with different currencies. Virtual Accounts have Part A identifying an Operating unit (OPU) and part B identifying the supplier.",
                "operationId": "virtualAccountUpdate_1",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OpenApiVirtualAccountCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success with data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OpenApiVirtualAccountCreateResponse"
                                },
                                "example": {
                                    "virtualAccountNumber": "CLIENT998877B66",
                                    "status": "PENDING",
                                    "iban": "KZ5590238934023248812"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request. Missing or invalid data",
                        "content": {
                            "application/json": {
                                "example": {
                                    "errorMessage": "Currently the VAM feature is not supported in your country. Please check with support",
                                    "errorCode": "AER-7XX"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error. This indicates an error in the API server",
                        "content": {
                            "application/json": {
                                "example": {}
                            }
                        }
                    }
                },
                "x-markets": "HK, SG, MY, IN, PH, BD, AE"
            }
        }
    },
    "components": {
        "schemas": {
            "OpenApiDirectDebitAuthorizationReport": {
                "required": [
                    "comments",
                    "mandateId",
                    "referenceId",
                    "status",
                    "statusMessage",
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "mandateId": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Mandate ID",
                        "example": "XX9999999"
                    },
                    "referenceId": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique Reference ID specified on DDA Request",
                        "example": "TS76737676763"
                    },
                    "status": {
                        "maxLength": 10,
                        "minLength": 0,
                        "type": "string",
                        "description": "Status of Mandate - Pending, Completed, Rejected",
                        "example": "Pending"
                    },
                    "statusCode": {
                        "maxLength": 10,
                        "minLength": 0,
                        "type": "string",
                        "description": "Rejection Code - only provided if Status is Rejected. For all pending status, it will be empty.",
                        "example": "DTL1044"
                    },
                    "statusMessage": {
                        "maxLength": 100,
                        "minLength": 0,
                        "type": "string",
                        "description": "Status Description if Status is Completed or Pending. Rejection Description if Status is Rejected",
                        "example": "Processing at Payer Bank"
                    },
                    "comments": {
                        "maxItems": 100,
                        "minItems": 0,
                        "type": "array",
                        "description": "Additional Information",
                        "example": "Sent to FPS",
                        "items": {
                            "type": "string"
                        }
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Indicates the date and time of the status change. Use for reconciliation. Timezone is in UTC",
                        "format": "date-time",
                        "example": "2019-01-01T02:29:05.92Z"
                    }
                }
            },
            "OpenAPIDirectDebitAuthorization": {
                "required": [
                    "creditor",
                    "creditorAccount",
                    "creditorAgent",
                    "currencyCode",
                    "debtor",
                    "debtorAccount",
                    "debtorAgent",
                    "debtorReference",
                    "paymentLimit",
                    "referenceId"
                ],
                "type": "object",
                "properties": {
                    "referenceId": {
                        "maxLength": 35,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                        "type": "string",
                        "description": "Unique Reference ID",
                        "example": "A999999999999"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/OpenApiPaymentAccount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/OpenApiPaymentAccount"
                    },
                    "debtorAgent": {
                        "$ref": "#/components/schemas/OpenApiAgent"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/OpenApiAgent"
                    },
                    "creditor": {
                        "$ref": "#/components/schemas/OpenApiBankParty"
                    },
                    "debtor": {
                        "$ref": "#/components/schemas/OpenApiParty"
                    },
                    "paymentLimit": {
                        "$ref": "#/components/schemas/OpenApiPaymentLimit"
                    },
                    "expiryDate": {
                        "type": "string",
                        "description": "DDA Expiry Date. If this field is not provided, mandate will be never expired. Format in YYYY-MM-DD",
                        "format": "date",
                        "example": "2019-10-10"
                    },
                    "effectiveDate": {
                        "type": "string",
                        "description": "DDA Effective Date. Format in YYYY-MM-DD. Default as Present Date",
                        "format": "date",
                        "example": "2018-10-10"
                    },
                    "debtorReference": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Unique Debtor Reference ID (MandateId)",
                        "example": "12341234"
                    },
                    "debtorIdentificationDocumentIds": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string",
                            "description": "Debtor Identification Documents Details. Country ID Card Number, Passport Number, Business Registration Number, Certificate of Incorporation Number and Others",
                            "example": "{ \"hkId\" : \"A1234567\", \"passport\" : \"12345677\", \"CI\" : \"123456\", \"others\": \"123456789\") "
                        }
                    },
                    "currencyCode": {
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "string",
                        "description": "Collection Currency - ISO Currency Code",
                        "example": "HKD"
                    },
                    "type": {
                        "type": "string",
                        "description": "DDA Type",
                        "example": "DDMU (default)",
                        "enum": [
                            "DDMU",
                            "DDMP",
                            "DDMC"
                        ]
                    },
                    "mandateType": {
                        "type": "string",
                        "description": "Mandate Type",
                        "example": "Variable (default)",
                        "enum": [
                            "Fixed",
                            "Variable"
                        ]
                    },
                    "sequenceType": {
                        "type": "string",
                        "description": "Sequence Type",
                        "example": "Recurring (default)",
                        "enum": [
                            "Recurring",
                            "OneOff"
                        ]
                    },
                    "frequencyType": {
                        "type": "string",
                        "description": "Frequency Type",
                        "example": "Monthly (default)",
                        "enum": [
                            "Daily",
                            "Weekly",
                            "Fortnightly",
                            "Monthly",
                            "Quarterly",
                            "Half_Yearly",
                            "Yearly",
                            "IntraDay"
                        ]
                    },
                    "requestInstancesAllowed": {
                        "type": "integer",
                        "description": "Request Instances Allowed",
                        "format": "int32"
                    },
                    "countryCode": {
                        "maxLength": 2,
                        "minLength": 0,
                        "type": "string",
                        "description": "ISO 2-characters country code - Used to identify the country of request origination"
                    }
                }
            },
            "OpenApiAddress": {
                "type": "object",
                "properties": {
                    "line_1": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Address Line 1"
                    },
                    "line_2": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Address Line 2"
                    },
                    "line_3": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Address Line 3"
                    },
                    "city": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "City"
                    },
                    "state": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "State"
                    },
                    "postcode": {
                        "maxLength": 25,
                        "minLength": 0,
                        "type": "string",
                        "description": "Postal Code"
                    },
                    "country": {
                        "maxLength": 45,
                        "minLength": 0,
                        "type": "string",
                        "description": "Country"
                    }
                }
            },
            "OpenApiAgent": {
                "type": "object",
                "properties": {
                    "financialInstitution": {
                        "$ref": "#/components/schemas/OpenApiFinancialInstitution"
                    },
                    "clearingSystemId": {
                        "maxLength": 8,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "type": "string",
                        "description": "Clearing System Branch Identifier"
                    },
                    "clearingSystemCode": {
                        "type": "string",
                        "description": "Clearing System Branch Code"
                    },
                    "branchCode": {
                        "type": "string",
                        "description": "Branch Code"
                    }
                }
            },
            "OpenApiBankParty": {
                "required": [
                    "legalEntityId",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "legalEntityId": {
                        "maxLength": 8,
                        "minLength": 0,
                        "pattern": "^[0-9]+$",
                        "type": "string",
                        "description": "Legal Entity ID / Customer ID<br>Mandatory if Country Code is SG",
                        "example": "11111111"
                    },
                    "name": {
                        "maxLength": 140,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                        "type": "string",
                        "description": "Your Company Name / Creditor Name<br>Mandatory if Country Code is SG",
                        "example": "Client Corp Inc."
                    }
                }
            },
            "OpenApiContact": {
                "type": "object",
                "properties": {
                    "phoneNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Contact Phone Number",
                        "example": "+001-11111111"
                    },
                    "mobileNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Contact Mobile Number",
                        "example": "+001-11111111"
                    },
                    "emailAddress": {
                        "maxLength": 150,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]*$",
                        "type": "string",
                        "description": "Contact Email Address"
                    },
                    "faxNumber": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Contact Fax Number"
                    },
                    "name": {
                        "maxLength": 140,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]*$",
                        "type": "string",
                        "description": "Contact Full Name"
                    },
                    "empty": {
                        "type": "boolean"
                    }
                }
            },
            "OpenApiFinancialInstitution": {
                "required": [
                    "BIC"
                ],
                "type": "object",
                "properties": {
                    "postalAddress": {
                        "$ref": "#/components/schemas/OpenApiAddress"
                    },
                    "branchCode": {
                        "type": "string",
                        "description": "Branch Code"
                    },
                    "name": {
                        "maxLength": 35,
                        "minLength": 0,
                        "type": "string",
                        "description": "Financial Institution Name"
                    },
                    "BIC": {
                        "maxLength": 11,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "type": "string",
                        "description": "Financial Institution, Business Identifier Code<br>Mandatory for SG",
                        "example": "SCBLSGSGXXX"
                    }
                }
            },
            "OpenApiIdentity": {
                "required": [
                    "id",
                    "identityType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 18,
                        "minLength": 0,
                        "type": "string",
                        "description": "Identification Number",
                        "example": "FPS123456"
                    },
                    "identityType": {
                        "maxLength": 12,
                        "minLength": 0,
                        "type": "string",
                        "description": "Identification Type",
                        "example": "FPS"
                    }
                }
            },
            "OpenApiParty": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 140,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                        "type": "string",
                        "description": "Debtor Full Name",
                        "example": "John Doe"
                    },
                    "postalAddress": {
                        "$ref": "#/components/schemas/OpenApiAddress"
                    },
                    "contact": {
                        "$ref": "#/components/schemas/OpenApiContact"
                    },
                    "identity": {
                        "$ref": "#/components/schemas/OpenApiIdentity"
                    }
                }
            },
            "OpenApiPaymentAccount": {
                "required": [
                    "id",
                    "identifierType"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "maxLength": 35,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9]+$",
                        "type": "string",
                        "description": "Account Number with no bank code and branch code. It should not be a Credit Card Account or Joint Account. Creditor Account Number and Debtor Account Number are mandatory for SG.",
                        "example": "11111111111111"
                    },
                    "identifierType": {
                        "type": "string",
                        "description": "Account Identifier Type, defaulted as BBAN",
                        "example": "IBAN",
                        "enum": [
                            "BBAN",
                            "IBAN",
                            "Other"
                        ]
                    },
                    "accountType": {
                        "type": "string",
                        "description": "Account Type",
                        "example": "CASH",
                        "enum": [
                            "CACC",
                            "CASH",
                            "CHAR",
                            "CISH",
                            "COMM",
                            "CPAC",
                            "LLSV",
                            "LOAN",
                            "MGLD",
                            "MOMA",
                            "NREX",
                            "ODFT",
                            "ONDP",
                            "OTHR",
                            "SACC",
                            "SLRY",
                            "SVGS",
                            "TAXE",
                            "TRAN",
                            "TRAS"
                        ]
                    }
                }
            },
            "OpenApiPaymentLimit": {
                "required": [
                    "maximumBatchAmount",
                    "maximumTransactionAmount",
                    "periodicity"
                ],
                "type": "object",
                "properties": {
                    "maximumTransactionAmount": {
                        "type": "number",
                        "description": "Maximum Transaction Amount. 0 or less are accepted amount in API however the eDDA will get rejected by Core banking system. Format in 9999999999999.99. Default as 9999999999999.99",
                        "example": 100000
                    },
                    "maximumBatchAmount": {
                        "type": "number",
                        "description": "Maximum Batch Amount. Not used, to be made optional",
                        "example": 1000000
                    },
                    "periodicity": {
                        "type": "string",
                        "description": "Payment Limit Periodicity Type - Adhoc, Daily(default), Weekly,Fortnightly, Monthly, Quarterly, Half_Yearly, IntraDay, Yearly",
                        "example": "Adhoc",
                        "enum": [
                            "Adhoc",
                            "Daily",
                            "Weekly",
                            "Fortnightly",
                            "Monthly",
                            "Quarterly",
                            "Half_Yearly",
                            "Yearly",
                            "IntraDay"
                        ]
                    }
                }
            },
            "OpenApiDDIStatus": {
                "required": [
                    "paymentContainerId",
                    "referenceId",
                    "statusString",
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "paymentContainerId": {
                        "maxLength": 36,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference assigned by the bank",
                        "example": "111f111-111f-1111-9cf4-111ecd111dd1"
                    },
                    "statusString": {
                        "maxLength": 10,
                        "minLength": 1,
                        "type": "string",
                        "description": "Status Description. Expected values are Pending, Completed, Rejected",
                        "example": "Completed"
                    },
                    "statusCode": {
                        "maxLength": 10,
                        "minLength": 0,
                        "type": "string",
                        "description": "Status Code assigned by the bank",
                        "example": "DTL1063"
                    },
                    "timestamp": {
                        "type": "string",
                        "description": "Timestamp of status update",
                        "format": "date-time",
                        "example": "2018-12-21T06:57:10.17Z"
                    },
                    "reasonInformation": {
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string",
                        "description": "Status Description if Status is Completed or Pending, Rejection Description if Status is Rejected"
                    },
                    "referenceId": {
                        "maxLength": 35,
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique Reference ID",
                        "example": "A999999999999"
                    },
                    "valueDate": {
                        "type": "string",
                        "description": "Credit Date for Collection is captured here (based on the core banking application server's location)",
                        "format": "date"
                    }
                }
            },
            "OpenAPIDirectDebitInstruction": {
                "required": [
                    "debtor",
                    "instructedAmount",
                    "mandateId",
                    "referenceId"
                ],
                "type": "object",
                "properties": {
                    "referenceId": {
                        "maxLength": 35,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9&()/\\-@,.'*\" ]+$",
                        "type": "string",
                        "description": "Unique Reference ID",
                        "example": "A999999999999"
                    },
                    "debtorAccount": {
                        "$ref": "#/components/schemas/OpenApiPaymentAccount"
                    },
                    "creditorAccount": {
                        "$ref": "#/components/schemas/OpenApiPaymentAccount"
                    },
                    "instructedAmount": {
                        "$ref": "#/components/schemas/OpenApiDenominatedAmount"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "Purpose <table> <tr> <th>Country</th> <th>Purpose Code</th> </tr> <tr> <td>HK</td> <td>BKDF,BKFE,BKFM,BKIP,BKPP,CBLK,CDCB,CDCD,CDCS,CDDP,CDOC,CDQC,ETUP,FCOL,MTUP,ACCT,<br> CASH,COLL,CSDB,DEPT,INTC,LIMA,NETT,BFWD,CCIR,CCPC,CCPM,CCSM,CRDS,CRPR,CRSP,CRTL,<br> EQPT,EQUS,EXPT,EXTD,FIXI,FWBC,FWCC,FWSB,FWSC,MARG,MBSB,MBSC,MGCC,MGSC,OCCC,OPBC,<br> OPCC,OPSB,OPSC,OPTN,OTCD,REPO,RPBC,RPCC,RPSB,RPSC,RVPO,SBSC,SCIE,SCIR,SCRP,SHBC,<br> SHCC,SHSL,SLEB,SLOA,SWBC,SWCC,SWPT,SWSB,SWSC,TBAS,TBBC,TBCC,TRCP,AGRT,AREN,BEXP,<br> BOCE,COMC,CPYR,GDDS,GDSV,GSCB,LICF,MP2B,POPE,ROYA,SCVE,SUBS,SUPP,TRAD,CHAR,COMT,<br> MP2P,ECPG,ECPR,ECPU,EPAY,CLPR,COMP,DBTC,GOVI,HLRP,INPC,INSU,INTE,LBRI,LIFI,LOAN,<br> LOAR,PENO,PPTI,RELG,RINP,TRFD,FORW,FXNT,ADMG,ADVA,BCDM,BCFG,BLDM,BNET,CBFF,CBFR,<br> CCRD,CDBL,CFEE,CGDD,CORT,COST,CPKC,DCRD,DSMT,DVPM,EDUC,FACT,FAND,FCPM,FEES,GOVT,<br> ICCP,IDCP,IHRP,INSM,IVPT,MCDM,MCFG,MSVC,NOWS,OCDM,OCFG,OFEE,OTHR,PADD,PTSP,RCKE,<br> RCPT,REBT,REFU,RENT,REOD,RIMB,RPNT,RRBN,RVPM,SLPI,SPLT,STDY,TBAN,TBIL,TCSC,TELI,<br> TMPG,TPRI,TPRP,TRNC,TRNC,TRVC,WEBI,ANNI,CAFI,CFDI,CMDT,DERI,DIVD,FREX,HEDG,INVS,<br> PRME,SAVG,SECU,SEPI,TREA,UNIT,FNET,FUTR,ANTS,CVCF,DMEQ,DNTS,HLTC,HLTI,HSPC,ICRF,<br> LTCF,MAFC,MDCS,VIEW,CDEP,SWFP,SWPP,SWRS,SWUF,ADCS,AEMP,ALLW,ALMY,BBSC,BECH,BENE,<br> BONU,CCHD,COMM,CSLP,GFRP,GVEA,GVEB,GVEC,GVED,GWLT,HREC,PAYR,PEFC,PENS,PRCP,RHBS,<br> SALA,SSBE,LBIN,LCOL,LFEE,LMEQ,LMFI,LMRK,LREB,LREV,LSFL,ESTX,FWLV,GSTX,HSTX,INTX,<br> NITX,PTXP,RDTX,TAXS,VATX,WHLD,TAXR,B112,BR12,TLRF,TLRR,AIRB,BUSB,FERB,RLWY,TRPT,<br> CBTV,ELEC,ENRG,GASB,NWCH,NWCM,OTLC,PHON,UBIL,WTER,DDBILL,DDTOPU,DDECOM,DDOTHR,<br> CXSALA,CXMRCH,CXBSNS,CXPSNL</td> </tr> <tr> <td>SG</td> <td>BEXP,CBTV,CCRD,CHAR,COLL,COMM,CPKC,CSDB,DCRD,DIVD,DNTS,EDUC,FCPM,FWLV,GDDS,GOVI,<br> GSTX,HSPC,IHRP,INSU,INTC,INTE,INVS,IVPT,LOAN,MDCS,NITX,OTHR,PHON,PTXP,RDTX,REBT,<br> REFU,RENT,STDY,SUPP,TAXS,TBIL,TCSC,TRAD,TREA,TRPT,UBIL,WHLD </td> </tr> </table>",
                        "example": "OFEE",
                        "enum": [
                            "BKDF",
                            "BKFE",
                            "BKFM",
                            "BKIP",
                            "BKPP",
                            "CBLK",
                            "CDCB",
                            "CDCD",
                            "CDCS",
                            "CDDP",
                            "CDOC",
                            "CDQC",
                            "ETUP",
                            "FCOL",
                            "MTUP",
                            "ACCT",
                            "CASH",
                            "COLL",
                            "CSDB",
                            "DEPT",
                            "INTC",
                            "LIMA",
                            "NETT",
                            "BFWD",
                            "CCIR",
                            "CCPC",
                            "CCPM",
                            "CCSM",
                            "CRDS",
                            "CRPR",
                            "CRSP",
                            "CRTL",
                            "EQPT",
                            "EQUS",
                            "EXPT",
                            "EXTD",
                            "FIXI",
                            "FWBC",
                            "FWCC",
                            "FWSB",
                            "FWSC",
                            "MARG",
                            "MBSB",
                            "MBSC",
                            "MGCC",
                            "MGSC",
                            "OCCC",
                            "OPBC",
                            "OPCC",
                            "OPSB",
                            "OPSC",
                            "OPTN",
                            "OTCD",
                            "REPO",
                            "RPBC",
                            "RPCC",
                            "RPSB",
                            "RPSC",
                            "RVPO",
                            "SBSC",
                            "SCIE",
                            "SCIR",
                            "SCRP",
                            "SHBC",
                            "SHCC",
                            "SHSL",
                            "SLEB",
                            "SLOA",
                            "SWBC",
                            "SWCC",
                            "SWPT",
                            "SWSB",
                            "SWSC",
                            "TBAS",
                            "TBBC",
                            "TBCC",
                            "TRCP",
                            "AGRT",
                            "AREN",
                            "BEXP",
                            "BOCE",
                            "COMC",
                            "CPYR",
                            "GDDS",
                            "GDSV",
                            "GSCB",
                            "LICF",
                            "MP2B",
                            "POPE",
                            "ROYA",
                            "SCVE",
                            "SUBS",
                            "SUPP",
                            "TRAD",
                            "CHAR",
                            "COMT",
                            "MP2P",
                            "ECPG",
                            "ECPR",
                            "ECPU",
                            "EPAY",
                            "CLPR",
                            "COMP",
                            "DBTC",
                            "GOVI",
                            "HLRP",
                            "INPC",
                            "INSU",
                            "INTE",
                            "LBRI",
                            "LIFI",
                            "LOAN",
                            "LOAR",
                            "PENO",
                            "PPTI",
                            "RELG",
                            "RINP",
                            "TRFD",
                            "FORW",
                            "FXNT",
                            "ADMG",
                            "ADVA",
                            "BCDM",
                            "BCFG",
                            "BLDM",
                            "BNET",
                            "CBFF",
                            "CBFR",
                            "CCRD",
                            "CDBL",
                            "CFEE",
                            "CGDD",
                            "CORT",
                            "COST",
                            "CPKC",
                            "DCRD",
                            "DSMT",
                            "DVPM",
                            "EDUC",
                            "FACT",
                            "FAND",
                            "FCPM",
                            "FEES",
                            "GOVT",
                            "ICCP",
                            "IDCP",
                            "IHRP",
                            "INSM",
                            "IVPT",
                            "MCDM",
                            "MCFG",
                            "MSVC",
                            "NOWS",
                            "OCDM",
                            "OCFG",
                            "OFEE",
                            "OTHR",
                            "PADD",
                            "PTSP",
                            "RCKE",
                            "RCPT",
                            "REBT",
                            "REFU",
                            "RENT",
                            "REOD",
                            "RIMB",
                            "RPNT",
                            "RRBN",
                            "RVPM",
                            "SLPI",
                            "SPLT",
                            "STDY",
                            "TBAN",
                            "TBIL",
                            "TCSC",
                            "TELI",
                            "TMPG",
                            "TPRI",
                            "TPRP",
                            "TRNC",
                            "TRVC",
                            "WEBI",
                            "ANNI",
                            "CAFI",
                            "CFDI",
                            "CMDT",
                            "DERI",
                            "DIVD",
                            "FREX",
                            "HEDG",
                            "INVS",
                            "PRME",
                            "SAVG",
                            "SECU",
                            "SEPI",
                            "TREA",
                            "UNIT",
                            "FNET",
                            "FUTR",
                            "ANTS",
                            "CVCF",
                            "DMEQ",
                            "DNTS",
                            "HLTC",
                            "HLTI",
                            "HSPC",
                            "ICRF",
                            "LTCF",
                            "MAFC",
                            "MDCS",
                            "VIEW",
                            "CDEP",
                            "SWFP",
                            "SWPP",
                            "SWRS",
                            "SWUF",
                            "ADCS",
                            "AEMP",
                            "ALLW",
                            "ALMY",
                            "BBSC",
                            "BECH",
                            "BENE",
                            "BONU",
                            "CCHD",
                            "COMM",
                            "CSLP",
                            "GFRP",
                            "GVEA",
                            "GVEB",
                            "GVEC",
                            "GVED",
                            "GWLT",
                            "HREC",
                            "PAYR",
                            "PEFC",
                            "PENS",
                            "PRCP",
                            "RHBS",
                            "SALA",
                            "SSBE",
                            "LBIN",
                            "LCOL",
                            "LFEE",
                            "LMEQ",
                            "LMFI",
                            "LMRK",
                            "LREB",
                            "LREV",
                            "LSFL",
                            "ESTX",
                            "FWLV",
                            "GSTX",
                            "HSTX",
                            "INTX",
                            "NITX",
                            "PTXP",
                            "RDTX",
                            "TAXS",
                            "VATX",
                            "WHLD",
                            "TAXR",
                            "B112",
                            "BR12",
                            "TLRF",
                            "TLRR",
                            "AIRB",
                            "BUSB",
                            "FERB",
                            "RLWY",
                            "TRPT",
                            "CBTV",
                            "ELEC",
                            "ENRG",
                            "GASB",
                            "NWCH",
                            "NWCM",
                            "OTLC",
                            "PHON",
                            "UBIL",
                            "WTER",
                            "DDBILL",
                            "DDTOPU",
                            "DDECOM",
                            "DDOTHR",
                            "CXSALA",
                            "CXMRCH",
                            "CXBSNS",
                            "CXPSNL"
                        ]
                    },
                    "chargerBearer": {
                        "type": "string",
                        "description": "Charger Bearer",
                        "example": "DEBT (default)",
                        "enum": [
                            "DEBT",
                            "CRED",
                            "SHAR",
                            "SLEV"
                        ]
                    },
                    "mandateId": {
                        "maxLength": 35,
                        "minLength": 1,
                        "type": "string",
                        "description": "Mandate ID",
                        "example": "XX9999999"
                    },
                    "creditor": {
                        "$ref": "#/components/schemas/OpenApiBankParty"
                    },
                    "debtor": {
                        "$ref": "#/components/schemas/OpenApiParty"
                    },
                    "creditorAgent": {
                        "$ref": "#/components/schemas/OpenApiAgent"
                    },
                    "debtorAgent": {
                        "$ref": "#/components/schemas/OpenApiAgent"
                    },
                    "countryCode": {
                        "maxLength": 2,
                        "minLength": 0,
                        "type": "string",
                        "description": "ISO 2-characters country code - Used to identify the country of request origination<br>Mandatory for SG, if blank default as HK"
                    },
                    "valueDate": {
                        "type": "string",
                        "description": "DDI Value Date",
                        "format": "date"
                    }
                }
            },
            "OpenApiDenominatedAmount": {
                "required": [
                    "amount",
                    "currencyCode"
                ],
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "string",
                        "description": "ISO Currency Code. Defaulted as HKD if Country Code is HK or blank. If Country Code is SG, mandatory to indicate as SGD.",
                        "example": "SGD"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Amount in local currency units. Format in 9999999999999.99",
                        "example": 12000.12
                    }
                }
            },
            "OpenApiQRCode": {
                "type": "object",
                "properties": {
                    "qrCodeBase64": {
                        "type": "string",
                        "description": "QR Code Base64 Representation"
                    },
                    "qrContent": {
                        "type": "string",
                        "description": "QR Code Content"
                    },
                    "width": {
                        "type": "integer",
                        "description": "QR Code Width",
                        "format": "int32"
                    },
                    "height": {
                        "type": "integer",
                        "description": "QR Code Height",
                        "format": "int32"
                    }
                }
            },
            "DenominatedAmount": {
                "required": [
                    "amount",
                    "currencyCode"
                ],
                "type": "object",
                "properties": {
                    "currencyCode": {
                        "maxLength": 3,
                        "minLength": 0,
                        "type": "string",
                        "description": "ISO Currency Code. Defaulted as local currency code",
                        "example": "EUR"
                    },
                    "amount": {
                        "type": "number",
                        "description": "Amount in local currency units. Format in 9999999999999.99",
                        "example": 12000.12
                    }
                }
            },
            "OpenApiQRCodeRequest": {
                "type": "object",
                "properties": {
                    "logoImageBase64": {
                        "type": "string"
                    },
                    "amount": {
                        "$ref": "#/components/schemas/DenominatedAmount"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country Code"
                    },
                    "merchantCity": {
                        "type": "string",
                        "description": "Merchant City"
                    },
                    "billNumber": {
                        "type": "string",
                        "description": "Bill Number"
                    },
                    "referenceLabel": {
                        "type": "string",
                        "description": "Reference Label"
                    },
                    "storeLabel": {
                        "type": "string",
                        "description": "Store Label"
                    },
                    "merchantName": {
                        "type": "string",
                        "description": "Merchant Name"
                    },
                    "proxyType": {
                        "type": "string",
                        "description": "Proxy Type",
                        "example": "Mobile",
                        "enum": [
                            "FpsId",
                            "Mobile",
                            "NRIC",
                            "UEN",
                            "EmailAddress"
                        ]
                    },
                    "proxyValue": {
                        "type": "string",
                        "description": "Proxy Value"
                    },
                    "expiryDateTime": {
                        "type": "string",
                        "description": "Expiry Date and Time",
                        "format": "date-time"
                    },
                    "imageResolution": {
                        "type": "string",
                        "description": "Image resolution (VeryHigh, High, Normal), default is Normal.  High resolution should generally be used for use cases where the image will be printed.  Normal resolution is optimised for quality and transfer size for web/mobile based delivery.",
                        "enum": [
                            "VeryHigh",
                            "High",
                            "Normal",
                            "HighGreyscale",
                            "NormalGreyscale"
                        ]
                    }
                }
            },
            "OpenApiVirtualAccountCreateResponse": {
                "required": [
                    "status",
                    "virtualAccountNumber"
                ],
                "type": "object",
                "properties": {
                    "virtualAccountNumber": {
                        "maxLength": 34,
                        "minLength": 1,
                        "type": "string",
                        "description": "Final Virtual Account Number - (Part A + Part B)",
                        "example": "CLIENT998877B66"
                    },
                    "status": {
                        "maxLength": 7,
                        "minLength": 1,
                        "type": "string",
                        "description": "Status of the VAM request",
                        "example": "PENDING",
                        "enum": [
                            "SUCCESS",
                            "PENDING",
                            "FAILURE"
                        ]
                    },
                    "iban": {
                        "maxLength": 34,
                        "minLength": 0,
                        "type": "string",
                        "description": "International Bank Account Number (IBAN), it is available only for the country that is enabled for IBAN",
                        "example": "KZ5590238934023248812"
                    }
                }
            },
            "OpenApiVirtualAccountStatus": {
                "required": [
                    "status",
                    "virtualAccountNumber"
                ],
                "type": "object",
                "properties": {
                    "virtualAccountNumber": {
                        "maxLength": 34,
                        "minLength": 1,
                        "type": "string",
                        "description": "Final Virtual Account Number - (Part A + Part B)",
                        "example": "CLIENT998877B66"
                    },
                    "status": {
                        "maxLength": 7,
                        "minLength": 1,
                        "type": "string",
                        "description": "Status of the VAM request",
                        "example": "PENDING",
                        "enum": [
                            "SUCCESS",
                            "PENDING",
                            "FAILURE"
                        ]
                    },
                    "statusDescription": {
                        "type": "string",
                        "description": "Status description of the VAM request",
                        "example": "VAM Record already exist"
                    },
                    "iban": {
                        "maxLength": 34,
                        "minLength": 0,
                        "type": "string",
                        "description": "International Bank Account Number (IBAN), it is available only for the country that is enabled for IBAN",
                        "example": "KZ5590238934023248812"
                    }
                }
            },
            "OpenApiVirtualAccountCreateRequest": {
                "required": [
                    "clientId",
                    "clientReferenceId",
                    "countryCode",
                    "payorName",
                    "virtualAccountNumber"
                ],
                "type": "object",
                "properties": {
                    "clientReferenceId": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference Number of instruction",
                        "example": "ABC12345"
                    },
                    "clientId": {
                        "maxLength": 15,
                        "minLength": 1,
                        "type": "string",
                        "description": "Your VA ID - Part A",
                        "example": "CLIENTID"
                    },
                    "virtualAccountNumber": {
                        "maxLength": 34,
                        "minLength": 1,
                        "type": "string",
                        "description": "Final Virtual Account Number - (Part A + Part B)",
                        "example": "CLIENTID88991A1"
                    },
                    "payorName": {
                        "maxLength": 35,
                        "minLength": 1,
                        "pattern": "^[a-zA-Z0-9 ]*$",
                        "type": "string",
                        "description": "Payor Name",
                        "example": "John Doe"
                    },
                    "payorNameLocal": {
                        "maxLength": 140,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9 \\p{L}]*$",
                        "type": "string",
                        "description": "Payor Name specified in Local Language",
                        "example": "毛东"
                    },
                    "payorReference": {
                        "maxLength": 35,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9]*$",
                        "type": "string",
                        "description": "A Unique reference number provided to a payor/receiver like Customer ID, etc.",
                        "example": "CLIENTID1XOAV"
                    },
                    "paymentReference": {
                        "maxLength": 100,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9]*$",
                        "type": "string",
                        "description": "A Unique reference number provided to corporate payor's payment for easy reconciliation of payments.",
                        "example": "TRX1234"
                    },
                    "emailId": {
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^[a-zA-Z0-9@.,_,-]*$",
                        "type": "string",
                        "description": "Sender/Receiver email address. In case of Collections, payors email address. In case of Payments, receiver's email address.",
                        "example": "john_doe@example.com"
                    },
                    "mobileNo": {
                        "maxLength": 256,
                        "minLength": 0,
                        "pattern": "^[0-9+]*$",
                        "type": "string",
                        "description": "Sender/Receiver mobile number. In case of Collections, payor's mobile number. In case of Payments, receiver's mobile number.",
                        "example": "990011100"
                    },
                    "productIndicator": {
                        "type": "string",
                        "description": "Product Indicator<br>If blank, Bank will default this request as VAC (Virtual Account for Collections)",
                        "example": "VAP",
                        "enum": [
                            "VAP",
                            ""
                        ]
                    },
                    "countryCode": {
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string",
                        "description": "ISO 2-characters country code  - Used to identify the country of request origination",
                        "example": "SG"
                    }
                }
            }
        }
    }
}