{
  "openapi": "3.0.0",
  "info": {
    "title": "Consumer Cheque APIs Specifications",
    "version": "1.0.0",
    "description": "## Introduction\nThere are 5 API services in this group for Consumer Cheque APIs. <br/> 1. Cheque to retrieve cheque details<br/> 2. Create Stop cheque<br/> 3. Create Cheque Book Request to create cheque book for applicant<br/> 4. Enquiry Cheque Book Request to retrieve applicant cheque book details<br/> 5. Update Cheque Book Request to update applicant cheque book details<br/>\n\n## Encryption and Signing\nEncryption and Signing uses JSON Web Tokens (JWT), an open industry standard <a href=\"https://tools.ietf.org/html/rfc7519\">RFC7519</a> method to represent claims securely across two parties.\n### Algorithms\nSCB provides support for the below-mentioned algorithms, which are specified in the JOSE Header, as per <a href=\"https://tools.ietf.org/html/rfc7515\">JSON Web Signature</a> (JWS) and <a href=\"https://tools.ietf.org/html/rfc7516#section-4.1.12\">JSON Web Encryption</a> (JWE) Standards.\n <table>\n  <thead>\n    <tr>\n      <th width='25%'>Standard</th>\n      <th width='25%'>Algorithm</th>\n      <th width='70%'>JOSE Header</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>JSON Web Signature (JWS)</td>\n      <td>ES256</td>\n      <td>\n        kid: (key id)\n        cty: JWS\n        alg: ES256\n      </td>\n    </tr>\n    <tr>\n      <td>JSON Web Encryption (JWE)</td>\n      <td>RSA-OAEP-256 (Asymmetric)</td>\n      <td>\n          kid: (key id)\n          cty: JWT\n          alg: RSA-OAEP-256\n      </td>\n    </tr>\n    </tbody>\n</table>\n\n<hr/>\n\n## Guide for JWE and JWS\nAs per SCB API Security standards, SCB uses Compact Serialization for its <a href=\"https://tools.ietf.org/html/rfc7515#section-7.1\">JWS</a>/<a href=\"https://tools.ietf.org/html/rfc7516#section-3.1\">JWE</a> representation. The content to be sent to the client <b>is first signed folLowing JWS specifications</b> and <b>then encrypted and sent as a JWE to the client</b>. Specifics for creating each component are as shown beLow:\n### JSON Web Signature\nThe folLowing describes the structure of our JWS.\n\n**Message** : Content to be sent to client\n\n**JWS Payload** : BASE64URL-ENCODE(Message)\n\n**Signature** : ASCII(BASE64URL-ENCODE(UTF8(JOSE Header))‘.’BASE64URL-ENCODE(JWS Payload))\n\n**Structure** : BASE64URL(UTF8(JOSE Header))‘.’BASE64URL(JWS Payload)‘.’BASE64URL(JWS Signature)\n<hr/>\n\n### JSON Web Encryption\nThe folLowing describes the structure of our JWE. The payload in our JWE is the JWS we have created in the steps above. The JOSE header of JWE contains both symmetric and asymmetric encryptions. Symmetric encryption to encrypt the payload, and assymetric encryption to encrypt the symmetric key. The assymetric keypair belongs to the client who will be receiving the JWE.\n\n**JWE Payload** : JWS Signature (from above)\n\n**JWE Ciphertext** : *ENCRYPT-SYMMETRIC*(JWE Payload)\n\n**JWE Encrypted Key** : *ENCRYPT-ASYMMETRIC*(Symmetric Key) - using client's public key\n\n**Structure** : BASE64URL-ENCODE(UTF8(JWE Header))‘.’BASE64URL-ENCODE(JWE Encrypted Key)‘.’BASE64URL-ENCODE(JWE Initialization Vector)‘.’BASE64URL-ENCODE(JWE Ciphertext)‘.’BASE64URL-ENCODE(JWE Authentication Tag)\n\n## API Response Codes\n\n\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='5%'>Response Code</th>\n        <th width='40%'>Response Message</th>\n        <th width='10%'>HTTP status</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td>E001</td>\n        <td>Field is mandatory</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E002</td>\n        <td>Field value not in valid range</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E003</td>\n        <td>Invalid Format</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E004</td>\n        <td>Contains invalid characters</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E005</td>\n        <td>Resource not found</td>\n        <td>404</td>\n      </tr>\n      <tr>\n        <td>E006</td>\n        <td>No unique resource found</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E100</td>\n        <td>Unable to decrypt</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E101</td>\n        <td>Unable to verify signature</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E102</td>\n        <td>Unable to decrypt or verify signature</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E103</td>\n        <td>Unable to encrypt</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E104</td>\n        <td>Unable to sign</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E105</td>\n        <td>Unable to encrypt or sign</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E110</td>\n        <td>Invalid MTLS Cert</td>\n        <td>400</td>\n      </tr>\n      <tr>\n        <td>E111</td>\n        <td>Invalid Token Error</td>\n        <td>401</td>\n      </tr>\n      <tr>\n        <td>E112</td>\n        <td>Forbidden</td>\n        <td>403</td>\n      </tr>\n      <tr>\n        <td>E200</td>\n        <td>Downstream System Error</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E201</td>\n        <td>Internal API Gateway Error</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E202</td>\n        <td>Timeout Error</td>\n        <td>500</td>\n      </tr>\n      <tr>\n        <td>E300</td>\n        <td>Modify request as message is too large</td>\n        <td>413</td>\n      </tr>\n      <tr>\n        <td>E999</td>\n        <td>Unexpected error occurred</td>\n        <td>500</td>\n      </tr>\n    <tbody>\n  </table>\n"
  },
  "servers": [
    {
      "url": "https://test-api.sc.com",
      "description": "Test Environment"
    },
    {
      "url": "https://api.sc.com",
      "description": "Production Environment"
    }
  ],
  "tags": [
    {
      "name": "Cheque APIs",
      "description": "There are 5 APIs in this group for Cheque Enquiry APIs",
      "x-subcategory": "Consumer Cheque APIs"
    }
  ],
  "paths": {
    "/consumer/{version}/cheques/cheque-details": {
      "post": {
        "tags": [
          "Cheque APIs"
        ],
        "description": "Retrieves the cheque details",
        "summary": "Retrieve Cheque Details",
        "parameters": [
          {
            "name": "Transaction-Id",
            "in": "header",
            "description": "Unique transaction reference identifier for the API request, for tracking purposes",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            },
            "example": "6bc1371d-f47d-46c5-d769-e1592589c78d"
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "description": "IP address which the request originated from, segregated by commas. \\<user ip>, \\<server ip> etc",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "example": "10.123.123.123, 10.123.45.67"
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Indicate the specific Market or Country for which this operation is performed. Value should be a 2-char ISO-3166 country code.",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IN"
              ]
            },
            "example": "IN"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "enum": [
                "v1"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-cheque-details-request"
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/encrypted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieves cheque details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-cheque-details-response"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/encrypted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Errors can be like malformed request syntax, invalid request message parameters etc. Refer to response message for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-bad-request"
                }
              }
            }
          },
          "403": {
            "description": "Certificate Mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-certificate-mismatch"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-notfound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server / Unexpected Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-unexpected"
                }
              }
            }
          }
        },
        "x-markets": "IN"
      }
    },
    "/consumer/{version}/cheques/cheque-stop": {
      "post": {
        "tags": [
          "Cheque APIs"
        ],
        "description": "Stop cheque",
        "summary": "Stop cheque",
        "parameters": [
          {
            "name": "Transaction-Id",
            "in": "header",
            "description": "Unique transaction reference identifier for the API request, for tracking purposes",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            },
            "example": "6bc1371d-f47d-46c5-d769-e1592589c78d"
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "description": "IP address which the request originated from, segregated by commas. \\<user ip>, \\<server ip> etc",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "example": "10.123.123.123, 10.123.45.67"
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Indicate the specific Market or Country for which this operation is performed. Value should be a 2-char ISO-3166 country code.",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IN"
              ]
            },
            "example": "IN"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "enum": [
                "v1"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/account-cheque-stop-request-1"
                  },
                  {
                    "$ref": "#/components/schemas/account-cheque-stop-request-2"
                  },
                  {
                    "$ref": "#/components/schemas/account-cheque-stop-request-3"
                  }
                ]
              }
            },
            "text/plain": {
              "schema": {
                "$ref": "#/components/schemas/encrypted"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Retrieves Stop cheque",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/account-cheque-stop-response-1"
                    },
                    {
                      "$ref": "#/components/schemas/account-cheque-stop-response-2"
                    },
                    {
                      "$ref": "#/components/schemas/account-cheque-stop-response-3"
                    }
                  ]
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/encrypted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Errors can be like malformed request syntax, invalid request message parameters etc. Refer to response message for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-bad-request"
                }
              }
            }
          },
          "403": {
            "description": "Certificate Mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-certificate-mismatch"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-notfound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server / Unexpected Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-unexpected"
                }
              }
            }
          }
        },
        "x-markets": "IN"
      }
    },
    "/retail/{version}/cheques/create-cheque-book": {
      "post": {
        "tags": [
          "Cheque APIs"
        ],
        "description": "Creates the cheque book request of an applicant",
        "summary": "Create Cheque Book request",
        "parameters": [
          {
            "name": "Transaction-Id",
            "in": "header",
            "description": "Unique transaction reference identifier for the API request, for tracking purposes",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            },
            "example": "6bc1371d-f47d-46c5-d769-e1592589c78d"
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "description": "IP address which the request originated from, segregated by commas. \\<user ip>, \\<server ip> etc",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "example": "10.123.123.123, 10.123.45.67"
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Indicate the specific Market or Country for which this operation is performed. Value should be a 2-char ISO-3166 country code.",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IN"
              ]
            },
            "example": "IN"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "enum": [
                "v1"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-create-cheque-book-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created cheque book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-create-cheque-book-response"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/encrypted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Errors can be like malformed request syntax, invalid request message parameters etc. Refer to response message for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-bad-request"
                }
              }
            }
          },
          "403": {
            "description": "Certificate Mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-certificate-mismatch"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-notfound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server / Unexpected Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-unexpected"
                }
              }
            }
          }
        },
        "x-markets": "IN"
      }
    },
    "/retail/{version}/cheques/enquiry-cheque-book": {
      "get": {
        "tags": [
          "Cheque APIs"
        ],
        "description": "Retrieves the cheque book details of an applicant",
        "summary": "Cheque Book Request Enquiry",
        "parameters": [
          {
            "name": "Transaction-Id",
            "in": "header",
            "description": "Unique transaction reference identifier for the API request, for tracking purposes",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            },
            "example": "6bc1371d-f47d-46c5-d769-e1592589c78d"
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "description": "IP address which the request originated from, segregated by commas. \\<user ip>, \\<server ip> etc",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "example": "10.123.123.123, 10.123.45.67"
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Indicate the specific Market or Country for which this operation is performed. Value should be a 2-char ISO-3166 country code.",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IN"
              ]
            },
            "example": "IN"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "enum": [
                "v1"
              ]
            }
          },
          {
            "name": "request-id",
            "in": "query",
            "description": "Indicates the unique Request Id generated by the system for every request for Cheque Book. Refers to the Request Id that is used to identify Cheque Book request details. This Request Id is displayed by the system based on the Account Number entered.",
            "example": "01S1168142E",
            "required": false,
            "schema": {
              "type": "string",
              "maxLength": 13
            }
          },
          {
            "name": "currency-code",
            "in": "query",
            "description": "Currency code of the account",
            "required": true,
            "example": "INR",
            "schema": {
              "type": "string",
              "minLength": 3,
              "maxLength": 3,
              "enum": [
                "INR"
              ]
            }
          },
          {
            "name": "casa-number",
            "in": "query",
            "description": "Casa number of the account",
            "example": 11222955201,
            "required": true,
            "schema": {
              "type": "string",
              "minLength": 1,
              "maxLength": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves cheque book",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-enquiry-cheque-book-response"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/encrypted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Errors can be like malformed request syntax, invalid request message parameters etc. Refer to response message for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-bad-request"
                }
              }
            }
          },
          "403": {
            "description": "Certificate Mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-certificate-mismatch"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-notfound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server / Unexpected Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-unexpected"
                }
              }
            }
          }
        },
        "x-markets": "IN"
      }
    },
    "/retail/{version}/cheques/update-cheque-book": {
      "patch": {
        "tags": [
          "Cheque APIs"
        ],
        "description": "Updates the cheque book details for a customer based on the details provided.",
        "summary": "Update Cheque Book request",
        "parameters": [
          {
            "name": "Transaction-Id",
            "in": "header",
            "description": "Unique transaction reference identifier for the API request, for tracking purposes",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 36
            },
            "example": "6bc1371d-f47d-46c5-d769-e1592589c78d"
          },
          {
            "name": "X-Forwarded-For",
            "in": "header",
            "description": "IP address which the request originated from, segregated by commas. \\<user ip>, \\<server ip> etc",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "maxLength": 50
            },
            "example": "10.123.123.123, 10.123.45.67"
          },
          {
            "name": "X-Market",
            "in": "header",
            "description": "Indicate the specific Market or Country for which this operation is performed. Value should be a 2-char ISO-3166 country code.",
            "style": "simple",
            "explode": true,
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "IN"
              ]
            },
            "example": "IN"
          },
          {
            "name": "version",
            "in": "path",
            "description": "version of the API",
            "required": true,
            "schema": {
              "type": "string",
              "default": "v1",
              "enum": [
                "v1"
              ]
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/account-update-cheque-book-request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-update-cheque-book-response"
                }
              },
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/encrypted"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request. Errors can be like malformed request syntax, invalid request message parameters etc. Refer to response message for more details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-bad-request"
                }
              }
            }
          },
          "403": {
            "description": "Certificate Mismatch",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-certificate-mismatch"
                }
              }
            }
          },
          "404": {
            "description": "Resource not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-notfound"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server / Unexpected Error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/fail-unexpected"
                }
              }
            }
          }
        },
        "x-markets": "IN"
      }
    }
  },
  "components": {
    "schemas": {
      "encrypted": {
        "type": "string",
        "description": "Encrypted Message base on JWE standard",
        "example": "eyJraWQiOiI0UTVZMDU1V1NHNFFLMTAxNDcxIiwiZW5jIjoiQTI1NkNCQy1IUzUxMiIsImFsZyI6IlJTQS1PQUVQLTI1NiJ9.kuq6D5pf_cSykPcukL2amWBIyvc6lm49wjuX440CWXvPSXzenwroxpNNfIs8NVuh15xQleXfv8tDwBaamepHQHF8K7xr8BkAoyFYRNLxUpkF4PCG1WbhcQrqVQHYpEXOmReqaiOtZcfHAfE67PxP_ajwnEWoSYyTlUuEM1eQZBRUVg5giOTZpYWjjpfF2nvFxJQY36q-8dHt2AWP2OpQuFcO_NnahC2k3n0X-WuuIUhRlXjvOYgv--KuLC49gvMvVEEqQ041eOTn6t3MLr5Nh48FmD4UxzSF3hePr-DUjK-bZltPW0RnMNCdXzbPGF7OjNm9EPQC6aYtCa-EvKDZmw.XxkayMQH5TT3t4W9zuJtDQ.5-hBIs6mKkSilQuLiofNPYVmdVRmFm0VdNt65qL40jtZG62RDvqUcxw5HeWRWUHt9TIg_GtrLAdVuvt2V0avgqRBeIOj84n5Nx_qphCN1846Dhv-73F5qculYBjdMSFdQoOwmcbIOJKtuF1klRJvIoDc2ebFtkb7YKmrcwDnlBueB-lIDn8G3UcowS9x9z1Cxq4UpkYJjRy-Ak4WuROrJvfHEUpvD7Q7jibIhstKS9oz4kxA5Vc5bzqlRmmjGRn0OiCUeDnUOEwZvCtSG-5WM5W71KI_bUHF9bGNd37-RlRnCsgt0i1ApiNwiI3kOVuHw0nt1bgY5XvXuf5VVjj1dc60yQLPl_VS7I17CgILzRLPS8uFQ8NPrJITGjmZEAvIR7dOxXa16PzRmJUKEE6ioxbKrdnsG1bZqugtx52GCk0gveXtwyH6zH-8h0t9QUdmwtZamZVkjEJlVuPU1SBrrwtHe1CTW9XNIVUMSuIBe_uvF0rcm4k5Jp98gy5ecsI3r81BJn30uLV3Hk4HGoHJ1Hrza9A6q0nEEqQ-XqfSXQEUBVuS8PmQRUIe409isnwdJIQHP3SehVt2nRufh9bDfQ.Yw3C1zME5UShNGZ7oa8eN-Cg3SeM0dKxRWObZwaHdWk"
      },
      "signed": {
        "type": "string",
        "description": "Signed Message base on JWS standard",
        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJFUzI1NiJ9.eyJhY2Nlc3MtdG9rZW4iOiIxYWFmN2Y0OC00NGRhLTQ5OWUtYmRmMi04OWQ2ZDlkYzM5NzcifQ.eZubyvKstz8lYmAVCfQnAUZ8k4IO6JU0tn8vvZNLWDdXKthA-K0UkQ6GnoURpruoFr4QD7Cy_8uRMBEigm1BSQ"
      },
      "account-cheque-details-request": {
        "type": "object",
        "required": [
          "account-id",
          "currency-code",
          "cheque-start-no",
          "cheque-end-no"
        ],
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-no": {
            "type": "string",
            "description": "Cheque start number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "cheque-end-no": {
            "type": "string",
            "description": "Cheque end number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099255"
          },
          "start-date": {
            "type": "string",
            "description": "Start date of the entry date in YYYY-MM-DD format",
            "maxLength": 13,
            "example": "2023-01-15"
          },
          "end-date": {
            "type": "string",
            "description": "End date of the entry date in YYYY-MM-DD format",
            "maxLength": 13,
            "example": "2023-02-25"
          }
        }
      },
      "account-cheque-details-response": {
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "account-number": {
            "type": "string",
            "description": "Masked account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "XXXXX1231"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-details": {
            "type": "array",
            "description": "Cheque details",
            "items": {
              "type": "object",
              "properties": {
                "cheque-number": {
                  "type": "string",
                  "description": "Cheque number",
                  "minLength": 1,
                  "maxLength": 16,
                  "example": 610201
                },
                "status": {
                  "type": "string",
                  "description": "Cheque leaf status <table style='border: 0.5px solid; '>\n  <thead>\n    <tr>\n      <th width='10%'>Code</th>\n      <th width='90%'>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr><td>S</td><td>Stopped</td></tr>\n    <tr><td>P</td><td>Paid</td></tr>\n    <tr><td>O</td><td>Open</td></tr>\n    <tr><td>R</td><td>Returned</td></tr>\n  </tbody>\n</table>",
                  "minLength": 1,
                  "maxLength": 1,
                  "example": "S"
                },
                "amount": {
                  "type": "number",
                  "description": "Cheque amount",
                  "maxLength": 25,
                  "example": 250000
                },
                "entry-date": {
                  "type": "string",
                  "description": "Cheque entry date in YYYY-MM-DD format",
                  "maxLength": 13,
                  "example": "2021-01-16"
                },
                "paid-date": {
                  "type": "string",
                  "description": "Cheque paid date in YYYY-MM-DD format",
                  "maxLength": 13,
                  "example": "2023-01-18"
                },
                "stop-date": {
                  "type": "string",
                  "description": "Stop cheque date in YYYY-MM-DD format",
                  "maxLength": 13,
                  "example": "2023-01-22"
                },
                "expiry-date": {
                  "type": "string",
                  "description": "Expiry date in YYYY-MM-DD format",
                  "maxLength": 13,
                  "example": "2023-02-15"
                }
              }
            }
          }
        },
        "example": {
          "account-id": "nSphJywtmOzpD~73T~m8tVqchAv",
          "account-number": "XXXXX1231",
          "currency-code": "INR",
          "cheque-details": [
            {
              "cheque-number": "1523486423099254",
              "status": "S",
              "amount": 250000,
              "entry-date": "2023-01-16",
              "paid-date": "2023-01-18",
              "stop-date": "2023-01-22",
              "expiry-date": "2023-02-15"
            },
            {
              "cheque-number": "1523486423099255",
              "status": "S",
              "amount": 150000,
              "entry-date": "2023-02-16",
              "paid-date": "2023-02-18",
              "stop-date": "2023-02-22",
              "expiry-date": "2023-03-15"
            }
          ]
        }
      },
      "account-cheque-stop-request-1": {
        "type": "object",
        "required": [
          "account-id",
          "currency-code",
          "cheque-start-number",
          "reason-code",
          "medium-of-receipt"
        ],
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "minLength": 1,
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-cheque-stop-request-2": {
        "type": "object",
        "required": [
          "account-id",
          "currency-code",
          "cheque-start-number",
          "cheque-end-number",
          "reason-code",
          "medium-of-receipt"
        ],
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "cheque-end-number": {
            "type": "string",
            "description": "In case of a series of cheque to be stopped, then pass in either of cheque-end-number or number-of-leaves attribute",
            "maxLength": 16,
            "example": "1523486423099255"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "minLength": 1,
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-cheque-stop-request-3": {
        "type": "object",
        "required": [
          "account-id",
          "currency-code",
          "cheque-start-number",
          "number-of-leaves",
          "reason-code",
          "medium-of-receipt"
        ],
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "In case of a series of cheque to be stopped, then pass in either of cheque-end-number or number-of-leaves attribute",
            "maxLength": 3,
            "example": "2"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "minLength": 1,
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-cheque-stop-response-1": {
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "account-number": {
            "type": "string",
            "description": "Account number to be displayed",
            "example": "XXXXXX2683",
            "minLength": 1,
            "maxLength": 20
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-cheque-stop-response-2": {
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "account-number": {
            "type": "string",
            "description": "Account number to be displayed",
            "example": "XXXXXX2683",
            "minLength": 1,
            "maxLength": 20
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "cheque-end-number": {
            "type": "string",
            "description": "Cheque end number",
            "maxLength": 16,
            "example": "1523486423099255"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-cheque-stop-response-3": {
        "type": "object",
        "properties": {
          "account-id": {
            "type": "string",
            "description": "Tokenised account number",
            "minLength": 1,
            "maxLength": 20,
            "example": "nSphJywtmOzpD~73T~m8tVqchAv"
          },
          "account-number": {
            "type": "string",
            "description": "Account number to be displayed",
            "example": "XXXXXX2683",
            "minLength": 1,
            "maxLength": 20
          },
          "currency-code": {
            "type": "string",
            "description": "Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR",
            "enum": [
              "INR"
            ]
          },
          "cheque-start-number": {
            "type": "string",
            "description": "Cheque start number",
            "minLength": 1,
            "maxLength": 16,
            "example": "1523486423099254"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "In case of a series of cheque to be stopped, then either of cheque-end-number or number-of-leaves attribute to be passed",
            "maxLength": 3,
            "example": "2"
          },
          "reason-code": {
            "type": "string",
            "description": "Reason Code\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>HCR</td><td>Stop Cheque - Reason not available in the sys</td></tr>\n      <tr><td>STB</td><td>Stop Cheque - Lost Cheque book</td></tr>\n      <tr><td>STL</td><td>Stop Cheque - Lost Cheque</td></tr>\n      <tr><td>STN</td><td>Stop Cheque - Non receipt/undelivered Cheque Book</td></tr>\n      <tr><td>STO</td><td>Stop Cheque - Others</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 3,
            "example": "STB"
          },
          "medium-of-receipt": {
            "type": "string",
            "description": "Medium of receipt contains a list of options for raising a stop cheque instruction. Available values are Email, Fax, Person, Courier, I-Banking, IVR, SWIFT, Others, Verbal, Written",
            "example": "I-Banking",
            "enum": [
              "I-Banking",
              "Others"
            ],
            "minLength": 1,
            "maxLength": 9
          },
          "cheque-date": {
            "type": "string",
            "description": "Date of the cheque on which it was drawn in YYYY-MM-DD format",
            "example": "2021-11-21",
            "maxLength": 13
          },
          "cheque-amount": {
            "type": "string",
            "description": "Amount for which the cheque was issued",
            "maxLength": 25,
            "example": "1000"
          }
        }
      },
      "account-create-cheque-book-request": {
        "type": "object",
        "required": [
          "request-date",
          "currency-code",
          "casa-number",
          "channel-id",
          "branch-code"
        ],
        "properties": {
          "request-date": {
            "type": "string",
            "description": "Date of request for cheque book in YYYY-MM-DD format",
            "minLength": 1,
            "maxLength": 10,
            "example": "2021-04-12"
          },
          "currency-code": {
            "type": "string",
            "description": "3 character ISO Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "PKR"
          },
          "casa-number": {
            "type": "string",
            "description": "Account number of the customer",
            "minLength": 1,
            "maxLength": 20,
            "example": "11222955201"
          },
          "channel-id": {
            "type": "string",
            "description": "Channel from where the request is posted",
            "minLength": 1,
            "maxLength": 4,
            "example": "1231"
          },
          "number-of-books": {
            "type": "string",
            "description": "Number of Cheque Books requested by the customer",
            "minLength": 1,
            "maxLength": 3,
            "example": "1"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "Number of leaves on cheque book",
            "maxLength": 5,
            "example": "1"
          },
          "delivery-channel": {
            "type": "string",
            "description": "Which Cheque Books should be delivered to the customer\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>M</td><td>Mail – Delivered to the customer through mail</td></tr>\n      <tr><td>C</td><td>Cash Courier – Delivered to the customer through courier</td></tr>\n      <tr><td>P</td><td>PSB Courier - Delivered to Corporate customers through PSB courier. This is used only in Srilanka</td></tr>\n      <tr><td>H</td><td>Hold at Operations - Cheque books will be held at operations mainly for Counter cheques</td></tr>\n      <tr><td>B</td><td>Branch – Cheque book will be held at the branch and the customer will have to collect the Cheque book from the branch</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "B",
            "enum": [
              "M",
              "C",
              "P",
              "H",
              "B"
            ]
          },
          "branch-code": {
            "description": "Branch code of the customer to collect cheque book. Click on the link to view LOV - https://confluence.global.standardchartered.com/display/OBP/Branch-code+LOV",
            "type": "string",
            "minLength": 3,
            "maxLength": 5,
            "example": "027"
          },
          "book-style": {
            "type": "string",
            "description": "Book style of the cheque book  that decides the number of leaves per book",
            "minLength": 2,
            "maxLength": 2,
            "example": null
          },
          "account-payee": {
            "type": "string",
            "description": "Account payee cheque\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "cheque-print-name": {
            "type": "string",
            "description": "Indicator to print the name in the cheque book\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to be printed on cheque book",
            "maxLength": 110,
            "example": "XXX"
          },
          "charges-waived": {
            "type": "string",
            "description": "Indicator for charge waiver for the cheque book request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          }
        }
      },
      "account-create-cheque-book-response": {
        "type": "object",
        "properties": {
          "request-id": {
            "type": "string",
            "description": "Indicates the unique Request Id generated by the system for every request for Cheque Book. Refers to the Request Id that is used to identify Cheque Book request details. This Request Id is displayed by the system based on the Account Number entered",
            "minLength": 1,
            "maxLength": 13,
            "example": "1553510113300112130202104120769"
          },
          "request-date": {
            "type": "string",
            "description": "Date of request for cheque book in YYYY-MM-DD format",
            "maxLength": 10,
            "example": "2021-04-12"
          },
          "currency-code": {
            "type": "string",
            "description": "3 character Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "PKR"
          },
          "casa-number": {
            "type": "string",
            "description": "Account number of the customer",
            "maxLength": 20,
            "example": "11222955201"
          },
          "channel-id": {
            "type": "string",
            "description": "Channel from where the request is posted",
            "maxLength": 4,
            "example": "1231"
          },
          "number-of-books": {
            "type": "string",
            "description": "Number of Cheque Books requested by the customer",
            "minLength": 1,
            "maxLength": 3,
            "example": "1"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "Number of leaves on cheque book",
            "maxLength": 5,
            "example": "10"
          },
          "delivery-channel": {
            "type": "string",
            "description": "Which Cheque Books should be delivered to the customer\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>M</td><td>Mail – Delivered to the customer through mail</td></tr>\n      <tr><td>C</td><td>Cash Courier – Delivered to the customer through courier</td></tr>\n      <tr><td>P</td><td>PSB Courier - Delivered to Corporate customers through PSB courier. This is used only in Srilanka</td></tr>\n      <tr><td>H</td><td>Hold at Operations - Cheque books will be held at operations mainly for Counter cheques</td></tr>\n      <tr><td>B</td><td>Branch – Cheque book will be held at the branch and the customer will have to collect the Cheque book from the branch</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "B",
            "enum": [
              "M",
              "C",
              "P",
              "H",
              "B"
            ]
          },
          "branch-code": {
            "description": "Branch code of the customer to collect cheque book. Click on the link to view LOV - https://confluence.global.standardchartered.com/display/OBP/Branch-code+LOV",
            "type": "string",
            "minLength": 3,
            "maxLength": 5,
            "example": "027"
          },
          "book-style": {
            "type": "string",
            "description": "Book style of the cheque book  that decides the number of leaves per book",
            "minLength": 2,
            "maxLength": 2,
            "example": null
          },
          "account-payee": {
            "type": "string",
            "description": "Account payee cheque\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "cheque-print-name": {
            "type": "string",
            "description": "Indicator to print the name in the cheque book\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to be printed on cheque book",
            "maxLength": 110,
            "example": "XXX"
          },
          "charges-waived": {
            "type": "string",
            "description": "Indicator for charge waiver for the cheque book request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          }
        }
      },
      "account-enquiry-cheque-book-response": {
        "type": "object",
        "properties": {
          "request-id": {
            "type": "string",
            "description": "Indicates the unique Request Id generated by the system for every request for Cheque Book. Refers to the Request Id that is used to identify Cheque Book request details. This Request Id is displayed by the system based on the Account Number entered",
            "example": "01S1168142E",
            "maxLength": 13
          },
          "request-date": {
            "type": "string",
            "description": "Date of request for cheque book in YYYY-MM-DD format",
            "maxLength": 10,
            "example": "2021-04-12"
          },
          "currency-code": {
            "type": "string",
            "description": "3 character ISO Currency code",
            "minLength": 3,
            "maxLength": 3,
            "example": "INR"
          },
          "casa-number": {
            "type": "string",
            "description": "Account number of the customer",
            "maxLength": 20,
            "example": "11222955201"
          },
          "channel-id": {
            "type": "string",
            "description": "Channel from where the request is posted",
            "maxLength": 4,
            "example": "1231"
          },
          "number-of-books": {
            "type": "string",
            "description": "Number of Cheque Books requested by the customer",
            "maxLength": 3,
            "example": "1"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "Number of leaves on cheque book",
            "maxLength": 5,
            "example": "10"
          },
          "delivery-channel": {
            "type": "string",
            "description": "Which Cheque Books should be delivered to the customer\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>M</td><td>Mail – Delivered to the customer through mail</td></tr>\n      <tr><td>C</td><td>Cash Courier – Delivered to the customer through courier</td></tr>\n      <tr><td>P</td><td>PSB Courier - Delivered to Corporate customers through PSB courier. This is used only in Srilanka</td></tr>\n      <tr><td>H</td><td>Hold at Operations - Cheque books will be held at operations mainly for Counter cheques</td></tr>\n      <tr><td>B</td><td>Branch – Cheque book will be held at the branch and the customer will have to collect the Cheque book from the branch</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "B",
            "enum": [
              "M",
              "C",
              "P",
              "H",
              "B"
            ]
          },
          "branch-code": {
            "description": "Branch code of the customer to collect cheque book. Click on the link to view LOV - https://confluence.global.standardchartered.com/display/OBP/Branch-code+LOV",
            "type": "string",
            "minLength": 3,
            "maxLength": 5,
            "example": "027"
          },
          "request-status": {
            "type": "string",
            "description": "Status of the request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>1</td><td>Active</td></tr>\n      <tr><td>8</td><td>nactive</td></tr>\n      <tr><td>51</td><td>New</td></tr>\n      <tr><td>53</td><td>Rejected</td></tr>\n    </tbody>\n  </table>",
            "minLength": 2,
            "maxLength": 2,
            "example": "1",
            "enum": [
              1,
              8,
              51,
              53
            ]
          },
          "book-style": {
            "type": "string",
            "description": "Book style of the cheque book  that decides the number of leaves per book",
            "minLength": 2,
            "maxLength": 2,
            "example": null
          },
          "CBOS-order-number": {
            "type": "string",
            "description": "Order number recived from CBOS",
            "maxLength": 20,
            "example": "32439880932"
          },
          "account-payee": {
            "type": "string",
            "description": "Account payee cheque\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "cheque-print-name": {
            "type": "string",
            "description": "Indicator to print the name in the cheque book\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to be printed on cheque book",
            "maxLength": 110,
            "example": "XXX"
          },
          "charges-waived": {
            "type": "string",
            "description": "Indicator for charge waiver for the cheque book request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "minLength": 1,
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "external-refernce-id": {
            "type": "string",
            "description": "External system refernce ID",
            "maxLength": 32,
            "example": "23423213"
          },
          "external-refernce-reason": {
            "type": "string",
            "description": "Reason for the cheque book request",
            "maxLength": 100,
            "example": "New Cheque Book"
          }
        }
      },
      "account-update-cheque-book-request": {
        "type": "object",
        "required": [
          "request-date",
          "currency-code",
          "casa-number",
          "channel-id",
          "book-style"
        ],
        "properties": {
          "request-id": {
            "type": "string",
            "description": "Indicates the unique Request Id generated by the system for every request for Cheque Book. Refers to the Request Id that is used to identify Cheque Book request details. This Request Id is displayed by the system based on the Account Number entered",
            "maxLength": 13,
            "example": "1897175397043"
          },
          "request-date": {
            "type": "string",
            "description": "Date of request for cheque book in YYYY-MM-DD format.",
            "minLength": 1,
            "maxLength": 10,
            "example": "2019-08-23"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency Code of the Account",
            "minLength": 1,
            "maxLength": 3,
            "example": "INR"
          },
          "casa-number": {
            "type": "string",
            "description": "Indicates the account number of the customer, which is to be debited for Cheque Book issuance charges",
            "minLength": 1,
            "maxLength": 20,
            "example": "11222955201"
          },
          "segment-code": {
            "type": "string",
            "description": "Segment Code of the Account",
            "maxLength": 2,
            "example": "11"
          },
          "channel-id": {
            "type": "string",
            "description": "Channel from where the request is posted",
            "minLength": 1,
            "maxLength": 4,
            "example": "11"
          },
          "number-of-books": {
            "type": "string",
            "description": "Indicates the number of Cheque Books requested by the customer. A maximum of 99 Cheque Books is allowed per request. The number of Cheque Books is defaulted with the value based on the Institution Classification Code of the Account holder. However, the user can modify the value of this field",
            "maxLength": 3,
            "example": "1"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "Number of leaves on cheque book",
            "maxLength": 5,
            "example": "10"
          },
          "delivery-channel": {
            "type": "string",
            "description": "Refers to the medium/channel through which Cheque Books should be delivered to the customer\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>M</td><td>Mail – Delivered to the customer through mail</td></tr>\n      <tr><td>C</td><td>Cash Courier – Delivered to the customer through courier</td></tr>\n      <tr><td>P</td><td>PSB Courier - Delivered to Corporate customers through PSB courier. This is used only in Srilanka</td></tr>\n      <tr><td>H</td><td>Hold at Operations - Cheque books will be held at operations mainly for Counter cheques</td></tr>\n      <tr><td>B</td><td>Branch – Cheque book will be held at the branch and the customer will have to collect the Cheque book from the branch</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "B",
            "enum": [
              "M",
              "C",
              "P",
              "H",
              "B"
            ]
          },
          "request-status": {
            "type": "string",
            "description": "Status of the request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>1</td><td>Active</td></tr>\n      <tr><td>8</td><td>Inactive</td></tr>\n      <tr><td>51</td><td>New</td></tr>\n      <tr><td>53</td><td>Rejected</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 2,
            "example": "1",
            "enum": [
              1,
              8,
              51,
              53
            ]
          },
          "book-style": {
            "type": "string",
            "description": "Book style contains the different styles of a Cheque book that decides the number of leaves per book",
            "minLength": 1,
            "maxLength": 2,
            "example": null
          },
          "CBOS-order-number": {
            "type": "string",
            "description": "Order number recived from CBOS",
            "maxLength": 20,
            "example": "32439880932"
          },
          "cheque-print-name": {
            "type": "string",
            "description": "Indicator to print the name in the cheque book\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to be printed on cheque book",
            "maxLength": 110,
            "example": "XXX"
          },
          "charges-waived": {
            "type": "string",
            "description": "Indicator for charge waiver for the cheque book request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          }
        }
      },
      "account-update-cheque-book-response": {
        "type": "object",
        "properties": {
          "request-id": {
            "type": "string",
            "description": "Indicates the unique Request Id generated by the system for every request for Cheque Book. Refers to the Request Id that is used to identify Cheque Book request details. This Request Id is displayed by the system based on the Account Number entered",
            "maxLength": 13,
            "example": "1897175397043"
          },
          "request-date": {
            "type": "string",
            "description": "Date of request for cheque book in YYYY-MM-DD format",
            "minLength": 1,
            "maxLength": 10,
            "example": "2019-08-23"
          },
          "currency-code": {
            "type": "string",
            "description": "Currency Code of the Account",
            "minLength": 1,
            "maxLength": 3,
            "example": "INR"
          },
          "casa-number": {
            "type": "string",
            "description": "Indicates the account number of the customer, which is to be debited for Cheque Book issuance charges",
            "minLength": 1,
            "maxLength": 20,
            "example": "11222955201"
          },
          "segment-code": {
            "type": "string",
            "description": "Segment Code of the Account",
            "maxLength": 2,
            "example": "11"
          },
          "channel-id": {
            "type": "string",
            "description": "Channel from where the request is posted",
            "minLength": 1,
            "maxLength": 4,
            "example": "11"
          },
          "number-of-books": {
            "type": "string",
            "description": "Indicates the number of Cheque Books requested by the customer. A maximum of 99 Cheque Books is allowed per request. The number of Cheque Books is defaulted with the value based on the Institution Classification Code of the Account holder. However, the user can modify the value of this field",
            "maxLength": 3,
            "example": "1"
          },
          "number-of-leaves": {
            "type": "string",
            "description": "Number of leaves on cheque book",
            "maxLength": 5,
            "example": "10"
          },
          "delivery-channel": {
            "type": "string",
            "description": "Refers to the medium/channel through which Cheque Books should be delivered to the customer\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>M</td><td>Mail – Delivered to the customer through mail</td></tr>\n      <tr><td>C</td><td>Cash Courier – Delivered to the customer through courier</td></tr>\n      <tr><td>P</td><td>PSB Courier - Delivered to Corporate customers through PSB courier. This is used only in Srilanka</td></tr>\n      <tr><td>H</td><td>Hold at Operations - Cheque books will be held at operations mainly for Counter cheques</td></tr>\n      <tr><td>B</td><td>Branch – Cheque book will be held at the branch and the customer will have to collect the Cheque book from the branch</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "B",
            "enum": [
              "M",
              "C",
              "P",
              "H",
              "B"
            ]
          },
          "request-status": {
            "type": "string",
            "description": "Status of the request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>1</td><td>Active</td></tr>\n      <tr><td>8</td><td>Inactive</td></tr>\n      <tr><td>51</td><td>New</td></tr>\n      <tr><td>53</td><td>Rejected</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 2,
            "example": "1",
            "enum": [
              1,
              8,
              51,
              53
            ]
          },
          "book-style": {
            "type": "string",
            "description": "Book style contains the different styles of a Cheque book that decides the number of leaves per book",
            "minLength": 1,
            "maxLength": 2,
            "example": null
          },
          "CBOS-order-number": {
            "type": "string",
            "description": "Order number recived from CBOS",
            "maxLength": 20,
            "example": "32439880932"
          },
          "cheque-print-name": {
            "type": "string",
            "description": "Indicator to print the name in the cheque book\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name to be printed on cheque book",
            "maxLength": 110,
            "example": "XXX"
          },
          "charges-waived": {
            "type": "string",
            "description": "Indicator for charge waiver for the cheque book request\n  <table style='border: 0.5px solid; '>\n    <thead>\n      <tr>\n        <th width='10%'>Code</th>\n        <th width='90%'>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr><td>Y</td><td>YES</td></tr>\n      <tr><td>N</td><td>NO</td></tr>\n    </tbody>\n  </table>",
            "maxLength": 1,
            "example": "Y",
            "enum": [
              "Y",
              "N"
            ]
          }
        }
      },
      "error": {
        "description": "Error object details",
        "title": "error",
        "required": [
          "id",
          "code",
          "detail"
        ],
        "type": "object",
        "properties": {
          "id": {
            "description": "The transaction id from the request header, if the transaction id was not present in the request header, a generated random UUID will shown here for tracking purposes.",
            "type": "string"
          },
          "code": {
            "description": "An application-specific error code",
            "type": "string"
          },
          "detail": {
            "description": "A human-readable explanation specific to this occurrence of the problem",
            "type": "string"
          },
          "source": {
            "description": "Source of the error - denotes the name of parameter name causing the problem",
            "type": "string"
          }
        },
        "example": {
          "id": "1234",
          "code": "E001",
          "detail": "Field is mandatory",
          "source": "first-name"
        }
      },
      "errors": {
        "description": "List of error object",
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/error"
        }
      },
      "fail-bad-request": {
        "$ref": "#/components/schemas/errors"
      },
      "fail-certificate-mismatch": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Certificate used in API call did not match",
            "example": "Certificate mismatch"
          }
        }
      },
      "fail-unexpected": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the transaction-id from the request header"
          },
          "code": {
            "type": "string",
            "description": "Response Code. Refer to Response Code Table for list of responses."
          },
          "detail": {
            "type": "string",
            "description": "Details of the error.",
            "example": "Unexpected error occurred"
          }
        },
        "example": {
          "id": "86c1d522-efab-479c-9c4a-d51f1c3152d8",
          "code": "E005",
          "detail": "Unexpected error occurred"
        }
      },
      "fail-notfound": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "the transaction-id from the request header"
          },
          "code": {
            "type": "string",
            "description": "Response Code.Refer to Response Code Table for list of responses."
          },
          "detail": {
            "type": "string",
            "description": "Details of the error"
          }
        },
        "example": {
          "id": "75c1d522-efab-473d-9c4a-d51f1c3152d8",
          "code": "E005",
          "detail": "Resource not found"
        }
      }
    }
  }
}